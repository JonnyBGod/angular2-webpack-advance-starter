{"version":3,"sources":["webpack:///main.006a48d44c906302dc18.bundle.js","webpack:///./~/@ngrx/store/dispatcher.js","webpack:///./~/@ngrx/store/index.js","webpack:///./~/@ngrx/store/ng2.js","webpack:///./~/@ngrx/store/store-backend.js","webpack:///./~/@ngrx/store/store.js","webpack:///./~/@ngrx/store/utils.js","webpack:///./~/angulartics2/index.js","webpack:///./~/angulartics2/src/core/angulartics2.js","webpack:///./~/angulartics2/src/core/angulartics2On.js","webpack:///./~/angulartics2/src/providers/angulartics2-segment.js","webpack:///./~/lodash/index.js","webpack:///ng2-translate.ts","webpack:///translate.parser.ts","webpack:///translate.pipe.ts","webpack:///translate.service.ts","webpack:///./~/ngrx-store-router/index.js","webpack:///./~/ngrx-store-router/middleware.js","webpack:///./~/ngrx-store-router/reducer.js","webpack:///./~/ngrx-store-router/subscriber.js","webpack:///./~/rxjs/BehaviorSubject.js","webpack:///./~/rxjs/Notification.js","webpack:///./~/rxjs/ReplaySubject.js","webpack:///./~/rxjs/add/observable/fromEvent.js","webpack:///./~/rxjs/add/observable/of.js","webpack:///./~/rxjs/add/operator/distinctUntilChanged.js","webpack:///./~/rxjs/add/operator/do.js","webpack:///./~/rxjs/add/operator/filter.js","webpack:///./~/rxjs/add/operator/let.js","webpack:///./~/rxjs/add/operator/merge.js","webpack:///./~/rxjs/add/operator/observeOn.js","webpack:///./~/rxjs/add/operator/scan.js","webpack:///./~/rxjs/add/operator/share.js","webpack:///./~/rxjs/add/operator/toArray.js","webpack:///./~/rxjs/observable/ArrayObservable.js","webpack:///./~/rxjs/observable/ConnectableObservable.js","webpack:///./~/rxjs/observable/EmptyObservable.js","webpack:///./~/rxjs/observable/FromEventObservable.js","webpack:///./~/rxjs/observable/ScalarObservable.js","webpack:///./~/rxjs/observable/fromEvent.js","webpack:///./~/rxjs/observable/of.js","webpack:///./~/rxjs/operator/distinctUntilChanged.js","webpack:///./~/rxjs/operator/do.js","webpack:///./~/rxjs/operator/filter.js","webpack:///./~/rxjs/operator/let.js","webpack:///./~/rxjs/operator/merge.js","webpack:///./~/rxjs/operator/mergeAll.js","webpack:///./~/rxjs/operator/multicast.js","webpack:///./~/rxjs/operator/observeOn.js","webpack:///./~/rxjs/operator/scan.js","webpack:///./~/rxjs/operator/share.js","webpack:///./~/rxjs/operator/toArray.js","webpack:///./~/rxjs/scheduler/FutureAction.js","webpack:///./~/rxjs/scheduler/QueueAction.js","webpack:///./~/rxjs/scheduler/QueueScheduler.js","webpack:///./~/rxjs/scheduler/queue.js","webpack:///./~/rxjs/util/isScheduler.js","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.scss","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/about/index.ts","webpack:///./src/app/components/app.component.html","webpack:///./src/app/components/app.component.scss","webpack:///./src/app/components/app.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/home/index.ts","webpack:///./src/app/components/navbar.component.html","webpack:///./src/app/components/navbar.component.scss","webpack:///./src/app/components/navbar.component.ts","webpack:///./src/app/components/toolbar.component.html","webpack:///./src/app/components/toolbar.component.scss","webpack:///./src/app/components/toolbar.component.ts","webpack:///./src/app/frameworks/analytics.framework/index.ts","webpack:///./src/app/frameworks/analytics.framework/services/analytics.service.ts","webpack:///./src/app/frameworks/app.framework/index.ts","webpack:///./src/app/frameworks/app.framework/services/name-list.service.ts","webpack:///./src/app/frameworks/core.framework/decorators/base.component.ts","webpack:///./src/app/frameworks/core.framework/decorators/form.component.ts","webpack:///./src/app/frameworks/core.framework/decorators/route.component.ts","webpack:///./src/app/frameworks/core.framework/decorators/utils.ts","webpack:///./src/app/frameworks/core.framework/directives/platform.directive.ts","webpack:///./src/app/frameworks/core.framework/index.ts","webpack:///./src/app/frameworks/core.framework/services/console.service.ts","webpack:///./src/app/frameworks/core.framework/services/core-config.service.ts","webpack:///./src/app/frameworks/core.framework/services/http.service.ts","webpack:///./src/app/frameworks/core.framework/services/log.service.ts","webpack:///./src/app/frameworks/core.framework/services/view-broker.service.ts","webpack:///./src/app/frameworks/core.framework/services/window.service.ts","webpack:///./src/app/frameworks/electron.framework/index.ts","webpack:///./src/app/frameworks/electron.framework/services/event.service.ts","webpack:///./src/app/frameworks/i18n.framework/components/lang-switcher.component.html","webpack:///./src/app/frameworks/i18n.framework/components/lang-switcher.component.ts","webpack:///./src/app/frameworks/i18n.framework/index.ts","webpack:///./src/app/frameworks/i18n.framework/services/multilingual.service.ts","webpack:///./src/main.browser.ts"],"names":["exports","ids","modules","346","module","__webpack_require__","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","Subject_1","Dispatcher","_super","apply","arguments","dispatch","action","next","Subject","48","__export","m","534","provideStore","reducer","initialState","core_1","provide","REDUCER","useFactory","utils_1","combineReducers","INITIAL_STATE","deps","undefined","type","store_backend_1","ActionTypes","INIT","PRE_MIDDLEWARE","multi","useValue","T","POST_MIDDLEWARE","dispatcherProvider","storeProvider","storeBackendProvider","resolvedPreMiddlewareProvider","resolvedPostMiddlewareProvider","usePreMiddleware","middleware","_i","length","provideMiddlewareForToken","usePostMiddleware","createMiddleware","OpaqueToken","token","_middleware","isProvider","t","Provider","provider","Injector","injector","map","get","compose","filter","concat","dispatcher_1","store_1","RESOLVED_PRE_MIDDLEWARE","RESOLVED_POST_MIDDLEWARE","Store","StoreBackend","dispatcher","backend","preMiddleware","postMiddleware","347","queue_1","_dispatcher","_reducer","_initialState","_preMiddleware","_postMiddleware","_init","connect","nextCallbackFn","_this","let","observeOn","queue","scan","state","subscribe","replaceReducer","348","BehaviorSubject_1","_backend","call","select","keyOrSelector","distinctUntilChanged","TypeError","getState","value","error","BehaviorSubject","349","reducers","reducerKeys","keys","finalReducers","i","key","finalReducerKeys","hasChanged","nextState","previousStateForKey","nextStateForKey","funcs","args","last","rest","slice","reduceRight","composed","f","350","angulartics2_1","defineProperty","default","providers","Angulartics2","135","__decorate","decorators","target","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","k","v","metadata","ReplaySubject_1","common_1","location","settings","pageTracking","autoTrackVirtualPages","basePath","excludedRoutes","eventTracking","developerMode","pageTrack","ReplaySubject","eventTrack","exceptionTrack","setAlias","setUsername","setUserProperties","setUserPropertiesOnce","setSuperProperties","setSuperPropertiesOnce","userTimings","trackLocation","url","matchesExcludedRoute","path","prepareExternalUrl","virtualPageviews","excludeRoutes","routes","firstPageview","autoTrackFirstPage","withBase","_a","excludedRoute","RegExp","test","indexOf","Injectable","Location","535","platform_browser_1","dom_adapter_1","Angulartics2On","elRef","angulartics2","eventManager","el","nativeElement","ngAfterContentInit","addEventListener","angulartics2On","event","angularticsIf","eval","angularticsEvent","inferEventName","properties","eventType","angularticsCategory","category","angularticsProperties","assign","isCommand","getDOM","tagName","toLowerCase","getText","getValue","getProperty","Input","String","Directive","selector","ElementRef","EventManager","351","Angulartics2Segment","x","analytics","page","e","ReferenceError","track","userId","identify","alias","381","__WEBPACK_AMD_DEFINE_RESULT__","baseCompareAscending","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","reverse","outer","iterIndex","data","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","Array","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","FUNC_ERROR_TEXT","setTimeout","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","createPartialWrapper","createRound","methodName","Math","number","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","pairs","getNative","isNative","transforms","size","input","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","replace","rePropName","match","quote","reEscapeChar","chunk","compact","drop","n","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","findWhere","find","includes","isString","pluck","reject","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","id","now","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isFinite","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","trim","nativeParseInt","reHasHexPrefix","startsWith","template","otherOptions","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","global","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","noConflict","_","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","defaults","pick","contextProps","Date","Error","Number","arrayProto","objectProto","stringProto","toString","WeakMap","ceil","floor","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","modArgs","partial","partialRight","rearg","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","kebabCase","padLeft","padRight","snakeCase","startCase","method","methodOf","round","backflow","collect","each","eachRight","extend","methods","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","a","u","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","228","http_1","translate_pipe_1","translate_service_1","TRANSLATE_PROVIDERS","TranslateLoader","http","TranslateStaticLoader","Http","TranslateService","pipes","TranslatePipe","382","Parser","templateMatcher","expr","params","split","shift","383","lang_1","translate","_ref","equals","o1","o2","keySet","t1","t2","updateValue","interpolateParams","res","markForCheck","query","lastKey","lastParams","JSON","parse","SyntaxError","_dispose","onLangChange","isPresent","unsubscribe","ngOnDestroy","Pipe","pure","ChangeDetectorRef","229","__param","paramIndex","decorator","Observable_1","translate_parser_1","MissingTranslationHandler","suffix","getTranslation","lang","json","currentLoader","missingTranslationHandler","currentLang","defaultLang","EventEmitter","translations","parser","setDefaultLang","use","pending","changeLang","Observable","of","share","updateLangs","err","setTranslation","getLangs","langs","getParsedResult","observables","key_1","mergedObs","key_2","obs","arr","obj","handle","observer","onComplete","instant","emit","reloadLang","resetLang","Optional","689","subscriber_1","middleware_1","routerMiddleware","subscriber_2","RouterSubscriber","reducer_1","routerReducer","RouterActions","690","router_deprecated_1","router","rs","state$","do","s","init","navigating","navigateByUrl","Router","384","navigated","payload","230","getStore","store","492","throwError_1","ObjectUnsubscribedError_1","_value","hasErrored","throwError","errorValue","isUnsubscribed","ObjectUnsubscribedError","enumerable","configurable","_subscribe","subscriber","subscription","_next","_error","494","Notification","kind","exception","hasValue","observe","accept","nextOrObserver","toObservable","throw","empty","createNext","undefinedValueNotification","createError","createComplete","completeNotification","496","observeOn_1","bufferSize","windowTime","scheduler","events","_windowTime","_getNow","ReplayEvent","_trimBufferThenGetEvents","ObserveOnSubscriber","len","eventsCount","spliceCount","time","498","fromEvent_1","fromEvent","499","of_1","334","distinctUntilChanged_1","500","do_1","_do","501","filter_1","502","let_1","letProto","letBind","503","merge_1","505","506","scan_1","507","share_1","508","toArray_1","335","ScalarObservable_1","EmptyObservable_1","isScheduler_1","ArrayObservable","_isScalar","isScheduler","ScalarObservable","EmptyObservable","schedule","509","Subscriber_1","Subscription_1","ConnectableObservable","subjectFactory","getSubject","subject","ConnectableSubscription","refCount","RefCountObservable","_closeSubscription","connectable","_unsubscribe","Subscription","refCountSubscriber","RefCountSubscriber","connection","destination","refCountObservable","_resetConnectable","_complete","observable","obsConnection","subConnection","Subscriber","510","arg","511","isNodeStyleEventEmmitter","sourceObj","addListener","removeListener","isJQueryStyleEventEmitter","on","off","isNodeList","isHTMLCollection","isEventTarget","removeEventListener","tryCatch_1","errorObject_1","FromEventObservable","eventName","setupSubscription","handler","tryCatch","errorObject","512","done","513","FromEventObservable_1","514","ArrayObservable_1","515","compare","keySelector","lift","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","Boolean","516","DoOperator","DoSubscriber","safeSubscriber","syncErrorThrowable","syncErrorThrown","syncErrorValue","517","FilterOperator","FilterSubscriber","518","520","unshift","mergeStatic","concurrent","mergeAll_1","MergeAllOperator","521","mergeAll","OuterSubscriber_1","subscribeToResult_1","MergeAllSubscriber","hasCompleted","active","subscribeToResult","notifyComplete","innerSub","OuterSubscriber","523","multicast","subjectOrSubjectFactory","ConnectableObservable_1","336","ObserveOnOperator","Notification_1","notification","scheduleMessage","ObserveOnMessage","524","seed","ScanOperator","ScanSubscriber","accumulatorSet","_seed","_tryNext","525","shareSubjectFactory","multicast_1","526","ToArrayOperator","ToArraySubscriber","337","root_1","FutureAction","work","execute","_schedule","clearInterval","setInterval","flush","527","FutureAction_1","QueueAction","528","QueueAction_1","QueueScheduler","scheduledId","scheduleNow","scheduleLater","338","QueueScheduler_1","343","486","693","471","core_framework_1","AboutComponent","BaseComponent","styles","472","487","694","473","app_framework_1","analytics_framework_1","i18n_framework_1","navbar_component_1","toolbar_component_1","home_1","about_1","AppComponent","RouteComponent","viewProviders","NameListService","directives","LangSwitcherComponent","NavbarComponent","ToolbarComponent","PlatformDirective","changeDetection","ChangeDetectionStrategy","Default","RouteConfig","component","HomeComponent","useAsDefault","AnalyticsService","488","695","474","nameListService","newName","addName","FormComponent","475","489","696","325","activeLink","home","about","490","697","476","log","openLanguages","debug","LogService","131","angulartics2_segment_1","analytics_service_1","ANALYTICS_PROVIDERS","326","lodash_1","segment","devMode","enable","Analytics","Inject","202","ngrx_store_router_1","name_list_service_1","APP_PROVIDERS","MULTILINGUAL_PROVIDERS","i18n","multilingualReducer","nameListReducer","328","index_1","index_2","CATEGORY","NAME_LIST_ACTIONS","NAME_ADDED","results","label","HttpService","477","cls","DecoratorUtils","annotateComponent","478","FORM_DIRECTIVES","479","core_config_service_1","CoreConfigService","ROUTER_DIRECTIVES","203","ng2_translate_1","_reflect","getMetadata","customDecoratorMetadata","DIRECTIVES","PIPES","templateUrl","ViewBrokerService","TEMPLATE_URL","styleUrls","IS_MOBILE_NATIVE","OnPush","encapsulation","annotations","Component","defineMetadata","480","window_service_1","renderer","win","platformClass","agent","navigator","userAgent","setElementClass","Renderer","WindowService","31","log_service_1","http_service_1","CORE_PROVIDERS","HTTP_PROVIDERS","ROUTER_PROVIDERS","481","ConsoleService","warn","info","204","IS_WEB","PLATFORM_TARGET","PLATFORMS","WEB","MOBILE_NATIVE","IS_MOBILE_HYBRID","MOBILE_HYBRID","IS_DESKTOP","DESKTOP","IS_DEBUG_MODE","DEBUG","RESET","LEVEL_1","LEVEL_2","LEVEL_3","LEVEL_4","329","response","330","_1","logger","msg","forwardRef","482","paths","join","331","alert","confirm","483","484","ElectronEventService","491","485","electron_framework_1","multilang","supportedLanguages","MultilingualService","SUPPORTED_LANGUAGES","langForm","ControlGroup","Control","detail","console","code","newIndex","99","multilingual_service_1","332","MULTILINGUAL_ACTIONS","LANG_CHANGE","userLang","language","title","main","initialHmrState","platform_browser_dynamic_1","bootstrap","app_component_1","BOOTSTRAP_PROVIDERS","catch","core_framework_2","AppConfigService","ENV_PROVIDERS","enableProdMode","APP_BASE_HREF","LocationStrategy","useClass","HashLocationStrategy","document"],"mappings":"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","file":"main.006a48d44c906302dc18.bundle.js","sourcesContent":["exports.ids = [2];\nexports.modules = {\n\n/***/ 346:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subject_1 = __webpack_require__(32);\n\tvar Dispatcher = (function (_super) {\n\t    __extends(Dispatcher, _super);\n\t    function Dispatcher() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Dispatcher.prototype.dispatch = function (action) {\n\t        this.next(action);\n\t    };\n\t    return Dispatcher;\n\t}(Subject_1.Subject));\n\texports.Dispatcher = Dispatcher;\n\n\n/***/ },\n\n/***/ 48:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(348));\n\t__export(__webpack_require__(349));\n\t__export(__webpack_require__(346));\n\t__export(__webpack_require__(347));\n\t__export(__webpack_require__(534));\n\n\n/***/ },\n\n/***/ 534:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar core_1 = __webpack_require__(1);\n\tvar dispatcher_1 = __webpack_require__(346);\n\tvar store_1 = __webpack_require__(348);\n\tvar store_backend_1 = __webpack_require__(347);\n\tvar utils_1 = __webpack_require__(349);\n\texports.PRE_MIDDLEWARE = new core_1.OpaqueToken('ngrx/store/pre-middleware');\n\texports.POST_MIDDLEWARE = new core_1.OpaqueToken('ngrx/store/post-middleware');\n\texports.RESOLVED_PRE_MIDDLEWARE = new core_1.OpaqueToken('ngrx/store/resolved-pre-middleware');\n\texports.RESOLVED_POST_MIDDLEWARE = new core_1.OpaqueToken('ngrx/store/resolved-post-middleware');\n\texports.REDUCER = new core_1.OpaqueToken('ngrx/store/reducer');\n\texports.INITIAL_STATE = new core_1.OpaqueToken('ngrx/store/initial-state');\n\tvar dispatcherProvider = core_1.provide(dispatcher_1.Dispatcher, {\n\t    useFactory: function () {\n\t        return new dispatcher_1.Dispatcher();\n\t    }\n\t});\n\tvar storeProvider = core_1.provide(store_1.Store, {\n\t    deps: [dispatcher_1.Dispatcher, store_backend_1.StoreBackend, exports.INITIAL_STATE],\n\t    useFactory: function (dispatcher, backend, initialState) {\n\t        return new store_1.Store(dispatcher, backend, initialState);\n\t    }\n\t});\n\tvar storeBackendProvider = core_1.provide(store_backend_1.StoreBackend, {\n\t    deps: [dispatcher_1.Dispatcher, exports.REDUCER, exports.INITIAL_STATE, exports.RESOLVED_PRE_MIDDLEWARE, exports.RESOLVED_POST_MIDDLEWARE],\n\t    useFactory: function (dispatcher, reducer, initialState, preMiddleware, postMiddleware) {\n\t        return new store_backend_1.StoreBackend(dispatcher, reducer, initialState, preMiddleware, postMiddleware);\n\t    }\n\t});\n\tvar resolvedPreMiddlewareProvider = core_1.provide(exports.RESOLVED_PRE_MIDDLEWARE, {\n\t    deps: [exports.PRE_MIDDLEWARE],\n\t    useFactory: function (middleware) {\n\t        return utils_1.compose.apply(void 0, middleware);\n\t    }\n\t});\n\tvar resolvedPostMiddlewareProvider = core_1.provide(exports.RESOLVED_POST_MIDDLEWARE, {\n\t    deps: [exports.POST_MIDDLEWARE],\n\t    useFactory: function (middleware) {\n\t        return utils_1.compose.apply(void 0, middleware);\n\t    }\n\t});\n\tfunction provideStore(reducer, initialState) {\n\t    return [\n\t        core_1.provide(exports.REDUCER, {\n\t            useFactory: function () {\n\t                if (typeof reducer === 'function') {\n\t                    return reducer;\n\t                }\n\t                return utils_1.combineReducers(reducer);\n\t            }\n\t        }),\n\t        core_1.provide(exports.INITIAL_STATE, {\n\t            deps: [exports.REDUCER],\n\t            useFactory: function (reducer) {\n\t                if (initialState === undefined) {\n\t                    return reducer(undefined, { type: store_backend_1.ActionTypes.INIT });\n\t                }\n\t                return initialState;\n\t            }\n\t        }),\n\t        core_1.provide(exports.PRE_MIDDLEWARE, { multi: true, useValue: (function (T) { return T; }) }),\n\t        core_1.provide(exports.POST_MIDDLEWARE, { multi: true, useValue: (function (T) { return T; }) }),\n\t        dispatcherProvider,\n\t        storeProvider,\n\t        storeBackendProvider,\n\t        resolvedPreMiddlewareProvider,\n\t        resolvedPostMiddlewareProvider\n\t    ];\n\t}\n\texports.provideStore = provideStore;\n\tfunction usePreMiddleware() {\n\t    var middleware = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        middleware[_i - 0] = arguments[_i];\n\t    }\n\t    return provideMiddlewareForToken(exports.PRE_MIDDLEWARE, middleware);\n\t}\n\texports.usePreMiddleware = usePreMiddleware;\n\tfunction usePostMiddleware() {\n\t    var middleware = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        middleware[_i - 0] = arguments[_i];\n\t    }\n\t    return provideMiddlewareForToken(exports.POST_MIDDLEWARE, middleware);\n\t}\n\texports.usePostMiddleware = usePostMiddleware;\n\tfunction createMiddleware(useFactory, deps) {\n\t    return core_1.provide(new core_1.OpaqueToken('@ngrx/store middleware'), {\n\t        deps: deps,\n\t        useFactory: useFactory\n\t    });\n\t}\n\texports.createMiddleware = createMiddleware;\n\tfunction provideMiddlewareForToken(token, _middleware) {\n\t    function isProvider(t) {\n\t        return t instanceof core_1.Provider;\n\t    }\n\t    var provider = core_1.provide(token, {\n\t        multi: true,\n\t        deps: [core_1.Injector],\n\t        useFactory: function (injector) {\n\t            var middleware = _middleware.map(function (m) {\n\t                if (isProvider(m)) {\n\t                    return injector.get(m.token);\n\t                }\n\t                return m;\n\t            });\n\t            return utils_1.compose.apply(void 0, middleware);\n\t        }\n\t    });\n\t    return _middleware.filter(isProvider).concat([provider]);\n\t}\n\texports.provideMiddlewareForToken = provideMiddlewareForToken;\n\n\n/***/ },\n\n/***/ 347:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar queue_1 = __webpack_require__(338);\n\t__webpack_require__(502);\n\t__webpack_require__(506);\n\t__webpack_require__(505);\n\texports.ActionTypes = {\n\t    INIT: '@@ngrx/INIT'\n\t};\n\tvar StoreBackend = (function () {\n\t    function StoreBackend(_dispatcher, _reducer, _initialState, _preMiddleware, _postMiddleware) {\n\t        if (_preMiddleware === void 0) { _preMiddleware = function (t) { return t; }; }\n\t        if (_postMiddleware === void 0) { _postMiddleware = function (t) { return t; }; }\n\t        this._dispatcher = _dispatcher;\n\t        this._reducer = _reducer;\n\t        this._initialState = _initialState;\n\t        this._preMiddleware = _preMiddleware;\n\t        this._postMiddleware = _postMiddleware;\n\t    }\n\t    StoreBackend.prototype._init = function () {\n\t        this._dispatcher.dispatch({ type: exports.ActionTypes.INIT });\n\t    };\n\t    StoreBackend.prototype.connect = function (nextCallbackFn) {\n\t        var _this = this;\n\t        this._dispatcher\n\t            .let(this._preMiddleware)\n\t            .observeOn(queue_1.queue)\n\t            .scan(function (state, action) { return _this._reducer(state, action); }, this._initialState)\n\t            .let(this._postMiddleware)\n\t            .subscribe(nextCallbackFn);\n\t        this._init();\n\t    };\n\t    StoreBackend.prototype.replaceReducer = function (reducer) {\n\t        this._reducer = reducer;\n\t        this._init();\n\t    };\n\t    return StoreBackend;\n\t}());\n\texports.StoreBackend = StoreBackend;\n\n\n/***/ },\n\n/***/ 348:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar BehaviorSubject_1 = __webpack_require__(492);\n\t__webpack_require__(100);\n\t__webpack_require__(334);\n\tvar Store = (function (_super) {\n\t    __extends(Store, _super);\n\t    function Store(_dispatcher, _backend, initialState) {\n\t        var _this = this;\n\t        _super.call(this, initialState);\n\t        this._dispatcher = _dispatcher;\n\t        this._backend = _backend;\n\t        _backend.connect(function (state) { return _super.prototype.next.call(_this, state); });\n\t    }\n\t    Store.prototype.select = function (keyOrSelector) {\n\t        if (typeof keyOrSelector === 'string' ||\n\t            typeof keyOrSelector === 'number' ||\n\t            typeof keyOrSelector === 'symbol') {\n\t            return this.map(function (state) { return state[keyOrSelector]; }).distinctUntilChanged();\n\t        }\n\t        else if (typeof keyOrSelector === 'function') {\n\t            return this.map(keyOrSelector).distinctUntilChanged();\n\t        }\n\t        else {\n\t            throw new TypeError(\"Store@select Unknown Parameter Type: \"\n\t                + (\"Expected type of function or valid key type, got \" + typeof keyOrSelector));\n\t        }\n\t    };\n\t    Store.prototype.getState = function () {\n\t        return this.value;\n\t    };\n\t    Store.prototype.dispatch = function (action) {\n\t        this._dispatcher.dispatch(action);\n\t    };\n\t    Store.prototype.next = function (action) {\n\t        this._dispatcher.next(action);\n\t    };\n\t    Store.prototype.error = function (error) {\n\t        this._dispatcher.error(error);\n\t    };\n\t    Store.prototype.replaceReducer = function (reducer) {\n\t        this._backend.replaceReducer(reducer);\n\t    };\n\t    return Store;\n\t}(BehaviorSubject_1.BehaviorSubject));\n\texports.Store = Store;\n\n\n/***/ },\n\n/***/ 349:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction combineReducers(reducers) {\n\t    var reducerKeys = Object.keys(reducers);\n\t    var finalReducers = {};\n\t    for (var i = 0; i < reducerKeys.length; i++) {\n\t        var key = reducerKeys[i];\n\t        if (typeof reducers[key] === 'function') {\n\t            finalReducers[key] = reducers[key];\n\t        }\n\t    }\n\t    var finalReducerKeys = Object.keys(finalReducers);\n\t    return function combination(state, action) {\n\t        if (state === void 0) { state = {}; }\n\t        var hasChanged = false;\n\t        var nextState = {};\n\t        for (var i = 0; i < finalReducerKeys.length; i++) {\n\t            var key = finalReducerKeys[i];\n\t            var reducer = finalReducers[key];\n\t            var previousStateForKey = state[key];\n\t            var nextStateForKey = reducer(previousStateForKey, action);\n\t            nextState[key] = nextStateForKey;\n\t            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n\t        }\n\t        return hasChanged ? nextState : state;\n\t    };\n\t}\n\texports.combineReducers = combineReducers;\n\texports.compose = function () {\n\t    var funcs = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        funcs[_i - 0] = arguments[_i];\n\t    }\n\t    return function () {\n\t        var args = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            args[_i - 0] = arguments[_i];\n\t        }\n\t        if (funcs.length === 0) {\n\t            return args[0];\n\t        }\n\t        var last = funcs[funcs.length - 1];\n\t        var rest = funcs.slice(0, -1);\n\t        return rest.reduceRight(function (composed, f) { return f(composed); }, last.apply(void 0, args));\n\t    };\n\t};\n\n\n/***/ },\n\n/***/ 350:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\tvar angulartics2_1 = __webpack_require__(135);\n\t__export(__webpack_require__(135));\n\t__export(__webpack_require__(535));\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    providers: [angulartics2_1.Angulartics2]\n\t};\n\n\n/***/ },\n\n/***/ 135:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar ReplaySubject_1 = __webpack_require__(496);\n\tvar common_1 = __webpack_require__(27);\n\tvar Angulartics2 = (function () {\n\t    function Angulartics2(location) {\n\t        this.settings = {\n\t            pageTracking: {\n\t                autoTrackVirtualPages: true,\n\t                basePath: '',\n\t                excludedRoutes: []\n\t            },\n\t            eventTracking: {},\n\t            developerMode: false\n\t        };\n\t        this.pageTrack = new ReplaySubject_1.ReplaySubject();\n\t        this.eventTrack = new ReplaySubject_1.ReplaySubject();\n\t        this.exceptionTrack = new ReplaySubject_1.ReplaySubject();\n\t        this.setAlias = new ReplaySubject_1.ReplaySubject();\n\t        this.setUsername = new ReplaySubject_1.ReplaySubject();\n\t        this.setUserProperties = new ReplaySubject_1.ReplaySubject();\n\t        this.setUserPropertiesOnce = new ReplaySubject_1.ReplaySubject();\n\t        this.setSuperProperties = new ReplaySubject_1.ReplaySubject();\n\t        this.setSuperPropertiesOnce = new ReplaySubject_1.ReplaySubject();\n\t        this.userTimings = new ReplaySubject_1.ReplaySubject();\n\t        this.trackLocation(location);\n\t    }\n\t    Angulartics2.prototype.trackLocation = function (location) {\n\t        var _this = this;\n\t        location.subscribe(function (value) {\n\t            if (!_this.settings.developerMode) {\n\t                var url = value.url;\n\t                if (_this.settings.pageTracking.autoTrackVirtualPages && !_this.matchesExcludedRoute(url)) {\n\t                    _this.pageTrack.next({\n\t                        path: _this.settings.pageTracking.basePath.length ? _this.settings.pageTracking.basePath + url : location.prepareExternalUrl(url),\n\t                        location: location\n\t                    });\n\t                }\n\t            }\n\t        });\n\t    };\n\t    Angulartics2.prototype.virtualPageviews = function (value) {\n\t        this.settings.pageTracking.autoTrackVirtualPages = value;\n\t    };\n\t    Angulartics2.prototype.excludeRoutes = function (routes) {\n\t        this.settings.pageTracking.excludedRoutes = routes;\n\t    };\n\t    Angulartics2.prototype.firstPageview = function (value) {\n\t        this.settings.pageTracking.autoTrackFirstPage = value;\n\t    };\n\t    Angulartics2.prototype.withBase = function (value) {\n\t        this.settings.pageTracking.basePath = (value);\n\t    };\n\t    Angulartics2.prototype.developerMode = function (value) {\n\t        this.settings.developerMode = value;\n\t    };\n\t    Angulartics2.prototype.matchesExcludedRoute = function (url) {\n\t        for (var _i = 0, _a = this.settings.pageTracking.excludedRoutes; _i < _a.length; _i++) {\n\t            var excludedRoute = _a[_i];\n\t            if ((excludedRoute instanceof RegExp && excludedRoute.test(url)) || url.indexOf(excludedRoute) > -1) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t    Angulartics2 = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [common_1.Location])\n\t    ], Angulartics2);\n\t    return Angulartics2;\n\t}());\n\texports.Angulartics2 = Angulartics2;\n\n\n/***/ },\n\n/***/ 535:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar platform_browser_1 = __webpack_require__(98);\n\tvar dom_adapter_1 = __webpack_require__(20);\n\tvar angulartics2_1 = __webpack_require__(135);\n\tvar Angulartics2On = (function () {\n\t    function Angulartics2On(elRef, angulartics2, eventManager) {\n\t        this.elRef = elRef;\n\t        this.angulartics2 = angulartics2;\n\t        this.eventManager = eventManager;\n\t        this.el = elRef.nativeElement;\n\t    }\n\t    Angulartics2On.prototype.ngAfterContentInit = function () {\n\t        var _this = this;\n\t        this.eventManager.addEventListener(this.el, this.angulartics2On, function (event) { return _this.eventTrack(event); });\n\t    };\n\t    Angulartics2On.prototype.eventTrack = function (event) {\n\t        if (this.angularticsIf && !eval(this.angularticsIf)) {\n\t            return;\n\t        }\n\t        var action = this.angularticsEvent || this.inferEventName();\n\t        var properties = {\n\t            eventType: event.type\n\t        };\n\t        if (this.angularticsCategory) {\n\t            properties.category = this.angularticsCategory;\n\t        }\n\t        if (this.angularticsProperties) {\n\t            Object.assign(properties, eval(this.angularticsProperties));\n\t        }\n\t        this.angulartics2.eventTrack.next({\n\t            action: action,\n\t            properties: properties\n\t        });\n\t    };\n\t    Angulartics2On.prototype.isCommand = function () {\n\t        return ['a:', 'button:', 'button:button', 'button:submit', 'input:button', 'input:submit'].indexOf(dom_adapter_1.getDOM().tagName(this.el).toLowerCase() + ':' + (dom_adapter_1.getDOM().type(this.el) || '')) >= 0;\n\t    };\n\t    Angulartics2On.prototype.inferEventName = function () {\n\t        if (this.isCommand())\n\t            return dom_adapter_1.getDOM().getText(this.el) || dom_adapter_1.getDOM().getValue(this.el);\n\t        return dom_adapter_1.getDOM().getProperty(this.el, 'id') || dom_adapter_1.getDOM().getProperty(this.el, 'name') || dom_adapter_1.getDOM().tagName(this.el);\n\t    };\n\t    __decorate([\n\t        core_1.Input('angulartics2On'), \n\t        __metadata('design:type', String)\n\t    ], Angulartics2On.prototype, \"angulartics2On\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], Angulartics2On.prototype, \"angularticsEvent\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], Angulartics2On.prototype, \"angularticsCategory\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], Angulartics2On.prototype, \"angularticsIf\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], Angulartics2On.prototype, \"angularticsProperties\", void 0);\n\t    Angulartics2On = __decorate([\n\t        core_1.Injectable(),\n\t        core_1.Directive({\n\t            selector: '[angulartics2On]'\n\t        }), \n\t        __metadata('design:paramtypes', [core_1.ElementRef, angulartics2_1.Angulartics2, platform_browser_1.EventManager])\n\t    ], Angulartics2On);\n\t    return Angulartics2On;\n\t}());\n\texports.Angulartics2On = Angulartics2On;\n\n\n/***/ },\n\n/***/ 351:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar angulartics2_1 = __webpack_require__(135);\n\tvar Angulartics2Segment = (function () {\n\t    function Angulartics2Segment(angulartics2) {\n\t        var _this = this;\n\t        this.angulartics2 = angulartics2;\n\t        this.angulartics2.pageTrack.subscribe(function (x) { return _this.pageTrack(x.path, x.location); });\n\t        this.angulartics2.eventTrack.subscribe(function (x) { return _this.eventTrack(x.action, x.properties); });\n\t        this.angulartics2.setUserProperties.subscribe(function (x) { return _this.setUserProperties(x); });\n\t        this.angulartics2.setUserPropertiesOnce.subscribe(function (x) { return _this.setUserProperties(x); });\n\t        this.angulartics2.setAlias.subscribe(function (x) { return _this.setAlias(x); });\n\t    }\n\t    Angulartics2Segment.prototype.pageTrack = function (path, location) {\n\t        try {\n\t            analytics.page(path);\n\t        }\n\t        catch (e) {\n\t            if (!(e instanceof ReferenceError)) {\n\t                throw e;\n\t            }\n\t        }\n\t    };\n\t    Angulartics2Segment.prototype.eventTrack = function (action, properties) {\n\t        try {\n\t            analytics.track(action, properties);\n\t        }\n\t        catch (e) {\n\t            if (!(e instanceof ReferenceError)) {\n\t                throw e;\n\t            }\n\t        }\n\t    };\n\t    Angulartics2Segment.prototype.setUserProperties = function (properties) {\n\t        try {\n\t            if (properties.userId) {\n\t                analytics.identify(properties.userId, properties);\n\t            }\n\t            else {\n\t                analytics.identify(properties);\n\t            }\n\t        }\n\t        catch (e) {\n\t            if (!(e instanceof ReferenceError)) {\n\t                throw e;\n\t            }\n\t        }\n\t    };\n\t    Angulartics2Segment.prototype.setAlias = function (alias) {\n\t        try {\n\t            analytics.alias(alias);\n\t        }\n\t        catch (e) {\n\t            if (!(e instanceof ReferenceError)) {\n\t                throw e;\n\t            }\n\t        }\n\t    };\n\t    Angulartics2Segment = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [angulartics2_1.Angulartics2])\n\t    ], Angulartics2Segment);\n\t    return Angulartics2Segment;\n\t}());\n\texports.Angulartics2Segment = Angulartics2Segment;\n\n\n/***/ },\n\n/***/ 381:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {/**\n\t * @license\n\t * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.10.1';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\t\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n\t   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n\t   */\n\t  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\t\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^\\d+$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\t\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n\t    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled regexes. */\n\t  var regexpEscapes = {\n\t    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n\t    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n\t    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n\t    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n\t    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\t\n\t  /**\n\t   * Converts `value` to a string if it's not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    return value == null ? '' : (value + '');\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\t\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n\t   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n\t   * descending if \"desc\".\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * ((order === 'asc' || order === true) ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @param {string} leadingChar The capture group for a leading character.\n\t   * @param {string} whitespaceChar The capture group for a whitespace character.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n\t    if (leadingChar) {\n\t      chr = regexpEscapes[chr];\n\t    } else if (whitespaceChar) {\n\t      chr = stringEscapes[chr];\n\t    }\n\t    return '\\\\' + chr;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\t\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\t\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Native method references. */\n\t    var ArrayBuffer = context.ArrayBuffer,\n\t        clearTimeout = context.clearTimeout,\n\t        parseFloat = context.parseFloat,\n\t        pow = Math.pow,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = getNative(context, 'Set'),\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = context.Uint8Array,\n\t        WeakMap = getNative(context, 'WeakMap');\n\t\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeCreate = getNative(Object, 'create'),\n\t        nativeFloor = Math.floor,\n\t        nativeIsArray = getNative(Array, 'isArray'),\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = getNative(Object, 'keys'),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = getNative(Date, 'now'),\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\t\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\t\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = 4294967295,\n\t        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t    /**\n\t     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that retrieve a single value or may return a\n\t     * primitive value will automatically end the chain returning the unwrapped\n\t     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n\t     * chained methods is lazy, that is, execution is deferred until `_#value`\n\t     * is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization strategy which merge iteratee calls; this can help\n\t     * to avoid the creation of intermediate data structures and greatly reduce the\n\t     * number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n\t     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n\t     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n\t     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n\t     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n\t     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n\t     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n\t     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n\t     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n\t     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n\t     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n\t     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n\t     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n\t     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n\t     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n\t     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n\t     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n\t     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n\t     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n\t     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n\t     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n\t     * `unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\t\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = arrayCopy(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = arrayCopy(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = arrayCopy(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\t\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\t\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\t\n\t      return result ? 0 : -1;\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a new array joining `array` with `other`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to join.\n\t     * @param {Array} other The other array to join.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     */\n\t    function arrayConcat(array, other) {\n\t      var index = -1,\n\t          length = array.length,\n\t          othIndex = -1,\n\t          othLength = other.length,\n\t          result = Array(length + othLength);\n\t\n\t      while (++index < length) {\n\t        result[index] = array[index];\n\t      }\n\t      while (++othIndex < othLength) {\n\t        result[index++] = other[othIndex];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\t\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n\t     * with one argument: (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function arrayExtremum(array, iteratee, comparator, exValue) {\n\t      var index = -1,\n\t          length = array.length,\n\t          computed = exValue,\n\t          result = computed;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = +iteratee(value);\n\t\n\t        if (comparator(current, computed)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Appends the elements of `values` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to append.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayPush(array, values) {\n\t      var index = -1,\n\t          length = values.length,\n\t          offset = array.length;\n\t\n\t      while (++index < length) {\n\t        array[offset + index] = values[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for callback\n\t     * shorthands and `this` binding..\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array, iteratee) {\n\t      var length = array.length,\n\t          result = 0;\n\t\n\t      while (length--) {\n\t        result += +iteratee(array[length]) || 0;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var index = -1,\n\t          props = keys(source),\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\t\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          isNil = collection == null,\n\t          isArr = !isNil && isArrayLike(collection),\n\t          length = isArr ? collection.length : 0,\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\t\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = isNil ? undefined : collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\t\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = undefined;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\t\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(collection, iteratee, comparator, exValue) {\n\t      var computed = exValue,\n\t          result = computed;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = +iteratee(value, index, collection);\n\t        if (comparator(current, computed) || (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\t\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isObjectLike(value) && isArrayLike(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, isDeep, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\t\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t      stackA.pop();\n\t      stackB.pop();\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} matchData The propery names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = toObject(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return baseIsMatch(object, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(srcValue),\n\t          pathKey = (path + '');\n\t\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === srcValue\n\t          ? (srcValue !== undefined || (key in object))\n\t          : baseIsEqual(srcValue, object[key], undefined, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n\t          props = isSrcArr ? undefined : keys(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\t\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\t\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (isArrayLike(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0;\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + nativeFloor(nativeRandom() * (max - min + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\t\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\t\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\t\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\t\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\t\n\t      while (++index < length) {\n\t        var action = actions[index];\n\t        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      var result = new ArrayBuffer(buffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(buffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(leftLength + argsLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\t\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 ? sources[length - 2] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined,\n\t            thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    function createCache(values) {\n\t      return (nativeCreate && Set) ? new SetCache(values) : null;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\t\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = undefined;\n\t        }\n\t        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.defaults` or `_.defaultsDeep` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Function} Returns the new defaults function.\n\t     */\n\t    function createDefaults(assigner, customizer) {\n\t      return restParam(function(args) {\n\t        var object = args[0];\n\t        if (object == null) {\n\t          return object;\n\t        }\n\t        args.push(customizer);\n\t        return assigner.apply(undefined, args);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(comparator, exValue) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = undefined;\n\t        }\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t        if (iteratee.length == 1) {\n\t          collection = isArray(collection) ? collection : toIterable(collection);\n\t          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\t          if (!(collection.length && result === exValue)) {\n\t            return result;\n\t          }\n\t        }\n\t        return baseExtremum(collection, iteratee, comparator, exValue);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var wrapper,\n\t            length = arguments.length,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n\t            wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.mapKeys` or `_.mapValues`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n\t     * @returns {Function} Returns the new map function.\n\t     */\n\t    function createObjectMapper(isMapKeys) {\n\t      return function(object, iteratee, thisArg) {\n\t        var result = {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        baseForOwn(object, function(value, key, object) {\n\t          var mapped = iteratee(value, key, object);\n\t          key = isMapKeys ? mapped : key;\n\t          value = isMapKeys ? value : mapped;\n\t          result[key] = value;\n\t        });\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, undefined, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : undefined,\n\t                newHoldersRight = isCurry ? undefined : argsHolders,\n\t                newPartials = isCurry ? args : undefined,\n\t                newPartialsRight = isCurry ? undefined : args;\n\t\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\t\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(func);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\t\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength);\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        precision = precision === undefined ? 0 : (+precision || 0);\n\t        if (precision) {\n\t          precision = pow(10, precision);\n\t          return func(number * precision) / precision;\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var callback = getCallback(iteratee);\n\t        return (iteratee == null && callback === baseCallback)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\t\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index],\n\t            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\t\n\t        if (result !== undefined) {\n\t          if (result) {\n\t            continue;\n\t          }\n\t          return false;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isLoose) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              })) {\n\t            return false;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      var skipCtor = isLoose;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key],\n\t            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\t\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = func.name,\n\t          array = realNames[result],\n\t          length = array ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the propery names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = pairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\t\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      if (!(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      var other = lodash[funcName];\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function mergeDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length;\n\t\n\t      var allowIndexes = !!length && isLength(length) &&\n\t        (isArray(object) || isArguments(object));\n\t\n\t      var index = -1,\n\t          result = [];\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isArrayLike(value)) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to property path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(nativeFloor(size) || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return (isObjectLike(array) && isArrayLike(array))\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n\t     * performs a faster binary search.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value);\n\t        if (index < length &&\n\t            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all of the provided\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    var intersection = restParam(function(arrays) {\n\t      var othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(length),\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n\t        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n\t      }\n\t      var array = arrays[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all provided values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\t\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\t\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\t\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      indexes = baseFlatten(indexes);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all of the provided arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var callback = getCallback();\n\t      if (!(iteratee == null && callback === baseCallback)) {\n\t        iteratee = callback(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          length = 0;\n\t\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLike(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts an iteratee to specify\n\t     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee] The function to combine regrouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      iteratee = bindCallback(iteratee, thisArg, 4);\n\t      return arrayMap(result, function(group) {\n\t        return arrayReduce(group, iteratee, undefined, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all provided values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return isArrayLike(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\t\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArrayLike(array)) {\n\t          var result = result\n\t            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\t\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\t\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an iteratee to specify\n\t     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee] The function to combine grouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = restParam(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 2 ? arrays[length - 2] : undefined,\n\t          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      if (length > 2 && typeof iteratee == 'function') {\n\t        length -= 2;\n\t      } else {\n\t        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n\t        thisArg = undefined;\n\t      }\n\t      arrays.length = length;\n\t      return unzipWith(arrays, iteratee, thisArg);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Creates a new array joining a wrapped array with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @name concat\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var wrapped = _(array).concat(2, [3], [[4]]);\n\t     *\n\t     * console.log(wrapped.value());\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var wrapperConcat = restParam(function(values) {\n\t      values = baseFlatten(values);\n\t      return this.thru(function(array) {\n\t        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapped = wrapped.plant(other);\n\t     *\n\t     * otherWrapped.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t\n\t      var interceptor = function(value) {\n\t        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n\t      };\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(interceptor);\n\t    }\n\t\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n\t        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n\t     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n\t     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n\t     * `sum`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n\t     * and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sample(collection, POSITIVE_INFINITY);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n\t     * values are sorted in ascending order. Otherwise, a value is sorted in\n\t     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = undefined;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = undefined;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\t\n\t      var index = -1,\n\t          length = methodNames.length;\n\t\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the debounced function return the result of the last\n\t     * `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that runs each argument through a corresponding\n\t     * transform function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified as individual functions or arrays of functions.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var modded = _.modArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * modded(1, 2);\n\t     * // => [1, 4]\n\t     *\n\t     * modded(5, 10);\n\t     * // => [25, 20]\n\t     */\n\t    var modArgs = restParam(function(func, transforms) {\n\t      transforms = baseFlatten(transforms);\n\t      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = transforms.length;\n\t      return restParam(function(args) {\n\t        var index = nativeMin(args.length, length);\n\t        while (index--) {\n\t          args[index] = transforms[index](args[index]);\n\t        }\n\t        return func.apply(this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\t\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed invocations. Provide an options object to indicate\n\t     * that `func` should be invoked on the leading and/or trailing edge of the\n\t     * `wait` timeout. Subsequent calls to the throttled function return the\n\t     * result of the last `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, isDeep);\n\t    }\n\t\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      return isObjectLike(value) && isArrayLike(value) &&\n\t        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !value.length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eq\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return isObject(value) && objToString.call(value) == funcTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      return baseIsMatch(object, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      var Ctor;\n\t\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n\t          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = undefined;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = createDefaults(assign, assignDefaults);\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\t\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the property value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        path = last(path);\n\t        result = hasOwnProperty.call(object, path);\n\t      }\n\t      return result || (isLength(object.length) && isIndex(path, object.length) &&\n\t        (isArray(object) || isArguments(object)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = undefined;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      var Ctor = object == null ? undefined : object.constructor;\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isArrayLike(object))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\t\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    var mapKeys = createObjectMapper(true);\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    var mapValues = createObjectMapper();\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == lastIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = undefined;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\t\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\t\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, escapeRegExpChar)\n\t        : (string || '(?:)');\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\t\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = trim(string);\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\t\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = undefined;\n\t      }\n\t      return isObjectLike(func)\n\t        ? matches(func)\n\t        : baseCallback(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` on a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path on `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj ? keys(source) : undefined,\n\t            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\t\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\t\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\t\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\t\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              return func.apply(object, arrayPush([this.value()], arguments));\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      root._ = oldDash;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = undefined;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\t\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = nativeFloor(n);\n\t\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\t\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\t\n\t    /**\n\t     * Calculates `n` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Calculates `n` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\t\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(lt, POSITIVE_INFINITY);\n\t\n\t    /**\n\t     * Calculates `n` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return iteratee.length == 1\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n\t        : baseSum(collection, iteratee);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.modArgs = modArgs;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.floor = floor;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\t\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.eq = isEqual;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\t\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t        } else {\n\t          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type != LAZY_MAP_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\t\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n\t      return this.reverse().takeWhile(predicate, thisArg).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(POSITIVE_INFINITY);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName),\n\t          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var args = retUnwrapped ? [1] : arguments,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var interceptor = function(value) {\n\t          return (retUnwrapped && chainAll)\n\t            ? lodashFunc(value, 1)[0]\n\t            : lodashFunc.apply(undefined, arrayPush([value], args));\n\t        };\n\t\n\t        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (retUnwrapped && !chainAll) {\n\t          if (onlyLazy) {\n\t            value = value.clone();\n\t            value.__actions__.push(action);\n\t            return func.call(value);\n\t          }\n\t          return lodashFunc.call(undefined, this.value())[0];\n\t        }\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push(action);\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.concat = wrapperConcat;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\t\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Rhino with CommonJS support.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(385)(module)))\n\n/***/ },\n\n/***/ 228:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\tvar core_1 = __webpack_require__(1);\n\tvar http_1 = __webpack_require__(81);\n\tvar translate_pipe_1 = __webpack_require__(383);\n\tvar translate_service_1 = __webpack_require__(229);\n\t__export(__webpack_require__(383));\n\t__export(__webpack_require__(229));\n\t__export(__webpack_require__(382));\n\texports.TRANSLATE_PROVIDERS = [\n\t    core_1.provide(translate_service_1.TranslateLoader, {\n\t        useFactory: function (http) { return new translate_service_1.TranslateStaticLoader(http); },\n\t        deps: [http_1.Http]\n\t    }),\n\t    translate_service_1.TranslateService\n\t];\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    pipes: [translate_pipe_1.TranslatePipe],\n\t    providers: [translate_service_1.TranslateService]\n\t};\n\n\n/***/ },\n\n/***/ 382:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar Parser = (function () {\n\t    function Parser() {\n\t        this.templateMatcher = /{{\\s?([^{}\\s]*)\\s?}}/g;\n\t    }\n\t    /**\n\t     * Interpolates a string to replace parameters\n\t     * \"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }\n\t     * @param expr\n\t     * @param params\n\t     * @returns {string}\n\t     */\n\t    Parser.prototype.interpolate = function (expr, params) {\n\t        var _this = this;\n\t        if (typeof expr !== 'string' || !params) {\n\t            return expr;\n\t        }\n\t        return expr.replace(this.templateMatcher, function (substring, b) {\n\t            var r = _this.getValue(params, b);\n\t            return typeof r !== 'undefined' ? r : substring;\n\t        });\n\t    };\n\t    /**\n\t     * Gets a value from an object by composed key\n\t     * parser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'\n\t     * @param target\n\t     * @param key\n\t     * @returns {string}\n\t     */\n\t    Parser.prototype.getValue = function (target, key) {\n\t        var keys = key.split('.');\n\t        key = '';\n\t        do {\n\t            key += keys.shift();\n\t            if (target[key] !== undefined && (typeof target[key] === 'object' || !keys.length)) {\n\t                target = target[key];\n\t                key = '';\n\t            }\n\t            else if (!keys.length) {\n\t                target = undefined;\n\t            }\n\t            else {\n\t                key += '.';\n\t            }\n\t        } while (keys.length);\n\t        return target;\n\t    };\n\t    return Parser;\n\t}());\n\texports.Parser = Parser;\n\n\n/***/ },\n\n/***/ 383:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar translate_service_1 = __webpack_require__(229);\n\tvar lang_1 = __webpack_require__(4);\n\tvar TranslatePipe = (function () {\n\t    function TranslatePipe(translate, _ref) {\n\t        this.translate = translate;\n\t        this._ref = _ref;\n\t        this.value = '';\n\t    }\n\t    /**\n\t     * @name equals\n\t     *\n\t     * @description\n\t     * Determines if two objects or two values are equivalent.\n\t     *\n\t     * Two objects or values are considered equivalent if at least one of the following is true:\n\t     *\n\t     * * Both objects or values pass `===` comparison.\n\t     * * Both objects or values are of the same type and all of their properties are equal by\n\t     *   comparing them with `equals`.\n\t     *\n\t     * @param {*} o1 Object or value to compare.\n\t     * @param {*} o2 Object or value to compare.\n\t     * @returns {boolean} True if arguments are equal.\n\t     */\n\t    TranslatePipe.prototype.equals = function (o1, o2) {\n\t        if (o1 === o2)\n\t            return true;\n\t        if (o1 === null || o2 === null)\n\t            return false;\n\t        if (o1 !== o1 && o2 !== o2)\n\t            return true; // NaN === NaN\n\t        var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n\t        if (t1 == t2 && t1 == 'object') {\n\t            if (lang_1.isArray(o1)) {\n\t                if (!lang_1.isArray(o2))\n\t                    return false;\n\t                if ((length = o1.length) == o2.length) {\n\t                    for (key = 0; key < length; key++) {\n\t                        if (!this.equals(o1[key], o2[key]))\n\t                            return false;\n\t                    }\n\t                    return true;\n\t                }\n\t            }\n\t            else {\n\t                if (lang_1.isArray(o2)) {\n\t                    return false;\n\t                }\n\t                keySet = Object.create(null);\n\t                for (key in o1) {\n\t                    if (!this.equals(o1[key], o2[key])) {\n\t                        return false;\n\t                    }\n\t                    keySet[key] = true;\n\t                }\n\t                for (key in o2) {\n\t                    if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n\t                        return false;\n\t                    }\n\t                }\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t    TranslatePipe.prototype.updateValue = function (key, interpolateParams) {\n\t        var _this = this;\n\t        this.translate.get(key, interpolateParams).subscribe(function (res) {\n\t            _this.value = res ? res : key;\n\t            _this._ref.markForCheck();\n\t        });\n\t    };\n\t    TranslatePipe.prototype.transform = function (query) {\n\t        var _this = this;\n\t        var args = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            args[_i - 1] = arguments[_i];\n\t        }\n\t        if (!query || query.length === 0) {\n\t            return query;\n\t        }\n\t        // if we ask another time for the same key, return the last value\n\t        if (this.equals(query, this.lastKey) && this.equals(args, this.lastParams)) {\n\t            return this.value;\n\t        }\n\t        var interpolateParams;\n\t        if (args.length && args[0] !== null) {\n\t            if (typeof args[0] === 'string' && args[0].length) {\n\t                // we accept objects written in the template such as {n:1},\n\t                // which is why we might need to change it to real JSON objects such as {\"n\":1}\n\t                try {\n\t                    interpolateParams = JSON.parse(args[0].replace(/(['\"])?([a-zA-Z0-9_]+)(['\"])?:/g, '\"$2\": '));\n\t                }\n\t                catch (e) {\n\t                    throw new SyntaxError(\"Wrong parameter in TranslatePipe. Expected a valid Object, received: \" + args[0]);\n\t                }\n\t            }\n\t            else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\n\t                interpolateParams = args[0];\n\t            }\n\t        }\n\t        // store the query, in case it changes\n\t        this.lastKey = query;\n\t        // store the params, in case they change\n\t        this.lastParams = args;\n\t        // set the value\n\t        this.updateValue(query, interpolateParams);\n\t        // if there is a subscription to onLangChange, clean it\n\t        this._dispose();\n\t        // subscribe to onLangChange event, in case the language changes\n\t        this.onLangChange = this.translate.onLangChange.subscribe(function (event) {\n\t            _this.updateValue(query, interpolateParams);\n\t        });\n\t        return this.value;\n\t    };\n\t    /**\n\t     * Clean any existing subscription to onLangChange events\n\t     * @private\n\t     */\n\t    TranslatePipe.prototype._dispose = function () {\n\t        if (lang_1.isPresent(this.onLangChange)) {\n\t            this.onLangChange.unsubscribe();\n\t            this.onLangChange = undefined;\n\t        }\n\t    };\n\t    TranslatePipe.prototype.ngOnDestroy = function () {\n\t        this._dispose();\n\t    };\n\t    TranslatePipe = __decorate([\n\t        core_1.Injectable(),\n\t        core_1.Pipe({\n\t            name: 'translate',\n\t            pure: false // required to update the value when the promise is resolved\n\t        }), \n\t        __metadata('design:paramtypes', [translate_service_1.TranslateService, core_1.ChangeDetectorRef])\n\t    ], TranslatePipe);\n\t    return TranslatePipe;\n\t}());\n\texports.TranslatePipe = TranslatePipe;\n\n\n/***/ },\n\n/***/ 229:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar http_1 = __webpack_require__(81);\n\tvar Observable_1 = __webpack_require__(7);\n\t__webpack_require__(499);\n\t__webpack_require__(507);\n\t__webpack_require__(100);\n\t__webpack_require__(503);\n\t__webpack_require__(508);\n\tvar translate_parser_1 = __webpack_require__(382);\n\tvar MissingTranslationHandler = (function () {\n\t    function MissingTranslationHandler() {\n\t    }\n\t    return MissingTranslationHandler;\n\t}());\n\texports.MissingTranslationHandler = MissingTranslationHandler;\n\tvar TranslateLoader = (function () {\n\t    function TranslateLoader() {\n\t    }\n\t    return TranslateLoader;\n\t}());\n\texports.TranslateLoader = TranslateLoader;\n\tvar TranslateStaticLoader = (function () {\n\t    function TranslateStaticLoader(http, prefix, suffix) {\n\t        if (prefix === void 0) { prefix = 'i18n'; }\n\t        if (suffix === void 0) { suffix = '.json'; }\n\t        this.http = http;\n\t        this.prefix = prefix;\n\t        this.suffix = suffix;\n\t    }\n\t    /**\n\t     * Gets the translations from the server\n\t     * @param lang\n\t     * @returns {any}\n\t     */\n\t    TranslateStaticLoader.prototype.getTranslation = function (lang) {\n\t        return this.http.get(this.prefix + \"/\" + lang + this.suffix)\n\t            .map(function (res) { return res.json(); });\n\t    };\n\t    return TranslateStaticLoader;\n\t}());\n\texports.TranslateStaticLoader = TranslateStaticLoader;\n\tvar TranslateService = (function () {\n\t    /**\n\t     *\n\t     * @param http The Angular 2 http provider\n\t     * @param currentLoader An instance of the loader currently used\n\t     * @param missingTranslationHandler A handler for missing translations.\n\t     */\n\t    function TranslateService(http, currentLoader, missingTranslationHandler) {\n\t        this.http = http;\n\t        this.currentLoader = currentLoader;\n\t        this.missingTranslationHandler = missingTranslationHandler;\n\t        /**\n\t         * The lang currently used\n\t         */\n\t        this.currentLang = this.defaultLang;\n\t        /**\n\t         * An EventEmitter to listen to lang changes events\n\t         * onLangChange.subscribe((params: LangChangeEvent) => {\n\t         *     // do something\n\t         * });\n\t         * @type {ng.EventEmitter<LangChangeEvent>}\n\t         */\n\t        this.onLangChange = new core_1.EventEmitter();\n\t        this.translations = {};\n\t        this.parser = new translate_parser_1.Parser();\n\t    }\n\t    /**\n\t     * Sets the default language to use as a fallback\n\t     * @param lang\n\t     */\n\t    TranslateService.prototype.setDefaultLang = function (lang) {\n\t        this.defaultLang = lang;\n\t    };\n\t    /**\n\t     * Changes the lang currently used\n\t     * @param lang\n\t     * @returns {Observable<*>}\n\t     */\n\t    TranslateService.prototype.use = function (lang) {\n\t        var _this = this;\n\t        var pending;\n\t        // check if this language is available\n\t        if (typeof this.translations[lang] === 'undefined') {\n\t            // not available, ask for it\n\t            pending = this.getTranslation(lang);\n\t        }\n\t        if (typeof pending !== 'undefined') {\n\t            pending.subscribe(function (res) {\n\t                _this.changeLang(lang);\n\t            });\n\t            return pending;\n\t        }\n\t        else {\n\t            this.changeLang(lang);\n\t            return Observable_1.Observable.of(this.translations[lang]);\n\t        }\n\t    };\n\t    /**\n\t     * Gets an object of translations for a given language with the current loader\n\t     * @param lang\n\t     * @returns {Observable<*>}\n\t     */\n\t    TranslateService.prototype.getTranslation = function (lang) {\n\t        var _this = this;\n\t        this.pending = this.currentLoader.getTranslation(lang).share();\n\t        this.pending.subscribe(function (res) {\n\t            _this.translations[lang] = res;\n\t            _this.updateLangs();\n\t        }, function (err) {\n\t            throw err;\n\t        }, function () {\n\t            _this.pending = undefined;\n\t        });\n\t        return this.pending;\n\t    };\n\t    /**\n\t     * Manually sets an object of translations for a given language\n\t     * @param lang\n\t     * @param translations\n\t     */\n\t    TranslateService.prototype.setTranslation = function (lang, translations) {\n\t        this.translations[lang] = translations;\n\t        this.updateLangs();\n\t    };\n\t    /**\n\t     * Returns an array of currently available langs\n\t     * @returns {any}\n\t     */\n\t    TranslateService.prototype.getLangs = function () {\n\t        return this.langs;\n\t    };\n\t    /**\n\t     * Update the list of available langs\n\t     */\n\t    TranslateService.prototype.updateLangs = function () {\n\t        this.langs = Object.keys(this.translations);\n\t    };\n\t    /**\n\t     * Returns the parsed result of the translations\n\t     * @param translations\n\t     * @param key\n\t     * @param interpolateParams\n\t     * @returns {any}\n\t     */\n\t    TranslateService.prototype.getParsedResult = function (translations, key, interpolateParams) {\n\t        var res;\n\t        if (key instanceof Array) {\n\t            var result = {}, observables = false;\n\t            for (var _i = 0, key_1 = key; _i < key_1.length; _i++) {\n\t                var k = key_1[_i];\n\t                result[k] = this.getParsedResult(translations, k, interpolateParams);\n\t                if (typeof result[k].subscribe === 'function') {\n\t                    observables = true;\n\t                }\n\t            }\n\t            if (observables) {\n\t                var mergedObs;\n\t                for (var _a = 0, key_2 = key; _a < key_2.length; _a++) {\n\t                    var k = key_2[_a];\n\t                    var obs = typeof result[k].subscribe === 'function' ? result[k] : Observable_1.Observable.of(result[k]);\n\t                    if (typeof mergedObs === 'undefined') {\n\t                        mergedObs = obs;\n\t                    }\n\t                    else {\n\t                        mergedObs = mergedObs.merge(obs);\n\t                    }\n\t                }\n\t                return mergedObs.toArray().map(function (arr) {\n\t                    var obj = {};\n\t                    arr.forEach(function (value, index) {\n\t                        obj[key[index]] = value;\n\t                    });\n\t                    return obj;\n\t                });\n\t            }\n\t            return result;\n\t        }\n\t        if (translations) {\n\t            res = this.parser.interpolate(this.parser.getValue(translations, key), interpolateParams);\n\t        }\n\t        if (typeof res === 'undefined' && this.defaultLang && this.defaultLang !== this.currentLang) {\n\t            res = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], key), interpolateParams);\n\t        }\n\t        if (!res && this.missingTranslationHandler) {\n\t            res = this.missingTranslationHandler.handle(key);\n\t        }\n\t        return res || key;\n\t    };\n\t    /**\n\t     * Gets the translated value of a key (or an array of keys)\n\t     * @param key\n\t     * @param interpolateParams\n\t     * @returns {any} the translated key, or an object of translated keys\n\t     */\n\t    TranslateService.prototype.get = function (key, interpolateParams) {\n\t        var _this = this;\n\t        if (!key) {\n\t            throw new Error('Parameter \"key\" required');\n\t        }\n\t        // check if we are loading a new translation to use\n\t        if (this.pending) {\n\t            return Observable_1.Observable.create(function (observer) {\n\t                var onComplete = function (res) {\n\t                    observer.next(res);\n\t                    observer.complete();\n\t                };\n\t                _this.pending.subscribe(function (res) {\n\t                    var res = _this.getParsedResult(res, key, interpolateParams);\n\t                    if (typeof res.subscribe === 'function') {\n\t                        res.subscribe(onComplete);\n\t                    }\n\t                    else {\n\t                        onComplete(res);\n\t                    }\n\t                });\n\t            });\n\t        }\n\t        else {\n\t            var res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n\t            if (typeof res.subscribe === 'function') {\n\t                return res;\n\t            }\n\t            else {\n\t                return Observable_1.Observable.of(res);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t     * Returns a translation instantly from the internal state of loaded translation.\n\t     * All rules regarding the current language, the preferred language of even fallback languages will be used except any promise handling.\n\t     * @param key\n\t     * @param interpolateParams\n\t     * @returns {string}\n\t     */\n\t    TranslateService.prototype.instant = function (key, interpolateParams) {\n\t        if (!key) {\n\t            throw new Error('Parameter \"key\" required');\n\t        }\n\t        var res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n\t        if (typeof res.subscribe !== 'undefined') {\n\t            if (key instanceof Array) {\n\t                var obj = {};\n\t                key.forEach(function (value, index) {\n\t                    obj[key[index]] = key[index];\n\t                });\n\t                return obj;\n\t            }\n\t            return key;\n\t        }\n\t        else {\n\t            return res;\n\t        }\n\t    };\n\t    /**\n\t     * Sets the translated value of a key\n\t     * @param key\n\t     * @param value\n\t     * @param lang\n\t     */\n\t    TranslateService.prototype.set = function (key, value, lang) {\n\t        if (lang === void 0) { lang = this.currentLang; }\n\t        this.translations[lang][key] = value;\n\t        this.updateLangs();\n\t    };\n\t    /**\n\t     * Changes the current lang\n\t     * @param lang\n\t     */\n\t    TranslateService.prototype.changeLang = function (lang) {\n\t        this.currentLang = lang;\n\t        this.onLangChange.emit({ lang: lang, translations: this.translations[lang] });\n\t    };\n\t    /**\n\t     * Allows to reload the lang file from the file\n\t     * @param lang\n\t     * @returns {Observable<any>}\n\t     */\n\t    TranslateService.prototype.reloadLang = function (lang) {\n\t        this.resetLang(lang);\n\t        return this.getTranslation(lang);\n\t    };\n\t    /**\n\t     * Deletes inner translation\n\t     * @param lang\n\t     */\n\t    TranslateService.prototype.resetLang = function (lang) {\n\t        this.translations[lang] = undefined;\n\t    };\n\t    TranslateService = __decorate([\n\t        core_1.Injectable(),\n\t        __param(2, core_1.Optional()), \n\t        __metadata('design:paramtypes', [http_1.Http, TranslateLoader, MissingTranslationHandler])\n\t    ], TranslateService);\n\t    return TranslateService;\n\t}());\n\texports.TranslateService = TranslateService;\n\n\n/***/ },\n\n/***/ 689:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar store_1 = __webpack_require__(48);\n\tvar subscriber_1 = __webpack_require__(230);\n\tvar middleware_1 = __webpack_require__(690);\n\tvar routerMiddleware = [\n\t    store_1.usePostMiddleware(middleware_1.default),\n\t    subscriber_1.default\n\t];\n\texports.routerMiddleware = routerMiddleware;\n\tvar subscriber_2 = __webpack_require__(230);\n\texports.RouterSubscriber = subscriber_2.RouterSubscriber;\n\tvar reducer_1 = __webpack_require__(384);\n\texports.routerReducer = reducer_1.routerReducer;\n\texports.RouterActions = reducer_1.RouterActions;\n\n\n/***/ },\n\n/***/ 690:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t__webpack_require__(500);\n\tvar store_1 = __webpack_require__(48);\n\tvar subscriber_1 = __webpack_require__(230);\n\tvar router_deprecated_1 = __webpack_require__(83);\n\tvar common_1 = __webpack_require__(27);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = store_1.createMiddleware(function (router, location, rs) {\n\t    return function (state$) { return state$.do(function (s) {\n\t        if (s.router.init && (s.router.navigating || s.router.url !== location.path())) {\n\t            router.navigateByUrl(s.router.url);\n\t        }\n\t    }); };\n\t}, [router_deprecated_1.Router, common_1.Location, subscriber_1.RouterSubscriber]);\n\n\n/***/ },\n\n/***/ 384:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar initialState = {\n\t    init: false,\n\t    url: \"\",\n\t    navigating: false\n\t};\n\texports.RouterActions = {\n\t    init: '[ROUTER] INITIALIZED',\n\t    navigated: '[ROUTER] NAVIGATED',\n\t    navigating: '[ROUTER] NAVIGATING'\n\t};\n\texports.routerReducer = function (state, action) {\n\t    if (state === void 0) { state = initialState; }\n\t    switch (action.type) {\n\t        case exports.RouterActions.init:\n\t            return Object.assign({}, state, { url: action.payload.url, init: true });\n\t        case exports.RouterActions.navigating:\n\t            return Object.assign({}, state, { url: action.payload.url, navigating: true });\n\t        case exports.RouterActions.navigated:\n\t            return Object.assign({}, state, { url: action.payload.url, navigating: false });\n\t        default:\n\t            return state;\n\t    }\n\t};\n\n\n/***/ },\n\n/***/ 230:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t__webpack_require__(334);\n\t__webpack_require__(100);\n\t__webpack_require__(501);\n\tvar core_1 = __webpack_require__(1);\n\tvar router_deprecated_1 = __webpack_require__(83);\n\tvar common_1 = __webpack_require__(27);\n\tvar store_1 = __webpack_require__(48);\n\tvar reducer_1 = __webpack_require__(384);\n\texports.RouterSubscriber = new core_1.OpaqueToken('RouterSubscriber');\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = core_1.provide(exports.RouterSubscriber, {\n\t    deps: [core_1.Injector, router_deprecated_1.Router, common_1.Location],\n\t    useFactory: function (injector, router, location) {\n\t        var getStore = function () { return injector.get(store_1.Store); };\n\t        router['_subject']\n\t            .distinctUntilChanged()\n\t            .map(function () { return location.path(); })\n\t            .filter(function (url) {\n\t            var store = getStore();\n\t            var init = store.getState().router.init;\n\t            if (!init) {\n\t                store.dispatch({\n\t                    type: reducer_1.RouterActions.init,\n\t                    payload: { url: url }\n\t                });\n\t            }\n\t            return init;\n\t        })\n\t            .filter(function (url) {\n\t            var router = getStore().getState().router;\n\t            return router.navigating || url !== router.url;\n\t        })\n\t            .map(function (url) {\n\t            return {\n\t                type: reducer_1.RouterActions.navigated,\n\t                payload: { url: url }\n\t            };\n\t        })\n\t            .subscribe(function (action) {\n\t            getStore().dispatch(action);\n\t        });\n\t    }\n\t});\n\n\n/***/ },\n\n/***/ 492:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subject_1 = __webpack_require__(32);\n\tvar throwError_1 = __webpack_require__(345);\n\tvar ObjectUnsubscribedError_1 = __webpack_require__(340);\n\t/**\n\t * @class BehaviorSubject<T>\n\t */\n\tvar BehaviorSubject = (function (_super) {\n\t    __extends(BehaviorSubject, _super);\n\t    function BehaviorSubject(_value) {\n\t        _super.call(this);\n\t        this._value = _value;\n\t    }\n\t    BehaviorSubject.prototype.getValue = function () {\n\t        if (this.hasErrored) {\n\t            throwError_1.throwError(this.errorValue);\n\t        }\n\t        else if (this.isUnsubscribed) {\n\t            throwError_1.throwError(new ObjectUnsubscribedError_1.ObjectUnsubscribedError());\n\t        }\n\t        else {\n\t            return this._value;\n\t        }\n\t    };\n\t    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n\t        get: function () {\n\t            return this.getValue();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    BehaviorSubject.prototype._subscribe = function (subscriber) {\n\t        var subscription = _super.prototype._subscribe.call(this, subscriber);\n\t        if (subscription && !subscription.isUnsubscribed) {\n\t            subscriber.next(this._value);\n\t        }\n\t        return subscription;\n\t    };\n\t    BehaviorSubject.prototype._next = function (value) {\n\t        _super.prototype._next.call(this, this._value = value);\n\t    };\n\t    BehaviorSubject.prototype._error = function (err) {\n\t        this.hasErrored = true;\n\t        _super.prototype._error.call(this, this.errorValue = err);\n\t    };\n\t    return BehaviorSubject;\n\t}(Subject_1.Subject));\n\texports.BehaviorSubject = BehaviorSubject;\n\t//# sourceMappingURL=BehaviorSubject.js.map\n\n/***/ },\n\n/***/ 494:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\t/**\n\t * Represents a push-based event or value that an {@link Observable} can emit.\n\t * This class is particularly useful for operators that manage notifications,\n\t * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n\t * others. Besides wrapping the actual delivered value, it also annotates it\n\t * with metadata of, for instance, what type of push message it is (`next`,\n\t * `error`, or `complete`).\n\t *\n\t * @see {@link materialize}\n\t * @see {@link dematerialize}\n\t * @see {@link observeOn}\n\t *\n\t * @class Notification<T>\n\t */\n\tvar Notification = (function () {\n\t    function Notification(kind, value, exception) {\n\t        this.kind = kind;\n\t        this.value = value;\n\t        this.exception = exception;\n\t        this.hasValue = kind === 'N';\n\t    }\n\t    /**\n\t     * Delivers to the given `observer` the value wrapped by this Notification.\n\t     * @param {Observer} observer\n\t     * @return\n\t     */\n\t    Notification.prototype.observe = function (observer) {\n\t        switch (this.kind) {\n\t            case 'N':\n\t                return observer.next && observer.next(this.value);\n\t            case 'E':\n\t                return observer.error && observer.error(this.exception);\n\t            case 'C':\n\t                return observer.complete && observer.complete();\n\t        }\n\t    };\n\t    /**\n\t     * Given some {@link Observer} callbacks, deliver the value represented by the\n\t     * current Notification to the correctly corresponding callback.\n\t     * @param {function(value: T): void} next An Observer `next` callback.\n\t     * @param {function(err: any): void} [error] An Observer `error` callback.\n\t     * @param {function(): void} [complete] An Observer `complete` callback.\n\t     * @return {any}\n\t     */\n\t    Notification.prototype.do = function (next, error, complete) {\n\t        var kind = this.kind;\n\t        switch (kind) {\n\t            case 'N':\n\t                return next && next(this.value);\n\t            case 'E':\n\t                return error && error(this.exception);\n\t            case 'C':\n\t                return complete && complete();\n\t        }\n\t    };\n\t    /**\n\t     * Takes an Observer or its individual callback functions, and calls `observe`\n\t     * or `do` methods accordingly.\n\t     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n\t     * the `next` callback.\n\t     * @param {function(err: any): void} [error] An Observer `error` callback.\n\t     * @param {function(): void} [complete] An Observer `complete` callback.\n\t     * @return {any}\n\t     */\n\t    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n\t        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n\t            return this.observe(nextOrObserver);\n\t        }\n\t        else {\n\t            return this.do(nextOrObserver, error, complete);\n\t        }\n\t    };\n\t    /**\n\t     * Returns a simple Observable that just delivers the notification represented\n\t     * by this Notification instance.\n\t     * @return {any}\n\t     */\n\t    Notification.prototype.toObservable = function () {\n\t        var kind = this.kind;\n\t        switch (kind) {\n\t            case 'N':\n\t                return Observable_1.Observable.of(this.value);\n\t            case 'E':\n\t                return Observable_1.Observable.throw(this.exception);\n\t            case 'C':\n\t                return Observable_1.Observable.empty();\n\t        }\n\t    };\n\t    /**\n\t     * A shortcut to create a Notification instance of the type `next` from a\n\t     * given value.\n\t     * @param {T} value The `next` value.\n\t     * @return {Notification<T>} The \"next\" Notification representing the\n\t     * argument.\n\t     */\n\t    Notification.createNext = function (value) {\n\t        if (typeof value !== 'undefined') {\n\t            return new Notification('N', value);\n\t        }\n\t        return this.undefinedValueNotification;\n\t    };\n\t    /**\n\t     * A shortcut to create a Notification instance of the type `error` from a\n\t     * given error.\n\t     * @param {any} [err] The `error` exception.\n\t     * @return {Notification<T>} The \"error\" Notification representing the\n\t     * argument.\n\t     */\n\t    Notification.createError = function (err) {\n\t        return new Notification('E', undefined, err);\n\t    };\n\t    /**\n\t     * A shortcut to create a Notification instance of the type `complete`.\n\t     * @return {Notification<any>} The valueless \"complete\" Notification.\n\t     */\n\t    Notification.createComplete = function () {\n\t        return this.completeNotification;\n\t    };\n\t    Notification.completeNotification = new Notification('C');\n\t    Notification.undefinedValueNotification = new Notification('N', undefined);\n\t    return Notification;\n\t}());\n\texports.Notification = Notification;\n\t//# sourceMappingURL=Notification.js.map\n\n/***/ },\n\n/***/ 496:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subject_1 = __webpack_require__(32);\n\tvar queue_1 = __webpack_require__(338);\n\tvar observeOn_1 = __webpack_require__(336);\n\t/**\n\t * @class ReplaySubject<T>\n\t */\n\tvar ReplaySubject = (function (_super) {\n\t    __extends(ReplaySubject, _super);\n\t    function ReplaySubject(bufferSize, windowTime, scheduler) {\n\t        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n\t        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n\t        _super.call(this);\n\t        this.events = [];\n\t        this.scheduler = scheduler;\n\t        this.bufferSize = bufferSize < 1 ? 1 : bufferSize;\n\t        this._windowTime = windowTime < 1 ? 1 : windowTime;\n\t    }\n\t    ReplaySubject.prototype._next = function (value) {\n\t        var now = this._getNow();\n\t        this.events.push(new ReplayEvent(now, value));\n\t        this._trimBufferThenGetEvents(now);\n\t        _super.prototype._next.call(this, value);\n\t    };\n\t    ReplaySubject.prototype._subscribe = function (subscriber) {\n\t        var events = this._trimBufferThenGetEvents(this._getNow());\n\t        var scheduler = this.scheduler;\n\t        if (scheduler) {\n\t            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n\t        }\n\t        var index = -1;\n\t        var len = events.length;\n\t        while (++index < len && !subscriber.isUnsubscribed) {\n\t            subscriber.next(events[index].value);\n\t        }\n\t        return _super.prototype._subscribe.call(this, subscriber);\n\t    };\n\t    ReplaySubject.prototype._getNow = function () {\n\t        return (this.scheduler || queue_1.queue).now();\n\t    };\n\t    ReplaySubject.prototype._trimBufferThenGetEvents = function (now) {\n\t        var bufferSize = this.bufferSize;\n\t        var _windowTime = this._windowTime;\n\t        var events = this.events;\n\t        var eventsCount = events.length;\n\t        var spliceCount = 0;\n\t        // Trim events that fall out of the time window.\n\t        // Start at the front of the list. Break early once\n\t        // we encounter an event that falls within the window.\n\t        while (spliceCount < eventsCount) {\n\t            if ((now - events[spliceCount].time) < _windowTime) {\n\t                break;\n\t            }\n\t            spliceCount += 1;\n\t        }\n\t        if (eventsCount > bufferSize) {\n\t            spliceCount = Math.max(spliceCount, eventsCount - bufferSize);\n\t        }\n\t        if (spliceCount > 0) {\n\t            events.splice(0, spliceCount);\n\t        }\n\t        return events;\n\t    };\n\t    return ReplaySubject;\n\t}(Subject_1.Subject));\n\texports.ReplaySubject = ReplaySubject;\n\tvar ReplayEvent = (function () {\n\t    function ReplayEvent(time, value) {\n\t        this.time = time;\n\t        this.value = value;\n\t    }\n\t    return ReplayEvent;\n\t}());\n\t//# sourceMappingURL=ReplaySubject.js.map\n\n/***/ },\n\n/***/ 498:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar fromEvent_1 = __webpack_require__(513);\n\tObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n\t//# sourceMappingURL=fromEvent.js.map\n\n/***/ },\n\n/***/ 499:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar of_1 = __webpack_require__(514);\n\tObservable_1.Observable.of = of_1.of;\n\t//# sourceMappingURL=of.js.map\n\n/***/ },\n\n/***/ 334:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar distinctUntilChanged_1 = __webpack_require__(515);\n\tObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n\t//# sourceMappingURL=distinctUntilChanged.js.map\n\n/***/ },\n\n/***/ 500:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar do_1 = __webpack_require__(516);\n\tObservable_1.Observable.prototype.do = do_1._do;\n\t//# sourceMappingURL=do.js.map\n\n/***/ },\n\n/***/ 501:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar filter_1 = __webpack_require__(517);\n\tObservable_1.Observable.prototype.filter = filter_1.filter;\n\t//# sourceMappingURL=filter.js.map\n\n/***/ },\n\n/***/ 502:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar let_1 = __webpack_require__(518);\n\tObservable_1.Observable.prototype.let = let_1.letProto;\n\tObservable_1.Observable.prototype.letBind = let_1.letProto;\n\t//# sourceMappingURL=let.js.map\n\n/***/ },\n\n/***/ 503:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar merge_1 = __webpack_require__(520);\n\tObservable_1.Observable.prototype.merge = merge_1.merge;\n\t//# sourceMappingURL=merge.js.map\n\n/***/ },\n\n/***/ 505:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar observeOn_1 = __webpack_require__(336);\n\tObservable_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n\t//# sourceMappingURL=observeOn.js.map\n\n/***/ },\n\n/***/ 506:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar scan_1 = __webpack_require__(524);\n\tObservable_1.Observable.prototype.scan = scan_1.scan;\n\t//# sourceMappingURL=scan.js.map\n\n/***/ },\n\n/***/ 507:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar share_1 = __webpack_require__(525);\n\tObservable_1.Observable.prototype.share = share_1.share;\n\t//# sourceMappingURL=share.js.map\n\n/***/ },\n\n/***/ 508:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(7);\n\tvar toArray_1 = __webpack_require__(526);\n\tObservable_1.Observable.prototype.toArray = toArray_1.toArray;\n\t//# sourceMappingURL=toArray.js.map\n\n/***/ },\n\n/***/ 335:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(7);\n\tvar ScalarObservable_1 = __webpack_require__(512);\n\tvar EmptyObservable_1 = __webpack_require__(510);\n\tvar isScheduler_1 = __webpack_require__(343);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar ArrayObservable = (function (_super) {\n\t    __extends(ArrayObservable, _super);\n\t    function ArrayObservable(array, scheduler) {\n\t        _super.call(this);\n\t        this.array = array;\n\t        this.scheduler = scheduler;\n\t        if (!scheduler && array.length === 1) {\n\t            this._isScalar = true;\n\t            this.value = array[0];\n\t        }\n\t    }\n\t    ArrayObservable.create = function (array, scheduler) {\n\t        return new ArrayObservable(array, scheduler);\n\t    };\n\t    /**\n\t     * Creates an Observable that emits some values you specify as arguments,\n\t     * immediately one after the other, and then emits a complete notification.\n\t     *\n\t     * <span class=\"informal\">Emits the arguments you provide, then completes.\n\t     * </span>\n\t     *\n\t     * <img src=\"./img/of.png\" width=\"100%\">\n\t     *\n\t     * This static operator is useful for creating a simple Observable that only\n\t     * emits the arguments given, and the complete notification thereafter. It can\n\t     * be used for composing with other Observables, such as with {@link concat}.\n\t     * By default, it uses a `null` Scheduler, which means the `next`\n\t     * notifications are sent synchronously, although with a different Scheduler\n\t     * it is possible to determine when those notifications will be delivered.\n\t     *\n\t     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n\t     * var numbers = Rx.Observable.of(10, 20, 30);\n\t     * var letters = Rx.Observable.of('a', 'b', 'c');\n\t     * var interval = Rx.Observable.interval(1000);\n\t     * var result = numbers.concat(letters).concat(interval);\n\t     * result.subscribe(x => console.log(x));\n\t     *\n\t     * @see {@link create}\n\t     * @see {@link empty}\n\t     * @see {@link never}\n\t     * @see {@link throw}\n\t     *\n\t     * @param {...T} values Arguments that represent `next` values to be emitted.\n\t     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n\t     * the emissions of the `next` notifications.\n\t     * @return {Observable<T>} An Observable that emits each given input value.\n\t     * @static true\n\t     * @name of\n\t     * @owner Observable\n\t     */\n\t    ArrayObservable.of = function () {\n\t        var array = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            array[_i - 0] = arguments[_i];\n\t        }\n\t        var scheduler = array[array.length - 1];\n\t        if (isScheduler_1.isScheduler(scheduler)) {\n\t            array.pop();\n\t        }\n\t        else {\n\t            scheduler = null;\n\t        }\n\t        var len = array.length;\n\t        if (len > 1) {\n\t            return new ArrayObservable(array, scheduler);\n\t        }\n\t        else if (len === 1) {\n\t            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n\t        }\n\t        else {\n\t            return new EmptyObservable_1.EmptyObservable(scheduler);\n\t        }\n\t    };\n\t    ArrayObservable.dispatch = function (state) {\n\t        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n\t        if (index >= count) {\n\t            subscriber.complete();\n\t            return;\n\t        }\n\t        subscriber.next(array[index]);\n\t        if (subscriber.isUnsubscribed) {\n\t            return;\n\t        }\n\t        state.index = index + 1;\n\t        this.schedule(state);\n\t    };\n\t    ArrayObservable.prototype._subscribe = function (subscriber) {\n\t        var index = 0;\n\t        var array = this.array;\n\t        var count = array.length;\n\t        var scheduler = this.scheduler;\n\t        if (scheduler) {\n\t            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n\t                array: array, index: index, count: count, subscriber: subscriber\n\t            });\n\t        }\n\t        else {\n\t            for (var i = 0; i < count && !subscriber.isUnsubscribed; i++) {\n\t                subscriber.next(array[i]);\n\t            }\n\t            subscriber.complete();\n\t        }\n\t    };\n\t    return ArrayObservable;\n\t}(Observable_1.Observable));\n\texports.ArrayObservable = ArrayObservable;\n\t//# sourceMappingURL=ArrayObservable.js.map\n\n/***/ },\n\n/***/ 509:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(7);\n\tvar Subscriber_1 = __webpack_require__(33);\n\tvar Subscription_1 = __webpack_require__(85);\n\t/**\n\t * @class ConnectableObservable<T>\n\t */\n\tvar ConnectableObservable = (function (_super) {\n\t    __extends(ConnectableObservable, _super);\n\t    function ConnectableObservable(source, subjectFactory) {\n\t        _super.call(this);\n\t        this.source = source;\n\t        this.subjectFactory = subjectFactory;\n\t    }\n\t    ConnectableObservable.prototype._subscribe = function (subscriber) {\n\t        return this.getSubject().subscribe(subscriber);\n\t    };\n\t    ConnectableObservable.prototype.getSubject = function () {\n\t        var subject = this.subject;\n\t        if (subject && !subject.isUnsubscribed) {\n\t            return subject;\n\t        }\n\t        return (this.subject = this.subjectFactory());\n\t    };\n\t    ConnectableObservable.prototype.connect = function () {\n\t        var source = this.source;\n\t        var subscription = this.subscription;\n\t        if (subscription && !subscription.isUnsubscribed) {\n\t            return subscription;\n\t        }\n\t        subscription = source.subscribe(this.getSubject());\n\t        subscription.add(new ConnectableSubscription(this));\n\t        return (this.subscription = subscription);\n\t    };\n\t    ConnectableObservable.prototype.refCount = function () {\n\t        return new RefCountObservable(this);\n\t    };\n\t    /**\n\t     * This method is opened for `ConnectableSubscription`.\n\t     * Not to call from others.\n\t     */\n\t    ConnectableObservable.prototype._closeSubscription = function () {\n\t        this.subject = null;\n\t        this.subscription = null;\n\t    };\n\t    return ConnectableObservable;\n\t}(Observable_1.Observable));\n\texports.ConnectableObservable = ConnectableObservable;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar ConnectableSubscription = (function (_super) {\n\t    __extends(ConnectableSubscription, _super);\n\t    function ConnectableSubscription(connectable) {\n\t        _super.call(this);\n\t        this.connectable = connectable;\n\t    }\n\t    ConnectableSubscription.prototype._unsubscribe = function () {\n\t        var connectable = this.connectable;\n\t        connectable._closeSubscription();\n\t        this.connectable = null;\n\t    };\n\t    return ConnectableSubscription;\n\t}(Subscription_1.Subscription));\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar RefCountObservable = (function (_super) {\n\t    __extends(RefCountObservable, _super);\n\t    function RefCountObservable(connectable, refCount) {\n\t        if (refCount === void 0) { refCount = 0; }\n\t        _super.call(this);\n\t        this.connectable = connectable;\n\t        this.refCount = refCount;\n\t    }\n\t    RefCountObservable.prototype._subscribe = function (subscriber) {\n\t        var connectable = this.connectable;\n\t        var refCountSubscriber = new RefCountSubscriber(subscriber, this);\n\t        var subscription = connectable.subscribe(refCountSubscriber);\n\t        if (!subscription.isUnsubscribed && ++this.refCount === 1) {\n\t            refCountSubscriber.connection = this.connection = connectable.connect();\n\t        }\n\t        return subscription;\n\t    };\n\t    return RefCountObservable;\n\t}(Observable_1.Observable));\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar RefCountSubscriber = (function (_super) {\n\t    __extends(RefCountSubscriber, _super);\n\t    function RefCountSubscriber(destination, refCountObservable) {\n\t        _super.call(this, null);\n\t        this.destination = destination;\n\t        this.refCountObservable = refCountObservable;\n\t        this.connection = refCountObservable.connection;\n\t        destination.add(this);\n\t    }\n\t    RefCountSubscriber.prototype._next = function (value) {\n\t        this.destination.next(value);\n\t    };\n\t    RefCountSubscriber.prototype._error = function (err) {\n\t        this._resetConnectable();\n\t        this.destination.error(err);\n\t    };\n\t    RefCountSubscriber.prototype._complete = function () {\n\t        this._resetConnectable();\n\t        this.destination.complete();\n\t    };\n\t    RefCountSubscriber.prototype._resetConnectable = function () {\n\t        var observable = this.refCountObservable;\n\t        var obsConnection = observable.connection;\n\t        var subConnection = this.connection;\n\t        if (subConnection && subConnection === obsConnection) {\n\t            observable.refCount = 0;\n\t            obsConnection.unsubscribe();\n\t            observable.connection = null;\n\t            this.unsubscribe();\n\t        }\n\t    };\n\t    RefCountSubscriber.prototype._unsubscribe = function () {\n\t        var observable = this.refCountObservable;\n\t        if (observable.refCount === 0) {\n\t            return;\n\t        }\n\t        if (--observable.refCount === 0) {\n\t            var obsConnection = observable.connection;\n\t            var subConnection = this.connection;\n\t            if (subConnection && subConnection === obsConnection) {\n\t                obsConnection.unsubscribe();\n\t                observable.connection = null;\n\t            }\n\t        }\n\t    };\n\t    return RefCountSubscriber;\n\t}(Subscriber_1.Subscriber));\n\t//# sourceMappingURL=ConnectableObservable.js.map\n\n/***/ },\n\n/***/ 510:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(7);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar EmptyObservable = (function (_super) {\n\t    __extends(EmptyObservable, _super);\n\t    function EmptyObservable(scheduler) {\n\t        _super.call(this);\n\t        this.scheduler = scheduler;\n\t    }\n\t    /**\n\t     * Creates an Observable that emits no items to the Observer and immediately\n\t     * emits a complete notification.\n\t     *\n\t     * <span class=\"informal\">Just emits 'complete', and nothing else.\n\t     * </span>\n\t     *\n\t     * <img src=\"./img/empty.png\" width=\"100%\">\n\t     *\n\t     * This static operator is useful for creating a simple Observable that only\n\t     * emits the complete notification. It can be used for composing with other\n\t     * Observables, such as in a {@link mergeMap}.\n\t     *\n\t     * @example <caption>Emit the number 7, then complete.</caption>\n\t     * var result = Rx.Observable.empty().startWith(7);\n\t     * result.subscribe(x => console.log(x));\n\t     *\n\t     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n\t     * var interval = Rx.Observable.interval(1000);\n\t     * var result = interval.mergeMap(x =>\n\t     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n\t     * );\n\t     * result.subscribe(x => console.log(x));\n\t     *\n\t     * @see {@link create}\n\t     * @see {@link never}\n\t     * @see {@link of}\n\t     * @see {@link throw}\n\t     *\n\t     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n\t     * the emission of the complete notification.\n\t     * @return {Observable} An \"empty\" Observable: emits only the complete\n\t     * notification.\n\t     * @static true\n\t     * @name empty\n\t     * @owner Observable\n\t     */\n\t    EmptyObservable.create = function (scheduler) {\n\t        return new EmptyObservable(scheduler);\n\t    };\n\t    EmptyObservable.dispatch = function (arg) {\n\t        var subscriber = arg.subscriber;\n\t        subscriber.complete();\n\t    };\n\t    EmptyObservable.prototype._subscribe = function (subscriber) {\n\t        var scheduler = this.scheduler;\n\t        if (scheduler) {\n\t            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n\t        }\n\t        else {\n\t            subscriber.complete();\n\t        }\n\t    };\n\t    return EmptyObservable;\n\t}(Observable_1.Observable));\n\texports.EmptyObservable = EmptyObservable;\n\t//# sourceMappingURL=EmptyObservable.js.map\n\n/***/ },\n\n/***/ 511:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(7);\n\tvar tryCatch_1 = __webpack_require__(206);\n\tvar errorObject_1 = __webpack_require__(134);\n\tvar Subscription_1 = __webpack_require__(85);\n\tfunction isNodeStyleEventEmmitter(sourceObj) {\n\t    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n\t}\n\tfunction isJQueryStyleEventEmitter(sourceObj) {\n\t    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n\t}\n\tfunction isNodeList(sourceObj) {\n\t    return !!sourceObj && sourceObj.toString() === '[object NodeList]';\n\t}\n\tfunction isHTMLCollection(sourceObj) {\n\t    return !!sourceObj && sourceObj.toString() === '[object HTMLCollection]';\n\t}\n\tfunction isEventTarget(sourceObj) {\n\t    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n\t}\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar FromEventObservable = (function (_super) {\n\t    __extends(FromEventObservable, _super);\n\t    function FromEventObservable(sourceObj, eventName, selector) {\n\t        _super.call(this);\n\t        this.sourceObj = sourceObj;\n\t        this.eventName = eventName;\n\t        this.selector = selector;\n\t    }\n\t    /**\n\t     * @param sourceObj\n\t     * @param eventName\n\t     * @param selector\n\t     * @return {FromEventObservable}\n\t     * @static true\n\t     * @name fromEvent\n\t     * @owner Observable\n\t     */\n\t    FromEventObservable.create = function (sourceObj, eventName, selector) {\n\t        return new FromEventObservable(sourceObj, eventName, selector);\n\t    };\n\t    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber) {\n\t        var unsubscribe;\n\t        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n\t            for (var i = 0, len = sourceObj.length; i < len; i++) {\n\t                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber);\n\t            }\n\t        }\n\t        else if (isEventTarget(sourceObj)) {\n\t            sourceObj.addEventListener(eventName, handler);\n\t            unsubscribe = function () { return sourceObj.removeEventListener(eventName, handler); };\n\t        }\n\t        else if (isJQueryStyleEventEmitter(sourceObj)) {\n\t            sourceObj.on(eventName, handler);\n\t            unsubscribe = function () { return sourceObj.off(eventName, handler); };\n\t        }\n\t        else if (isNodeStyleEventEmmitter(sourceObj)) {\n\t            sourceObj.addListener(eventName, handler);\n\t            unsubscribe = function () { return sourceObj.removeListener(eventName, handler); };\n\t        }\n\t        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n\t    };\n\t    FromEventObservable.prototype._subscribe = function (subscriber) {\n\t        var sourceObj = this.sourceObj;\n\t        var eventName = this.eventName;\n\t        var selector = this.selector;\n\t        var handler = selector ? function () {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n\t            if (result === errorObject_1.errorObject) {\n\t                subscriber.error(errorObject_1.errorObject.e);\n\t            }\n\t            else {\n\t                subscriber.next(result);\n\t            }\n\t        } : function (e) { return subscriber.next(e); };\n\t        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber);\n\t    };\n\t    return FromEventObservable;\n\t}(Observable_1.Observable));\n\texports.FromEventObservable = FromEventObservable;\n\t//# sourceMappingURL=FromEventObservable.js.map\n\n/***/ },\n\n/***/ 512:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(7);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar ScalarObservable = (function (_super) {\n\t    __extends(ScalarObservable, _super);\n\t    function ScalarObservable(value, scheduler) {\n\t        _super.call(this);\n\t        this.value = value;\n\t        this.scheduler = scheduler;\n\t        this._isScalar = true;\n\t    }\n\t    ScalarObservable.create = function (value, scheduler) {\n\t        return new ScalarObservable(value, scheduler);\n\t    };\n\t    ScalarObservable.dispatch = function (state) {\n\t        var done = state.done, value = state.value, subscriber = state.subscriber;\n\t        if (done) {\n\t            subscriber.complete();\n\t            return;\n\t        }\n\t        subscriber.next(value);\n\t        if (subscriber.isUnsubscribed) {\n\t            return;\n\t        }\n\t        state.done = true;\n\t        this.schedule(state);\n\t    };\n\t    ScalarObservable.prototype._subscribe = function (subscriber) {\n\t        var value = this.value;\n\t        var scheduler = this.scheduler;\n\t        if (scheduler) {\n\t            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n\t                done: false, value: value, subscriber: subscriber\n\t            });\n\t        }\n\t        else {\n\t            subscriber.next(value);\n\t            if (!subscriber.isUnsubscribed) {\n\t                subscriber.complete();\n\t            }\n\t        }\n\t    };\n\t    return ScalarObservable;\n\t}(Observable_1.Observable));\n\texports.ScalarObservable = ScalarObservable;\n\t//# sourceMappingURL=ScalarObservable.js.map\n\n/***/ },\n\n/***/ 513:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar FromEventObservable_1 = __webpack_require__(511);\n\texports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n\t//# sourceMappingURL=fromEvent.js.map\n\n/***/ },\n\n/***/ 514:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar ArrayObservable_1 = __webpack_require__(335);\n\texports.of = ArrayObservable_1.ArrayObservable.of;\n\t//# sourceMappingURL=of.js.map\n\n/***/ },\n\n/***/ 515:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(33);\n\tvar tryCatch_1 = __webpack_require__(206);\n\tvar errorObject_1 = __webpack_require__(134);\n\t/**\n\t * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n\t * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n\t * If a comparator function is not provided, an equality check is used by default.\n\t * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n\t * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n\t * @method distinctUntilChanged\n\t * @owner Observable\n\t */\n\tfunction distinctUntilChanged(compare, keySelector) {\n\t    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n\t}\n\texports.distinctUntilChanged = distinctUntilChanged;\n\tvar DistinctUntilChangedOperator = (function () {\n\t    function DistinctUntilChangedOperator(compare, keySelector) {\n\t        this.compare = compare;\n\t        this.keySelector = keySelector;\n\t    }\n\t    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n\t    };\n\t    return DistinctUntilChangedOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar DistinctUntilChangedSubscriber = (function (_super) {\n\t    __extends(DistinctUntilChangedSubscriber, _super);\n\t    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n\t        _super.call(this, destination);\n\t        this.keySelector = keySelector;\n\t        this.hasKey = false;\n\t        if (typeof compare === 'function') {\n\t            this.compare = compare;\n\t        }\n\t    }\n\t    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n\t        return x === y;\n\t    };\n\t    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n\t        var keySelector = this.keySelector;\n\t        var key = value;\n\t        if (keySelector) {\n\t            key = tryCatch_1.tryCatch(this.keySelector)(value);\n\t            if (key === errorObject_1.errorObject) {\n\t                return this.destination.error(errorObject_1.errorObject.e);\n\t            }\n\t        }\n\t        var result = false;\n\t        if (this.hasKey) {\n\t            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n\t            if (result === errorObject_1.errorObject) {\n\t                return this.destination.error(errorObject_1.errorObject.e);\n\t            }\n\t        }\n\t        else {\n\t            this.hasKey = true;\n\t        }\n\t        if (Boolean(result) === false) {\n\t            this.key = key;\n\t            this.destination.next(value);\n\t        }\n\t    };\n\t    return DistinctUntilChangedSubscriber;\n\t}(Subscriber_1.Subscriber));\n\t//# sourceMappingURL=distinctUntilChanged.js.map\n\n/***/ },\n\n/***/ 516:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(33);\n\t/**\n\t * Perform a side effect for every emission on the source Observable, but return\n\t * an Observable that is identical to the source.\n\t *\n\t * <span class=\"informal\">Intercepts each emission on the source and runs a\n\t * function, but returns an output which is identical to the source.</span>\n\t *\n\t * <img src=\"./img/do.png\" width=\"100%\">\n\t *\n\t * Returns a mirrored Observable of the source Observable, but modified so that\n\t * the provided Observer is called to perform a side effect for every value,\n\t * error, and completion emitted by the source. Any errors that are thrown in\n\t * the aforementioned Observer or handlers are safely sent down the error path\n\t * of the output Observable.\n\t *\n\t * This operator is useful for debugging your Observables for the correct values\n\t * or performing other side effects.\n\t *\n\t * Note: this is different to a `subscribe` on the Observable. If the Observable\n\t * returned by `do` is not subscribed, the side effects specified by the\n\t * Observer will never happen. `do` therefore simply spies on existing\n\t * execution, it does not trigger an execution to happen like `subscribe` does.\n\t *\n\t * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var positions = clicks\n\t *   .do(ev => console.log(ev))\n\t *   .map(ev => ev.clientX);\n\t * positions.subscribe(x => console.log(x));\n\t *\n\t * @see {@link map}\n\t * @see {@link subscribe}\n\t *\n\t * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n\t * callback for `next`.\n\t * @param {function} [error] Callback for errors in the source.\n\t * @param {function} [complete] Callback for the completion of the source.\n\t * @return {Observable} An Observable identical to the source, but runs the\n\t * specified Observer or callback(s) for each item.\n\t * @method do\n\t * @name do\n\t * @owner Observable\n\t */\n\tfunction _do(nextOrObserver, error, complete) {\n\t    return this.lift(new DoOperator(nextOrObserver, error, complete));\n\t}\n\texports._do = _do;\n\tvar DoOperator = (function () {\n\t    function DoOperator(nextOrObserver, error, complete) {\n\t        this.nextOrObserver = nextOrObserver;\n\t        this.error = error;\n\t        this.complete = complete;\n\t    }\n\t    DoOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n\t    };\n\t    return DoOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar DoSubscriber = (function (_super) {\n\t    __extends(DoSubscriber, _super);\n\t    function DoSubscriber(destination, nextOrObserver, error, complete) {\n\t        _super.call(this, destination);\n\t        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n\t        safeSubscriber.syncErrorThrowable = true;\n\t        this.add(safeSubscriber);\n\t        this.safeSubscriber = safeSubscriber;\n\t    }\n\t    DoSubscriber.prototype._next = function (value) {\n\t        var safeSubscriber = this.safeSubscriber;\n\t        safeSubscriber.next(value);\n\t        if (safeSubscriber.syncErrorThrown) {\n\t            this.destination.error(safeSubscriber.syncErrorValue);\n\t        }\n\t        else {\n\t            this.destination.next(value);\n\t        }\n\t    };\n\t    DoSubscriber.prototype._error = function (err) {\n\t        var safeSubscriber = this.safeSubscriber;\n\t        safeSubscriber.error(err);\n\t        if (safeSubscriber.syncErrorThrown) {\n\t            this.destination.error(safeSubscriber.syncErrorValue);\n\t        }\n\t        else {\n\t            this.destination.error(err);\n\t        }\n\t    };\n\t    DoSubscriber.prototype._complete = function () {\n\t        var safeSubscriber = this.safeSubscriber;\n\t        safeSubscriber.complete();\n\t        if (safeSubscriber.syncErrorThrown) {\n\t            this.destination.error(safeSubscriber.syncErrorValue);\n\t        }\n\t        else {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    return DoSubscriber;\n\t}(Subscriber_1.Subscriber));\n\t//# sourceMappingURL=do.js.map\n\n/***/ },\n\n/***/ 517:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(33);\n\t/**\n\t * Filter items emitted by the source Observable by only emitting those that\n\t * satisfy a specified predicate.\n\t *\n\t * <span class=\"informal\">Like\n\t * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n\t * it only emits a value from the source if it passes a criterion function.</span>\n\t *\n\t * <img src=\"./img/filter.png\" width=\"100%\">\n\t *\n\t * Similar to the well-known `Array.prototype.filter` method, this operator\n\t * takes values from the source Observable, passes them through a `predicate`\n\t * function and only emits those values that yielded `true`.\n\t *\n\t * @example <caption>Emit only click events whose target was a DIV element</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n\t * clicksOnDivs.subscribe(x => console.log(x));\n\t *\n\t * @see {@link distinct}\n\t * @see {@link distinctKey}\n\t * @see {@link distinctUntilChanged}\n\t * @see {@link distinctUntilKeyChanged}\n\t * @see {@link ignoreElements}\n\t * @see {@link partition}\n\t * @see {@link skip}\n\t *\n\t * @param {function(value: T, index: number): boolean} predicate A function that\n\t * evaluates each value emitted by the source Observable. If it returns `true`,\n\t * the value is emitted, if `false` the value is not passed to the output\n\t * Observable. The `index` parameter is the number `i` for the i-th source\n\t * emission that has happened since the subscription, starting from the number\n\t * `0`.\n\t * @param {any} [thisArg] An optional argument to determine the value of `this`\n\t * in the `predicate` function.\n\t * @return {Observable} An Observable of values from the source that were\n\t * allowed by the `predicate` function.\n\t * @method filter\n\t * @owner Observable\n\t */\n\tfunction filter(predicate, thisArg) {\n\t    return this.lift(new FilterOperator(predicate, thisArg));\n\t}\n\texports.filter = filter;\n\tvar FilterOperator = (function () {\n\t    function FilterOperator(predicate, thisArg) {\n\t        this.predicate = predicate;\n\t        this.thisArg = thisArg;\n\t    }\n\t    FilterOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n\t    };\n\t    return FilterOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar FilterSubscriber = (function (_super) {\n\t    __extends(FilterSubscriber, _super);\n\t    function FilterSubscriber(destination, predicate, thisArg) {\n\t        _super.call(this, destination);\n\t        this.predicate = predicate;\n\t        this.thisArg = thisArg;\n\t        this.count = 0;\n\t        this.predicate = predicate;\n\t    }\n\t    // the try catch block below is left specifically for\n\t    // optimization and perf reasons. a tryCatcher is not necessary here.\n\t    FilterSubscriber.prototype._next = function (value) {\n\t        var result;\n\t        try {\n\t            result = this.predicate.call(this.thisArg, value, this.count++);\n\t        }\n\t        catch (err) {\n\t            this.destination.error(err);\n\t            return;\n\t        }\n\t        if (result) {\n\t            this.destination.next(value);\n\t        }\n\t    };\n\t    return FilterSubscriber;\n\t}(Subscriber_1.Subscriber));\n\t//# sourceMappingURL=filter.js.map\n\n/***/ },\n\n/***/ 518:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * @param func\n\t * @return {Observable<R>}\n\t * @method let\n\t * @owner Observable\n\t */\n\tfunction letProto(func) {\n\t    return func(this);\n\t}\n\texports.letProto = letProto;\n\t//# sourceMappingURL=let.js.map\n\n/***/ },\n\n/***/ 520:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar ArrayObservable_1 = __webpack_require__(335);\n\tvar mergeAll_1 = __webpack_require__(521);\n\tvar isScheduler_1 = __webpack_require__(343);\n\t/**\n\t * Creates an output Observable which concurrently emits all values from every\n\t * given input Observable.\n\t *\n\t * <span class=\"informal\">Flattens multiple Observables together by blending\n\t * their values into one Observable.</span>\n\t *\n\t * <img src=\"./img/merge.png\" width=\"100%\">\n\t *\n\t * `merge` subscribes to each given input Observable (either the source or an\n\t * Observable given as argument), and simply forwards (without doing any\n\t * transformation) all the values from all the input Observables to the output\n\t * Observable. The output Observable only completes once all input Observables\n\t * have completed. Any error delivered by an input Observable will be immediately\n\t * emitted on the output Observable.\n\t *\n\t * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var timer = Rx.Observable.interval(1000);\n\t * var clicksOrTimer = clicks.merge(timer);\n\t * clicksOrTimer.subscribe(x => console.log(x));\n\t *\n\t * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n\t * var timer1 = Rx.Observable.interval(1000).take(10);\n\t * var timer2 = Rx.Observable.interval(2000).take(6);\n\t * var timer3 = Rx.Observable.interval(500).take(10);\n\t * var concurrent = 2; // the argument\n\t * var merged = timer1.merge(timer2, timer3, concurrent);\n\t * merged.subscribe(x => console.log(x));\n\t *\n\t * @see {@link mergeAll}\n\t * @see {@link mergeMap}\n\t * @see {@link mergeMapTo}\n\t * @see {@link mergeScan}\n\t *\n\t * @param {Observable} other An input Observable to merge with the source\n\t * Observable. More than one input Observables may be given as argument.\n\t * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n\t * Observables being subscribed to concurrently.\n\t * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n\t * concurrency of input Observables.\n\t * @return {Observable} an Observable that emits items that are the result of\n\t * every input Observable.\n\t * @method merge\n\t * @owner Observable\n\t */\n\tfunction merge() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    observables.unshift(this);\n\t    return mergeStatic.apply(this, observables);\n\t}\n\texports.merge = merge;\n\t/* tslint:enable:max-line-length */\n\t/**\n\t * Creates an output Observable which concurrently emits all values from every\n\t * given input Observable.\n\t *\n\t * <span class=\"informal\">Flattens multiple Observables together by blending\n\t * their values into one Observable.</span>\n\t *\n\t * <img src=\"./img/merge.png\" width=\"100%\">\n\t *\n\t * `merge` subscribes to each given input Observable (as arguments), and simply\n\t * forwards (without doing any transformation) all the values from all the input\n\t * Observables to the output Observable. The output Observable only completes\n\t * once all input Observables have completed. Any error delivered by an input\n\t * Observable will be immediately emitted on the output Observable.\n\t *\n\t * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var timer = Rx.Observable.interval(1000);\n\t * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n\t * clicksOrTimer.subscribe(x => console.log(x));\n\t *\n\t * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n\t * var timer1 = Rx.Observable.interval(1000).take(10);\n\t * var timer2 = Rx.Observable.interval(2000).take(6);\n\t * var timer3 = Rx.Observable.interval(500).take(10);\n\t * var concurrent = 2; // the argument\n\t * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n\t * merged.subscribe(x => console.log(x));\n\t *\n\t * @see {@link mergeAll}\n\t * @see {@link mergeMap}\n\t * @see {@link mergeMapTo}\n\t * @see {@link mergeScan}\n\t *\n\t * @param {Observable} input1 An input Observable to merge with others.\n\t * @param {Observable} input2 An input Observable to merge with others.\n\t * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n\t * Observables being subscribed to concurrently.\n\t * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n\t * concurrency of input Observables.\n\t * @return {Observable} an Observable that emits items that are the result of\n\t * every input Observable.\n\t * @static true\n\t * @name merge\n\t * @owner Observable\n\t */\n\tfunction mergeStatic() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    var concurrent = Number.POSITIVE_INFINITY;\n\t    var scheduler = null;\n\t    var last = observables[observables.length - 1];\n\t    if (isScheduler_1.isScheduler(last)) {\n\t        scheduler = observables.pop();\n\t        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n\t            concurrent = observables.pop();\n\t        }\n\t    }\n\t    else if (typeof last === 'number') {\n\t        concurrent = observables.pop();\n\t    }\n\t    if (observables.length === 1) {\n\t        return observables[0];\n\t    }\n\t    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n\t}\n\texports.mergeStatic = mergeStatic;\n\t//# sourceMappingURL=merge.js.map\n\n/***/ },\n\n/***/ 521:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar OuterSubscriber_1 = __webpack_require__(333);\n\tvar subscribeToResult_1 = __webpack_require__(344);\n\t/**\n\t * Converts a higher-order Observable into a first-order Observable which\n\t * concurrently delivers all values that are emitted on the inner Observables.\n\t *\n\t * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n\t *\n\t * <img src=\"./img/mergeAll.png\" width=\"100%\">\n\t *\n\t * `mergeAll` subscribes to an Observable that emits Observables, also known as\n\t * a higher-order Observable. Each time it observes one of these emitted inner\n\t * Observables, it subscribes to that and delivers all the values from the\n\t * inner Observable on the output Observable. The output Observable only\n\t * completes once all inner Observables have completed. Any error delivered by\n\t * a inner Observable will be immediately emitted on the output Observable.\n\t *\n\t * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n\t * var firstOrder = higherOrder.mergeAll();\n\t * firstOrder.subscribe(x => console.log(x));\n\t *\n\t * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n\t * var firstOrder = higherOrder.mergeAll(2);\n\t * firstOrder.subscribe(x => console.log(x));\n\t *\n\t * @see {@link combineAll}\n\t * @see {@link concatAll}\n\t * @see {@link exhaust}\n\t * @see {@link merge}\n\t * @see {@link mergeMap}\n\t * @see {@link mergeMapTo}\n\t * @see {@link mergeScan}\n\t * @see {@link switch}\n\t * @see {@link zipAll}\n\t *\n\t * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n\t * Observables being subscribed to concurrently.\n\t * @return {Observable} An Observable that emits values coming from all the\n\t * inner Observables emitted by the source Observable.\n\t * @method mergeAll\n\t * @owner Observable\n\t */\n\tfunction mergeAll(concurrent) {\n\t    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n\t    return this.lift(new MergeAllOperator(concurrent));\n\t}\n\texports.mergeAll = mergeAll;\n\tvar MergeAllOperator = (function () {\n\t    function MergeAllOperator(concurrent) {\n\t        this.concurrent = concurrent;\n\t    }\n\t    MergeAllOperator.prototype.call = function (observer, source) {\n\t        return source._subscribe(new MergeAllSubscriber(observer, this.concurrent));\n\t    };\n\t    return MergeAllOperator;\n\t}());\n\texports.MergeAllOperator = MergeAllOperator;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar MergeAllSubscriber = (function (_super) {\n\t    __extends(MergeAllSubscriber, _super);\n\t    function MergeAllSubscriber(destination, concurrent) {\n\t        _super.call(this, destination);\n\t        this.concurrent = concurrent;\n\t        this.hasCompleted = false;\n\t        this.buffer = [];\n\t        this.active = 0;\n\t    }\n\t    MergeAllSubscriber.prototype._next = function (observable) {\n\t        if (this.active < this.concurrent) {\n\t            this.active++;\n\t            this.add(subscribeToResult_1.subscribeToResult(this, observable));\n\t        }\n\t        else {\n\t            this.buffer.push(observable);\n\t        }\n\t    };\n\t    MergeAllSubscriber.prototype._complete = function () {\n\t        this.hasCompleted = true;\n\t        if (this.active === 0 && this.buffer.length === 0) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {\n\t        var buffer = this.buffer;\n\t        this.remove(innerSub);\n\t        this.active--;\n\t        if (buffer.length > 0) {\n\t            this._next(buffer.shift());\n\t        }\n\t        else if (this.active === 0 && this.hasCompleted) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    return MergeAllSubscriber;\n\t}(OuterSubscriber_1.OuterSubscriber));\n\texports.MergeAllSubscriber = MergeAllSubscriber;\n\t//# sourceMappingURL=mergeAll.js.map\n\n/***/ },\n\n/***/ 523:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar ConnectableObservable_1 = __webpack_require__(509);\n\t/**\n\t * Returns an Observable that emits the results of invoking a specified selector on items\n\t * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n\t *\n\t * <img src=\"./img/multicast.png\" width=\"100%\">\n\t *\n\t * @param {Function} selector - a function that can use the multicasted source stream\n\t * as many times as needed, without causing multiple subscriptions to the source stream.\n\t * Subscribers to the given source will receive all notifications of the source from the\n\t * time of the subscription forward.\n\t * @return {Observable} an Observable that emits the results of invoking the selector\n\t * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n\t * the underlying stream.\n\t * @method multicast\n\t * @owner Observable\n\t */\n\tfunction multicast(subjectOrSubjectFactory) {\n\t    var subjectFactory;\n\t    if (typeof subjectOrSubjectFactory === 'function') {\n\t        subjectFactory = subjectOrSubjectFactory;\n\t    }\n\t    else {\n\t        subjectFactory = function subjectFactory() {\n\t            return subjectOrSubjectFactory;\n\t        };\n\t    }\n\t    return new ConnectableObservable_1.ConnectableObservable(this, subjectFactory);\n\t}\n\texports.multicast = multicast;\n\t//# sourceMappingURL=multicast.js.map\n\n/***/ },\n\n/***/ 336:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(33);\n\tvar Notification_1 = __webpack_require__(494);\n\t/**\n\t * @see {@link Notification}\n\t *\n\t * @param scheduler\n\t * @param delay\n\t * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n\t * @method observeOn\n\t * @owner Observable\n\t */\n\tfunction observeOn(scheduler, delay) {\n\t    if (delay === void 0) { delay = 0; }\n\t    return this.lift(new ObserveOnOperator(scheduler, delay));\n\t}\n\texports.observeOn = observeOn;\n\tvar ObserveOnOperator = (function () {\n\t    function ObserveOnOperator(scheduler, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        this.scheduler = scheduler;\n\t        this.delay = delay;\n\t    }\n\t    ObserveOnOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n\t    };\n\t    return ObserveOnOperator;\n\t}());\n\texports.ObserveOnOperator = ObserveOnOperator;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar ObserveOnSubscriber = (function (_super) {\n\t    __extends(ObserveOnSubscriber, _super);\n\t    function ObserveOnSubscriber(destination, scheduler, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        _super.call(this, destination);\n\t        this.scheduler = scheduler;\n\t        this.delay = delay;\n\t    }\n\t    ObserveOnSubscriber.dispatch = function (arg) {\n\t        var notification = arg.notification, destination = arg.destination;\n\t        notification.observe(destination);\n\t    };\n\t    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n\t        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n\t    };\n\t    ObserveOnSubscriber.prototype._next = function (value) {\n\t        this.scheduleMessage(Notification_1.Notification.createNext(value));\n\t    };\n\t    ObserveOnSubscriber.prototype._error = function (err) {\n\t        this.scheduleMessage(Notification_1.Notification.createError(err));\n\t    };\n\t    ObserveOnSubscriber.prototype._complete = function () {\n\t        this.scheduleMessage(Notification_1.Notification.createComplete());\n\t    };\n\t    return ObserveOnSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.ObserveOnSubscriber = ObserveOnSubscriber;\n\tvar ObserveOnMessage = (function () {\n\t    function ObserveOnMessage(notification, destination) {\n\t        this.notification = notification;\n\t        this.destination = destination;\n\t    }\n\t    return ObserveOnMessage;\n\t}());\n\texports.ObserveOnMessage = ObserveOnMessage;\n\t//# sourceMappingURL=observeOn.js.map\n\n/***/ },\n\n/***/ 524:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(33);\n\t/**\n\t * Applies an accumulation function over the source Observable, and returns each\n\t * intermediate result, with an optional seed value.\n\t *\n\t * <span class=\"informal\">It's like {@link reduce}, but emits the current\n\t * accumulation whenever the source emits a value.</span>\n\t *\n\t * <img src=\"./img/scan.png\" width=\"100%\">\n\t *\n\t * Combines together all values emitted on the source, using an accumulator\n\t * function that knows how to join a new source value into the accumulation from\n\t * the past. Is similar to {@link reduce}, but emits the intermediate\n\t * accumulations.\n\t *\n\t * Returns an Observable that applies a specified `accumulator` function to each\n\t * item emitted by the source Observable. If a `seed` value is specified, then\n\t * that value will be used as the initial value for the accumulator. If no seed\n\t * value is specified, the first item of the source is used as the seed.\n\t *\n\t * @example <caption>Count the number of click events</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var ones = clicks.mapTo(1);\n\t * var seed = 0;\n\t * var count = ones.scan((acc, one) => acc + one, seed);\n\t * count.subscribe(x => console.log(x));\n\t *\n\t * @see {@link expand}\n\t * @see {@link mergeScan}\n\t * @see {@link reduce}\n\t *\n\t * @param {function(acc: R, value: T): R} accumulator The accumulator function\n\t * called on each source value.\n\t * @param {T|R} [seed] The initial accumulation value.\n\t * @return {Observable<R>} An observable of the accumulated values.\n\t * @method scan\n\t * @owner Observable\n\t */\n\tfunction scan(accumulator, seed) {\n\t    return this.lift(new ScanOperator(accumulator, seed));\n\t}\n\texports.scan = scan;\n\tvar ScanOperator = (function () {\n\t    function ScanOperator(accumulator, seed) {\n\t        this.accumulator = accumulator;\n\t        this.seed = seed;\n\t    }\n\t    ScanOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed));\n\t    };\n\t    return ScanOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar ScanSubscriber = (function (_super) {\n\t    __extends(ScanSubscriber, _super);\n\t    function ScanSubscriber(destination, accumulator, seed) {\n\t        _super.call(this, destination);\n\t        this.accumulator = accumulator;\n\t        this.accumulatorSet = false;\n\t        this.seed = seed;\n\t        this.accumulator = accumulator;\n\t        this.accumulatorSet = typeof seed !== 'undefined';\n\t    }\n\t    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n\t        get: function () {\n\t            return this._seed;\n\t        },\n\t        set: function (value) {\n\t            this.accumulatorSet = true;\n\t            this._seed = value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    ScanSubscriber.prototype._next = function (value) {\n\t        if (!this.accumulatorSet) {\n\t            this.seed = value;\n\t            this.destination.next(value);\n\t        }\n\t        else {\n\t            return this._tryNext(value);\n\t        }\n\t    };\n\t    ScanSubscriber.prototype._tryNext = function (value) {\n\t        var result;\n\t        try {\n\t            result = this.accumulator(this.seed, value);\n\t        }\n\t        catch (err) {\n\t            this.destination.error(err);\n\t        }\n\t        this.seed = result;\n\t        this.destination.next(result);\n\t    };\n\t    return ScanSubscriber;\n\t}(Subscriber_1.Subscriber));\n\t//# sourceMappingURL=scan.js.map\n\n/***/ },\n\n/***/ 525:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar multicast_1 = __webpack_require__(523);\n\tvar Subject_1 = __webpack_require__(32);\n\tfunction shareSubjectFactory() {\n\t    return new Subject_1.Subject();\n\t}\n\t/**\n\t * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n\t * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n\t * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n\t * This is an alias for .publish().refCount().\n\t *\n\t * <img src=\"./img/share.png\" width=\"100%\">\n\t *\n\t * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers\n\t * @method share\n\t * @owner Observable\n\t */\n\tfunction share() {\n\t    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();\n\t}\n\texports.share = share;\n\t;\n\t//# sourceMappingURL=share.js.map\n\n/***/ },\n\n/***/ 526:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(33);\n\t/**\n\t * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n\t * @method toArray\n\t * @owner Observable\n\t */\n\tfunction toArray() {\n\t    return this.lift(new ToArrayOperator());\n\t}\n\texports.toArray = toArray;\n\tvar ToArrayOperator = (function () {\n\t    function ToArrayOperator() {\n\t    }\n\t    ToArrayOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new ToArraySubscriber(subscriber));\n\t    };\n\t    return ToArrayOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar ToArraySubscriber = (function (_super) {\n\t    __extends(ToArraySubscriber, _super);\n\t    function ToArraySubscriber(destination) {\n\t        _super.call(this, destination);\n\t        this.array = [];\n\t    }\n\t    ToArraySubscriber.prototype._next = function (x) {\n\t        this.array.push(x);\n\t    };\n\t    ToArraySubscriber.prototype._complete = function () {\n\t        this.destination.next(this.array);\n\t        this.destination.complete();\n\t    };\n\t    return ToArraySubscriber;\n\t}(Subscriber_1.Subscriber));\n\t//# sourceMappingURL=toArray.js.map\n\n/***/ },\n\n/***/ 337:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar root_1 = __webpack_require__(61);\n\tvar Subscription_1 = __webpack_require__(85);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar FutureAction = (function (_super) {\n\t    __extends(FutureAction, _super);\n\t    function FutureAction(scheduler, work) {\n\t        _super.call(this);\n\t        this.scheduler = scheduler;\n\t        this.work = work;\n\t        this.pending = false;\n\t    }\n\t    FutureAction.prototype.execute = function () {\n\t        if (this.isUnsubscribed) {\n\t            this.error = new Error('executing a cancelled action');\n\t        }\n\t        else {\n\t            try {\n\t                this.work(this.state);\n\t            }\n\t            catch (e) {\n\t                this.unsubscribe();\n\t                this.error = e;\n\t            }\n\t        }\n\t    };\n\t    FutureAction.prototype.schedule = function (state, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        if (this.isUnsubscribed) {\n\t            return this;\n\t        }\n\t        return this._schedule(state, delay);\n\t    };\n\t    FutureAction.prototype._schedule = function (state, delay) {\n\t        var _this = this;\n\t        if (delay === void 0) { delay = 0; }\n\t        // Always replace the current state with the new state.\n\t        this.state = state;\n\t        // Set the pending flag indicating that this action has been scheduled, or\n\t        // has recursively rescheduled itself.\n\t        this.pending = true;\n\t        var id = this.id;\n\t        // If this action has an intervalID and the specified delay matches the\n\t        // delay we used to create the intervalID, don't call `setInterval` again.\n\t        if (id != null && this.delay === delay) {\n\t            return this;\n\t        }\n\t        this.delay = delay;\n\t        // If this action has an intervalID, but was rescheduled with a different\n\t        // `delay` time, cancel the current intervalID and call `setInterval` with\n\t        // the new `delay` time.\n\t        if (id != null) {\n\t            this.id = null;\n\t            root_1.root.clearInterval(id);\n\t        }\n\t        //\n\t        // Important implementation note:\n\t        //\n\t        // By default, FutureAction only executes once. However, Actions have the\n\t        // ability to be rescheduled from within the scheduled callback (mimicking\n\t        // recursion for asynchronous methods). This allows us to implement single\n\t        // and repeated actions with the same code path without adding API surface\n\t        // area, and implement tail-call optimization over asynchronous boundaries.\n\t        //\n\t        // However, JS runtimes make a distinction between intervals scheduled by\n\t        // repeatedly calling `setTimeout` vs. a single `setInterval` call, with\n\t        // the latter providing a better guarantee of precision.\n\t        //\n\t        // In order to accommodate both single and repeatedly rescheduled actions,\n\t        // use `setInterval` here for both cases. By default, the interval will be\n\t        // canceled after its first execution, or if the action schedules itself to\n\t        // run again with a different `delay` time.\n\t        //\n\t        // If the action recursively schedules itself to run again with the same\n\t        // `delay` time, the interval is not canceled, but allowed to loop again.\n\t        // The check of whether the interval should be canceled or not is run every\n\t        // time the interval is executed. The first time an action fails to\n\t        // reschedule itself, the interval is canceled.\n\t        //\n\t        this.id = root_1.root.setInterval(function () {\n\t            _this.pending = false;\n\t            var _a = _this, id = _a.id, scheduler = _a.scheduler;\n\t            scheduler.actions.push(_this);\n\t            scheduler.flush();\n\t            //\n\t            // Terminate this interval if the action didn't reschedule itself.\n\t            // Don't call `this.unsubscribe()` here, because the action could be\n\t            // rescheduled later. For example:\n\t            //\n\t            // ```\n\t            // scheduler.schedule(function doWork(counter) {\n\t            //   /* ... I'm a busy worker bee ... */\n\t            //   var originalAction = this;\n\t            //   /* wait 100ms before rescheduling this action again */\n\t            //   setTimeout(function () {\n\t            //     originalAction.schedule(counter + 1);\n\t            //   }, 100);\n\t            // }, 1000);\n\t            // ```\n\t            if (_this.pending === false && id != null) {\n\t                _this.id = null;\n\t                root_1.root.clearInterval(id);\n\t            }\n\t        }, delay);\n\t        return this;\n\t    };\n\t    FutureAction.prototype._unsubscribe = function () {\n\t        this.pending = false;\n\t        var _a = this, id = _a.id, scheduler = _a.scheduler;\n\t        var actions = scheduler.actions;\n\t        var index = actions.indexOf(this);\n\t        if (id != null) {\n\t            this.id = null;\n\t            root_1.root.clearInterval(id);\n\t        }\n\t        if (index !== -1) {\n\t            actions.splice(index, 1);\n\t        }\n\t        this.work = null;\n\t        this.state = null;\n\t        this.scheduler = null;\n\t    };\n\t    return FutureAction;\n\t}(Subscription_1.Subscription));\n\texports.FutureAction = FutureAction;\n\t//# sourceMappingURL=FutureAction.js.map\n\n/***/ },\n\n/***/ 527:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar FutureAction_1 = __webpack_require__(337);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar QueueAction = (function (_super) {\n\t    __extends(QueueAction, _super);\n\t    function QueueAction() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    QueueAction.prototype._schedule = function (state, delay) {\n\t        if (delay === void 0) { delay = 0; }\n\t        if (delay > 0) {\n\t            return _super.prototype._schedule.call(this, state, delay);\n\t        }\n\t        this.delay = delay;\n\t        this.state = state;\n\t        var scheduler = this.scheduler;\n\t        scheduler.actions.push(this);\n\t        scheduler.flush();\n\t        return this;\n\t    };\n\t    return QueueAction;\n\t}(FutureAction_1.FutureAction));\n\texports.QueueAction = QueueAction;\n\t//# sourceMappingURL=QueueAction.js.map\n\n/***/ },\n\n/***/ 528:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar QueueAction_1 = __webpack_require__(527);\n\tvar FutureAction_1 = __webpack_require__(337);\n\tvar QueueScheduler = (function () {\n\t    function QueueScheduler() {\n\t        this.active = false;\n\t        this.actions = []; // XXX: use `any` to remove type param `T` from `VirtualTimeScheduler`.\n\t        this.scheduledId = null;\n\t    }\n\t    QueueScheduler.prototype.now = function () {\n\t        return Date.now();\n\t    };\n\t    QueueScheduler.prototype.flush = function () {\n\t        if (this.active || this.scheduledId) {\n\t            return;\n\t        }\n\t        this.active = true;\n\t        var actions = this.actions;\n\t        // XXX: use `any` to remove type param `T` from `VirtualTimeScheduler`.\n\t        for (var action = null; action = actions.shift();) {\n\t            action.execute();\n\t            if (action.error) {\n\t                this.active = false;\n\t                throw action.error;\n\t            }\n\t        }\n\t        this.active = false;\n\t    };\n\t    QueueScheduler.prototype.schedule = function (work, delay, state) {\n\t        if (delay === void 0) { delay = 0; }\n\t        return (delay <= 0) ?\n\t            this.scheduleNow(work, state) :\n\t            this.scheduleLater(work, delay, state);\n\t    };\n\t    QueueScheduler.prototype.scheduleNow = function (work, state) {\n\t        return new QueueAction_1.QueueAction(this, work).schedule(state);\n\t    };\n\t    QueueScheduler.prototype.scheduleLater = function (work, delay, state) {\n\t        return new FutureAction_1.FutureAction(this, work).schedule(state, delay);\n\t    };\n\t    return QueueScheduler;\n\t}());\n\texports.QueueScheduler = QueueScheduler;\n\t//# sourceMappingURL=QueueScheduler.js.map\n\n/***/ },\n\n/***/ 338:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar QueueScheduler_1 = __webpack_require__(528);\n\texports.queue = new QueueScheduler_1.QueueScheduler();\n\t//# sourceMappingURL=queue.js.map\n\n/***/ },\n\n/***/ 343:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isScheduler(value) {\n\t    return value && typeof value.schedule === 'function';\n\t}\n\texports.isScheduler = isScheduler;\n\t//# sourceMappingURL=isScheduler.js.map\n\n/***/ },\n\n/***/ 486:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<p>\\n  Angular 2 Seed Advanced is a starter project that implements best practices in\\n  coding, building and testing Angular 2 apps. Additionally it adds various enhancements \\n  and integrations for large global projects.\\n<p>\\n\\n<h2>Features</h2>\\n<ul>\\n  <li>Ready to go, statically typed build system using Gulp for working with TypeScript.</li>\\n  <li>Production and development builds.</li>\\n  <li>Sample unit tests with Jasmine and Karma including code coverage via Istanbul.</li>\\n  <li>End-to-end tests with Protractor.</li>\\n  <li>Development server with live reload.</li>\\n  <li>TypeScript definition management using Typings.</li>\\n  <li>Basic Service Worker, which implements \\\"Cache then network strategy\\\".</li>\\n  <li>Integration with <a href=\\\"https://lodash.com/\\\" target=\\\"blank\\\">lodash</a>.</li>\\n  <li>RxJS powered state management (Redux) via <a href=\\\"https://github.com/ngrx/store\\\" target=\\\"blank\\\">ngrx/store</a>.</li>\\n  <li>i18n with <a href=\\\"https://github.com/ocombe/ng2-translate\\\" target=\\\"blank\\\">ng2-translate</a>.</li>\\n  <li>Native cross platform app development with <a href=\\\"https://www.nativescript.org/\\\" target=\\\"blank\\\">NativeScript</a>.</li>\\n</ul>\\n\"\n\n/***/ },\n\n/***/ 693:\n/***/ function(module, exports) {\n\n\tmodule.exports = \":host{display:block;padding:0 16px}h2{font-size:20px;font-weight:500;letter-spacing:.005em;margin-bottom:0;margin-top:.83em}\"\n\n/***/ },\n\n/***/ 471:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_framework_1 = __webpack_require__(31);\r\n\tvar AboutComponent = (function () {\r\n\t    function AboutComponent() {\r\n\t    }\r\n\t    AboutComponent = __decorate([\r\n\t        core_framework_1.BaseComponent({\r\n\t            selector: 'sd-about',\r\n\t            template: __webpack_require__(486),\r\n\t            styles: [__webpack_require__(693)]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], AboutComponent);\r\n\t    return AboutComponent;\r\n\t}());\r\n\texports.AboutComponent = AboutComponent;\r\n\n\n/***/ },\n\n/***/ 472:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(471));\r\n\n\n/***/ },\n\n/***/ 487:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div platform>\\n  <sd-toolbar></sd-toolbar>\\n  <sd-navbar></sd-navbar>\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 694:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"body,div,html{border:0;margin:0;padding:0}*{box-sizing:border-box}body{font-family:Roboto,Helvetica Neue,sans-serif;font-size:16px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host p{font-weight:400;letter-spacing:.01em;line-height:20px;margin-bottom:1em;margin-top:1em}:host ul{margin:10px 0 0;padding:0 0 0 20px}:host li{font-weight:400;margin-top:4px}:host input{border:1px solid #106cc8;outline:none;padding:8px}:host button,:host input{font-size:14px;height:40px}:host button{background-color:#106cc8;border-style:none;color:hsla(0,0%,100%,.87);cursor:pointer;display:inline-block;padding:8px 18px;text-decoration:none}:host button:hover{background-color:#28739e}:host .desktop lang-switcher{display:none}\"\n\n/***/ },\n\n/***/ 473:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// angular\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar router_deprecated_1 = __webpack_require__(83);\r\n\t// app\r\n\tvar app_framework_1 = __webpack_require__(202);\r\n\tvar analytics_framework_1 = __webpack_require__(131);\r\n\tvar core_framework_1 = __webpack_require__(31);\r\n\tvar i18n_framework_1 = __webpack_require__(99);\r\n\tvar navbar_component_1 = __webpack_require__(325);\r\n\tvar toolbar_component_1 = __webpack_require__(476);\r\n\tvar home_1 = __webpack_require__(475);\r\n\tvar about_1 = __webpack_require__(472);\r\n\tvar AppComponent = (function () {\r\n\t    function AppComponent(analytics) {\r\n\t        this.analytics = analytics;\r\n\t    }\r\n\t    AppComponent = __decorate([\r\n\t        core_framework_1.RouteComponent({\r\n\t            selector: 'app',\r\n\t            viewProviders: [app_framework_1.NameListService],\r\n\t            template: __webpack_require__(487),\r\n\t            styles: [__webpack_require__(694)],\r\n\t            directives: [i18n_framework_1.LangSwitcherComponent, navbar_component_1.NavbarComponent, toolbar_component_1.ToolbarComponent, core_framework_1.PlatformDirective],\r\n\t            changeDetection: core_1.ChangeDetectionStrategy.Default // Everything else uses OnPush\r\n\t        }),\r\n\t        router_deprecated_1.RouteConfig([\r\n\t            {\r\n\t                path: '/',\r\n\t                component: home_1.HomeComponent,\r\n\t                name: 'Home',\r\n\t                useAsDefault: true\r\n\t            },\r\n\t            {\r\n\t                path: '/about',\r\n\t                component: about_1.AboutComponent,\r\n\t                //loader: () => require('es6-promise!./about')('About'),\r\n\t                name: 'About'\r\n\t            }\r\n\t        ]), \r\n\t        __metadata('design:paramtypes', [analytics_framework_1.AnalyticsService])\r\n\t    ], AppComponent);\r\n\t    return AppComponent;\r\n\t}());\r\n\texports.AppComponent = AppComponent;\r\n\n\n/***/ },\n\n/***/ 488:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<h2>\\n  {{ 'LOVE_TECH' | translate }} <smile></smile>\\n</h2>\\n\\n<p>\\n  {{'ABOUT_REWARD' | translate}}\\n</p>\\n<p>\\n  {{'ABOUT_ADD' | translate}}\\n</p>\\n\\n<form (submit)=\\\"addName()\\\">\\n  <input [(ngModel)]=\\\"newName\\\" [placeholder]=\\\"'INPUT_HINT' | translate\\\">\\n  <button type=\\\"submit\\\">{{'ADD_BTN_TEXT' | translate}}</button>\\n</form>\\n\\n<ul>\\n  <li *ngFor=\\\"let name of nameListService.names | async\\\">{{name}}</li>\\n</ul>\\n\"\n\n/***/ },\n\n/***/ 695:\n/***/ function(module, exports) {\n\n\tmodule.exports = \":host{display:block;padding:0 16px}input{width:250px}ul{list-style-type:none;padding:0 0 0 8px}smile{background:url(\\\"/assets/svg/smile.svg\\\");height:48px;width:48px;display:inline-block;-webkit-transform:scale(.6);transform:scale(.6);margin-top:-25px;position:relative;top:16px}\"\n\n/***/ },\n\n/***/ 474:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// libs\r\n\tvar store_1 = __webpack_require__(48);\r\n\t// app\r\n\tvar core_framework_1 = __webpack_require__(31);\r\n\tvar app_framework_1 = __webpack_require__(202);\r\n\tvar HomeComponent = (function () {\r\n\t    function HomeComponent(store, nameListService) {\r\n\t        this.store = store;\r\n\t        this.nameListService = nameListService;\r\n\t        this.newName = '';\r\n\t    }\r\n\t    /*\r\n\t     * @param newname  any text as input.\r\n\t     * @returns return false to prevent default form submit behavior to refresh the page.\r\n\t     */\r\n\t    HomeComponent.prototype.addName = function () {\r\n\t        this.nameListService.add(this.newName);\r\n\t        this.newName = '';\r\n\t        return false;\r\n\t    };\r\n\t    HomeComponent = __decorate([\r\n\t        core_framework_1.FormComponent({\r\n\t            selector: 'sd-home',\r\n\t            template: __webpack_require__(488),\r\n\t            styles: [__webpack_require__(695)]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [store_1.Store, app_framework_1.NameListService])\r\n\t    ], HomeComponent);\r\n\t    return HomeComponent;\r\n\t}());\r\n\texports.HomeComponent = HomeComponent;\r\n\n\n/***/ },\n\n/***/ 475:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(474));\r\n\n\n/***/ },\n\n/***/ 489:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<nav>\\n  <a [routerLink]=\\\"['/Home']\\\">{{'HOME' | translate}}</a>\\n  <a [routerLink]=\\\"['/About']\\\">{{'ABOUT' | translate}}</a>\\n</nav>\\n\"\n\n/***/ },\n\n/***/ 696:\n/***/ function(module, exports) {\n\n\tmodule.exports = \":host{border-color:#e1e1e1;border-style:solid;border-width:0 0 1px;display:block;height:48px;padding:0 16px}nav a{color:#8f8f8f;font-size:14px;font-weight:500;line-height:48px;margin-right:20px;text-decoration:none;vertical-align:middle}nav a.router-link-active{color:#106cc8}\"\n\n/***/ },\n\n/***/ 325:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// libs\r\n\tvar store_1 = __webpack_require__(48);\r\n\tvar core_framework_1 = __webpack_require__(31);\r\n\tvar NavbarComponent = (function () {\r\n\t    function NavbarComponent(store) {\r\n\t        var _this = this;\r\n\t        this.store = store;\r\n\t        // TODO: remove when {N} router supports active states\r\n\t        this.activeLink = {\r\n\t            home: true,\r\n\t            about: false\r\n\t        };\r\n\t        store.select('router').subscribe(function (router) {\r\n\t            if (!router.navigating) {\r\n\t                switch (router.url) {\r\n\t                    case '':\r\n\t                        _this.activeLink.home = true;\r\n\t                        _this.activeLink.about = false;\r\n\t                        break;\r\n\t                    case '/about':\r\n\t                        _this.activeLink.home = false;\r\n\t                        _this.activeLink.about = true;\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t    NavbarComponent = __decorate([\r\n\t        core_framework_1.RouteComponent({\r\n\t            selector: 'sd-navbar',\r\n\t            template: __webpack_require__(489),\r\n\t            styles: [__webpack_require__(696)]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [store_1.Store])\r\n\t    ], NavbarComponent);\r\n\t    return NavbarComponent;\r\n\t}());\r\n\texports.NavbarComponent = NavbarComponent;\r\n\n\n/***/ },\n\n/***/ 490:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<h1>Angular2 Webpack Advance Starter</h1>\\n<lang-switcher></lang-switcher>\\n<more></more>\\n\"\n\n/***/ },\n\n/***/ 697:\n/***/ function(module, exports) {\n\n\tmodule.exports = \":host{background-color:#106cc8;color:hsla(0,0%,100%,.87);display:block;height:48px;padding:0 16px;position:relative}h1{display:inline;font-size:20px;font-weight:400;letter-spacing:.1px;line-height:48px}:host lang-switcher,:host more{position:absolute}:host lang-switcher{top:13px;right:52px}:host more{background:url(\\\"/assets/svg/more.svg\\\");top:12px;right:10px;height:24px;width:24px;cursor:pointer;opacity:.7}:host more:hover{opacity:1}\"\n\n/***/ },\n\n/***/ 476:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// app\r\n\tvar core_framework_1 = __webpack_require__(31);\r\n\tvar i18n_framework_1 = __webpack_require__(99);\r\n\tvar navbar_component_1 = __webpack_require__(325);\r\n\tvar ToolbarComponent = (function () {\r\n\t    function ToolbarComponent(log) {\r\n\t        this.log = log;\r\n\t    }\r\n\t    ToolbarComponent.prototype.openLanguages = function (e) {\r\n\t        this.log.debug('openLanguages');\r\n\t    };\r\n\t    ToolbarComponent = __decorate([\r\n\t        core_framework_1.BaseComponent({\r\n\t            selector: 'sd-toolbar',\r\n\t            template: __webpack_require__(490),\r\n\t            styles: [__webpack_require__(697)],\r\n\t            directives: [i18n_framework_1.LangSwitcherComponent, navbar_component_1.NavbarComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_framework_1.LogService])\r\n\t    ], ToolbarComponent);\r\n\t    return ToolbarComponent;\r\n\t}());\r\n\texports.ToolbarComponent = ToolbarComponent;\r\n\n\n/***/ },\n\n/***/ 131:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t// libs\r\n\tvar angulartics2_1 = __webpack_require__(350);\r\n\tvar angulartics2_segment_1 = __webpack_require__(351);\r\n\t// app\r\n\tvar analytics_service_1 = __webpack_require__(326);\r\n\texports.ANALYTICS_PROVIDERS = [\r\n\t    angulartics2_1.Angulartics2,\r\n\t    angulartics2_segment_1.Angulartics2Segment,\r\n\t    analytics_service_1.AnalyticsService\r\n\t];\r\n\t// services\r\n\t__export(__webpack_require__(326));\r\n\n\n/***/ },\n\n/***/ 326:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// angular\r\n\tvar core_1 = __webpack_require__(1);\r\n\t// libs\r\n\tvar lodash_1 = __webpack_require__(381);\r\n\tvar angulartics2_1 = __webpack_require__(350);\r\n\tvar angulartics2_segment_1 = __webpack_require__(351);\r\n\t/**\r\n\t * Wrapper for Angulartics2\r\n\t */\r\n\tvar AnalyticsService = (function () {\r\n\t    function AnalyticsService(angulartics2, segment) {\r\n\t        // options\r\n\t        // https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#L90-L104\r\n\t        // angulartics2.virtualPageviews(value: boolean);\r\n\t        // angulartics2.excludeRoutes(routes: Array<string>);\r\n\t        // angulartics2.firstPageview(value: boolean);\r\n\t        // angulartics2.withBase(value: string);\r\n\t        this.angulartics2 = angulartics2;\r\n\t        this.segment = segment;\r\n\t        this.devMode(false);\r\n\t    }\r\n\t    /**\r\n\t     * Track actions, events, etc.\r\n\t     **/\r\n\t    AnalyticsService.prototype.track = function (action, properties) {\r\n\t        if (!this.devMode()) {\r\n\t            this.segment.eventTrack(action, properties);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Called automatically by default with Angular 2 Routing\r\n\t     * However, that can be turned off and this could be used manually\r\n\t     **/\r\n\t    AnalyticsService.prototype.pageTrack = function (path, location) {\r\n\t        if (!this.devMode()) {\r\n\t            this.segment.pageTrack(path, location);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Identify authenticated users\r\n\t     **/\r\n\t    AnalyticsService.prototype.identify = function (properties) {\r\n\t        if (!this.devMode()) {\r\n\t            this.segment.setUserProperties(properties);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Control whether analytics are tracked\r\n\t     * true: dev mode on, therefore do not track anything\r\n\t     * false: dev mode off, track everything\r\n\t     **/\r\n\t    AnalyticsService.prototype.devMode = function (enable) {\r\n\t        if (typeof enable !== 'undefined') {\r\n\t            this.angulartics2.developerMode(enable);\r\n\t        }\r\n\t        return this.angulartics2.settings.developerMode;\r\n\t    };\r\n\t    AnalyticsService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [angulartics2_1.Angulartics2, angulartics2_segment_1.Angulartics2Segment])\r\n\t    ], AnalyticsService);\r\n\t    return AnalyticsService;\r\n\t}());\r\n\texports.AnalyticsService = AnalyticsService;\r\n\t/**\r\n\t * Base class\r\n\t * Standardizes tracking actions and categorization\r\n\t */\r\n\tvar Analytics = (function () {\r\n\t    function Analytics(analytics) {\r\n\t        this.analytics = analytics;\r\n\t    }\r\n\t    /**\r\n\t     * Track actions, events, etc.\r\n\t     **/\r\n\t    Analytics.prototype.track = function (action, properties) {\r\n\t        this.analytics.track(action, lodash_1.extend(properties, { category: this.category }));\r\n\t    };\r\n\t    Analytics = __decorate([\r\n\t        __param(0, core_1.Inject(AnalyticsService)), \r\n\t        __metadata('design:paramtypes', [AnalyticsService])\r\n\t    ], Analytics);\r\n\t    return Analytics;\r\n\t}());\r\n\texports.Analytics = Analytics;\r\n\n\n/***/ },\n\n/***/ 202:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t// libs\r\n\tvar store_1 = __webpack_require__(48);\r\n\tvar ngrx_store_router_1 = __webpack_require__(689);\r\n\t// app\r\n\tvar name_list_service_1 = __webpack_require__(328);\r\n\tvar i18n_framework_1 = __webpack_require__(99);\r\n\t;\r\n\texports.APP_PROVIDERS = [\r\n\t    i18n_framework_1.MULTILINGUAL_PROVIDERS,\r\n\t    store_1.provideStore({\r\n\t        router: ngrx_store_router_1.routerReducer,\r\n\t        i18n: i18n_framework_1.multilingualReducer,\r\n\t        names: name_list_service_1.nameListReducer\r\n\t    }),\r\n\t    ngrx_store_router_1.routerMiddleware\r\n\t];\r\n\t// services\r\n\t__export(__webpack_require__(327));\r\n\t__export(__webpack_require__(328));\r\n\n\n/***/ },\n\n/***/ 328:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\t// libs\r\n\tvar store_1 = __webpack_require__(48);\r\n\t// app\r\n\tvar index_1 = __webpack_require__(131);\r\n\tvar index_2 = __webpack_require__(31);\r\n\t// analytics\r\n\tvar CATEGORY = 'NameList';\r\n\t/**\r\n\t * ngrx setup start --\r\n\t */\r\n\texports.NAME_LIST_ACTIONS = {\r\n\t    INIT: \"[\" + CATEGORY + \"] INIT\",\r\n\t    NAME_ADDED: \"[\" + CATEGORY + \"] NAME_ADDED\"\r\n\t};\r\n\texports.nameListReducer = function (state, action) {\r\n\t    if (state === void 0) { state = []; }\r\n\t    switch (action.type) {\r\n\t        case exports.NAME_LIST_ACTIONS.INIT:\r\n\t            return action.payload.slice();\r\n\t        case exports.NAME_LIST_ACTIONS.NAME_ADDED:\r\n\t            return state.concat([action.payload]);\r\n\t        default:\r\n\t            return state;\r\n\t    }\r\n\t};\r\n\t/**\r\n\t * ngrx end --\r\n\t */\r\n\tvar NameListService = (function (_super) {\r\n\t    __extends(NameListService, _super);\r\n\t    function NameListService(analytics, store, http) {\r\n\t        _super.call(this, analytics);\r\n\t        this.analytics = analytics;\r\n\t        this.store = store;\r\n\t        this.http = http;\r\n\t        this.category = CATEGORY;\r\n\t        this.names = store.select('names');\r\n\t        this.init();\r\n\t    }\r\n\t    NameListService.prototype.init = function () {\r\n\t        var _this = this;\r\n\t        this.http.get(\"assets/data.json\")\r\n\t            .subscribe(function (results) {\r\n\t            _this.store.dispatch({ type: exports.NAME_LIST_ACTIONS.INIT, payload: results });\r\n\t        });\r\n\t    };\r\n\t    NameListService.prototype.add = function (name) {\r\n\t        this.track(exports.NAME_LIST_ACTIONS.NAME_ADDED, { label: name });\r\n\t        this.store.dispatch({ type: exports.NAME_LIST_ACTIONS.NAME_ADDED, payload: name });\r\n\t    };\r\n\t    NameListService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [index_1.AnalyticsService, store_1.Store, index_2.HttpService])\r\n\t    ], NameListService);\r\n\t    return NameListService;\r\n\t}(index_1.Analytics));\r\n\texports.NameListService = NameListService;\r\n\n\n/***/ },\n\n/***/ 477:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar utils_1 = __webpack_require__(203);\r\n\tfunction BaseComponent(metadata) {\r\n\t    if (metadata === void 0) { metadata = {}; }\r\n\t    return function (cls) {\r\n\t        return utils_1.DecoratorUtils.annotateComponent(cls, metadata);\r\n\t    };\r\n\t}\r\n\texports.BaseComponent = BaseComponent;\r\n\n\n/***/ },\n\n/***/ 478:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar utils_1 = __webpack_require__(203);\r\n\tvar common_1 = __webpack_require__(27);\r\n\tfunction FormComponent(metadata) {\r\n\t    if (metadata === void 0) { metadata = {}; }\r\n\t    return function (cls) {\r\n\t        return utils_1.DecoratorUtils.annotateComponent(cls, metadata, {\r\n\t            directives: common_1.FORM_DIRECTIVES\r\n\t        });\r\n\t    };\r\n\t}\r\n\texports.FormComponent = FormComponent;\r\n\n\n/***/ },\n\n/***/ 479:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_config_service_1 = __webpack_require__(204);\r\n\tvar utils_1 = __webpack_require__(203);\r\n\tfunction RouteComponent(metadata) {\r\n\t    if (metadata === void 0) { metadata = {}; }\r\n\t    return function (cls) {\r\n\t        return utils_1.DecoratorUtils.annotateComponent(cls, metadata, {\r\n\t            directives: core_config_service_1.CoreConfigService.ROUTER_DIRECTIVES\r\n\t        });\r\n\t    };\r\n\t}\r\n\texports.RouteComponent = RouteComponent;\r\n\n\n/***/ },\n\n/***/ 203:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// angular\r\n\tvar core_1 = __webpack_require__(1);\r\n\t// libs\r\n\tvar ng2_translate_1 = __webpack_require__(228);\r\n\t// app\r\n\tvar index_1 = __webpack_require__(31);\r\n\tvar _reflect = Reflect;\r\n\tvar DecoratorUtils = (function () {\r\n\t    function DecoratorUtils() {\r\n\t    }\r\n\t    DecoratorUtils.getMetadata = function (metadata, customDecoratorMetadata) {\r\n\t        if (metadata === void 0) { metadata = {}; }\r\n\t        /**\r\n\t         * The following allows default component metadata to be configured\r\n\t         * For instance, here we make `TranslatePipe` available for all our components\r\n\t         */\r\n\t        // default directives\r\n\t        var DIRECTIVES = [];\r\n\t        // default pipes\r\n\t        var PIPES = [ng2_translate_1.TranslatePipe];\r\n\t        // custom decorator options\r\n\t        if (customDecoratorMetadata) {\r\n\t            if (customDecoratorMetadata.directives) {\r\n\t                DIRECTIVES.push.apply(DIRECTIVES, customDecoratorMetadata.directives);\r\n\t            }\r\n\t            if (customDecoratorMetadata.pipes) {\r\n\t                PIPES.push.apply(PIPES, customDecoratorMetadata.pipes);\r\n\t            }\r\n\t        }\r\n\t        if (metadata.templateUrl) {\r\n\t            // correct view for platform target\r\n\t            metadata.templateUrl = index_1.ViewBrokerService.TEMPLATE_URL(metadata.templateUrl);\r\n\t        }\r\n\t        if (metadata.styleUrls && index_1.CoreConfigService.IS_MOBILE_NATIVE()) {\r\n\t            // {N} doesn't support all css properties, therefore remove styleUrls to be safe\r\n\t            delete metadata.styleUrls;\r\n\t        }\r\n\t        if (metadata.styles && index_1.CoreConfigService.IS_MOBILE_NATIVE()) {\r\n\t            // {N} doesn't support all css properties, therefore remove style to be safe\r\n\t            delete metadata.styles;\r\n\t        }\r\n\t        metadata.directives = metadata.directives ? metadata.directives.concat(DIRECTIVES) : DIRECTIVES;\r\n\t        metadata.pipes = metadata.pipes ? metadata.pipes.concat(PIPES) : PIPES;\r\n\t        if (metadata.changeDetection) {\r\n\t            metadata.changeDetection = metadata.changeDetection;\r\n\t        }\r\n\t        else {\r\n\t            // default OnPush\r\n\t            metadata.changeDetection = core_1.ChangeDetectionStrategy.OnPush;\r\n\t        }\r\n\t        if (metadata.encapsulation) {\r\n\t            metadata.encapsulation = metadata.encapsulation;\r\n\t        }\r\n\t        // initialize anything \r\n\t        if (metadata.init) {\r\n\t            metadata.init();\r\n\t        }\r\n\t        return metadata;\r\n\t    };\r\n\t    DecoratorUtils.annotateComponent = function (cls, metadata, customDecoratorMetadata) {\r\n\t        if (metadata === void 0) { metadata = {}; }\r\n\t        var annotations = _reflect.getMetadata('annotations', cls) || [];\r\n\t        annotations.push(new core_1.Component(DecoratorUtils.getMetadata(metadata, customDecoratorMetadata)));\r\n\t        _reflect.defineMetadata('annotations', annotations, cls);\r\n\t        return cls;\r\n\t    };\r\n\t    return DecoratorUtils;\r\n\t}());\r\n\texports.DecoratorUtils = DecoratorUtils;\r\n\n\n/***/ },\n\n/***/ 480:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// angular\r\n\tvar core_1 = __webpack_require__(1);\r\n\t// app\r\n\tvar window_service_1 = __webpack_require__(331);\r\n\tvar PlatformDirective = (function () {\r\n\t    function PlatformDirective(el, renderer, win) {\r\n\t        this.el = el;\r\n\t        this.renderer = renderer;\r\n\t        this.win = win;\r\n\t        var platformClass = 'web';\r\n\t        var agent = win.navigator.userAgent.toLowerCase();\r\n\t        if (agent.indexOf('electron') > -1) {\r\n\t            platformClass = 'desktop';\r\n\t        }\r\n\t        else if (agent.indexOf('nativescript') > -1) {\r\n\t            platformClass = 'nativescript';\r\n\t        }\r\n\t        renderer.setElementClass(el.nativeElement, platformClass, true);\r\n\t    }\r\n\t    PlatformDirective = __decorate([\r\n\t        core_1.Directive({\r\n\t            selector: '[platform]'\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer, window_service_1.WindowService])\r\n\t    ], PlatformDirective);\r\n\t    return PlatformDirective;\r\n\t}());\r\n\texports.PlatformDirective = PlatformDirective;\r\n\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t// angular\r\n\tvar http_1 = __webpack_require__(81);\r\n\tvar router_deprecated_1 = __webpack_require__(83);\r\n\t// app\r\n\tvar log_service_1 = __webpack_require__(330);\r\n\tvar http_service_1 = __webpack_require__(329);\r\n\texports.CORE_PROVIDERS = [\r\n\t    http_1.HTTP_PROVIDERS,\r\n\t    router_deprecated_1.ROUTER_PROVIDERS,\r\n\t    log_service_1.LogService,\r\n\t    http_service_1.HttpService\r\n\t];\r\n\t// decorators\r\n\t__export(__webpack_require__(477));\r\n\t__export(__webpack_require__(478));\r\n\t__export(__webpack_require__(479));\r\n\t// interfaces\r\n\t// services\r\n\t__export(__webpack_require__(204));\r\n\t__export(__webpack_require__(481));\r\n\t__export(__webpack_require__(330));\r\n\t__export(__webpack_require__(329));\r\n\t__export(__webpack_require__(482));\r\n\t__export(__webpack_require__(331));\r\n\t// directives\r\n\t__export(__webpack_require__(480));\r\n\n\n/***/ },\n\n/***/ 481:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar ConsoleService = (function () {\r\n\t    function ConsoleService() {\r\n\t    }\r\n\t    ConsoleService.prototype.log = function (m) { return; };\r\n\t    ConsoleService.prototype.debug = function (m) { return; };\r\n\t    ConsoleService.prototype.error = function (m) { return; };\r\n\t    ConsoleService.prototype.warn = function (m) { return; };\r\n\t    ConsoleService.prototype.info = function (m) { return; };\r\n\t    ConsoleService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ConsoleService);\r\n\t    return ConsoleService;\r\n\t}());\r\n\texports.ConsoleService = ConsoleService;\r\n\n\n/***/ },\n\n/***/ 204:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// angular\r\n\tvar router_deprecated_1 = __webpack_require__(83);\r\n\tvar CoreConfigService = (function () {\r\n\t    function CoreConfigService() {\r\n\t    }\r\n\t    // convenient platform checks\r\n\t    CoreConfigService.IS_WEB = function () {\r\n\t        return CoreConfigService.PLATFORM_TARGET === CoreConfigService.PLATFORMS.WEB;\r\n\t    };\r\n\t    CoreConfigService.IS_MOBILE_NATIVE = function () {\r\n\t        return CoreConfigService.PLATFORM_TARGET === CoreConfigService.PLATFORMS.MOBILE_NATIVE;\r\n\t    };\r\n\t    CoreConfigService.IS_MOBILE_HYBRID = function () {\r\n\t        return CoreConfigService.PLATFORM_TARGET === CoreConfigService.PLATFORMS.MOBILE_HYBRID;\r\n\t    };\r\n\t    CoreConfigService.IS_DESKTOP = function () {\r\n\t        return CoreConfigService.PLATFORM_TARGET === CoreConfigService.PLATFORMS.DESKTOP;\r\n\t    };\r\n\t    CoreConfigService.IS_DEBUG_MODE = function () {\r\n\t        for (var key in CoreConfigService.DEBUG) {\r\n\t            if (CoreConfigService.DEBUG[key]) {\r\n\t                // if any level is on, debug mode is on\r\n\t                return true;\r\n\t            }\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    // reset debug defaults\r\n\t    CoreConfigService.RESET = function () {\r\n\t        for (var key in CoreConfigService.DEBUG) {\r\n\t            CoreConfigService.DEBUG[key] = false;\r\n\t        }\r\n\t    };\r\n\t    CoreConfigService.DEBUG = {\r\n\t        LEVEL_1: false,\r\n\t        LEVEL_2: false,\r\n\t        LEVEL_3: false,\r\n\t        LEVEL_4: false // .log + all the above\r\n\t    };\r\n\t    // allows runtime config of platform specific router directives\r\n\t    CoreConfigService.ROUTER_DIRECTIVES = router_deprecated_1.ROUTER_DIRECTIVES;\r\n\t    // supported platforms\r\n\t    CoreConfigService.PLATFORMS = {\r\n\t        WEB: 'web',\r\n\t        MOBILE_NATIVE: 'mobile_native',\r\n\t        MOBILE_HYBRID: 'mobile_hybrid',\r\n\t        DESKTOP: 'desktop'\r\n\t    };\r\n\t    // current target (defaults to web)\r\n\t    CoreConfigService.PLATFORM_TARGET = CoreConfigService.PLATFORMS.WEB;\r\n\t    return CoreConfigService;\r\n\t}());\r\n\texports.CoreConfigService = CoreConfigService;\r\n\n\n/***/ },\n\n/***/ 329:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar http_1 = __webpack_require__(81);\r\n\t__webpack_require__(100);\r\n\t/*\r\n\t* Allows for providing hooks for cross platform dev.\r\n\t* ie., {N} needs to use file-system api to get local files\r\n\t*/\r\n\tvar HttpService = (function () {\r\n\t    function HttpService(http) {\r\n\t        this.http = http;\r\n\t    }\r\n\t    HttpService.prototype.get = function (url) {\r\n\t        return this.http.get(url)\r\n\t            .map(function (response) { return response.json(); });\r\n\t    };\r\n\t    HttpService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], HttpService);\r\n\t    return HttpService;\r\n\t}());\r\n\texports.HttpService = HttpService;\r\n\n\n/***/ },\n\n/***/ 330:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar _1 = __webpack_require__(31);\r\n\tvar LogService = (function () {\r\n\t    function LogService(logger) {\r\n\t        this.logger = logger;\r\n\t    }\r\n\t    // debug (standard output)\r\n\t    LogService.prototype.debug = function (msg) {\r\n\t        if (_1.CoreConfigService.DEBUG.LEVEL_4) {\r\n\t            this.logger.debug(msg);\r\n\t        }\r\n\t    };\r\n\t    // error\r\n\t    LogService.prototype.error = function (err) {\r\n\t        if (_1.CoreConfigService.DEBUG.LEVEL_4 || _1.CoreConfigService.DEBUG.LEVEL_3) {\r\n\t            this.logger.error(err);\r\n\t        }\r\n\t    };\r\n\t    // warn\r\n\t    LogService.prototype.warn = function (err) {\r\n\t        if (_1.CoreConfigService.DEBUG.LEVEL_4 || _1.CoreConfigService.DEBUG.LEVEL_2) {\r\n\t            this.logger.warn(err);\r\n\t        }\r\n\t    };\r\n\t    // info\r\n\t    LogService.prototype.info = function (err) {\r\n\t        if (_1.CoreConfigService.DEBUG.LEVEL_4 || _1.CoreConfigService.DEBUG.LEVEL_1) {\r\n\t            this.logger.info(err);\r\n\t        }\r\n\t    };\r\n\t    LogService = __decorate([\r\n\t        core_1.Injectable(),\r\n\t        __param(0, core_1.Inject(core_1.forwardRef(function () { return _1.ConsoleService; }))), \r\n\t        __metadata('design:paramtypes', [_1.ConsoleService])\r\n\t    ], LogService);\r\n\t    return LogService;\r\n\t}());\r\n\texports.LogService = LogService;\r\n\n\n/***/ },\n\n/***/ 482:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_config_service_1 = __webpack_require__(204);\r\n\tvar ViewBrokerService = (function () {\r\n\t    function ViewBrokerService() {\r\n\t    }\r\n\t    ViewBrokerService.TEMPLATE_URL = function (path) {\r\n\t        if (core_config_service_1.CoreConfigService.IS_MOBILE_NATIVE()) {\r\n\t            var paths = path.split('.');\r\n\t            paths.splice(-1);\r\n\t            return paths.join('.') + \".tns.html\";\r\n\t        }\r\n\t        else {\r\n\t            return path;\r\n\t        }\r\n\t    };\r\n\t    return ViewBrokerService;\r\n\t}());\r\n\texports.ViewBrokerService = ViewBrokerService;\r\n\n\n/***/ },\n\n/***/ 331:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar WindowService = (function () {\r\n\t    function WindowService() {\r\n\t        this.navigator = {};\r\n\t        this.location = {};\r\n\t    }\r\n\t    WindowService.prototype.alert = function (msg) { return; };\r\n\t    WindowService.prototype.confirm = function (msg) { return; };\r\n\t    WindowService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], WindowService);\r\n\t    return WindowService;\r\n\t}());\r\n\texports.WindowService = WindowService;\r\n\n\n/***/ },\n\n/***/ 483:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t// services\r\n\t__export(__webpack_require__(484));\r\n\n\n/***/ },\n\n/***/ 484:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Observable_1 = __webpack_require__(7);\r\n\t__webpack_require__(498);\r\n\tvar ElectronEventService = (function () {\r\n\t    function ElectronEventService() {\r\n\t    }\r\n\t    ElectronEventService.on = function (name) {\r\n\t        return Observable_1.Observable.fromEvent(window, name);\r\n\t    };\r\n\t    return ElectronEventService;\r\n\t}());\r\n\texports.ElectronEventService = ElectronEventService;\r\n\n\n/***/ },\n\n/***/ 491:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form [ngFormModel]=\\\"langForm\\\">\\n  Change Language: <select ngControl=\\\"lang\\\" (change)=\\\"changeLang($event)\\\">\\n    <option *ngFor=\\\"let l of supportedLanguages\\\" [value]=\\\"l.code\\\">{{l.title}}</option>\\n  </select>\\n</form>\\n\"\n\n/***/ },\n\n/***/ 485:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// angular\r\n\tvar common_1 = __webpack_require__(27);\r\n\t// libs\r\n\tvar store_1 = __webpack_require__(48);\r\n\t// app\r\n\tvar core_framework_1 = __webpack_require__(31);\r\n\tvar electron_framework_1 = __webpack_require__(483);\r\n\tvar index_1 = __webpack_require__(99);\r\n\tvar LangSwitcherComponent = (function () {\r\n\t    function LangSwitcherComponent(log, store, multilang) {\r\n\t        var _this = this;\r\n\t        this.log = log;\r\n\t        this.store = store;\r\n\t        this.multilang = multilang;\r\n\t        this.supportedLanguages = index_1.MultilingualService.SUPPORTED_LANGUAGES;\r\n\t        this.langForm = new common_1.ControlGroup({\r\n\t            lang: new common_1.Control(store.getState().i18n.lang)\r\n\t        });\r\n\t        if (core_framework_1.CoreConfigService.IS_DESKTOP()) {\r\n\t            // allow electron menu to talk to component\r\n\t            electron_framework_1.ElectronEventService.on('changeLang').subscribe(function (e) {\r\n\t                _this.changeLang({ target: { value: e.detail.value } });\r\n\t            });\r\n\t        }\r\n\t        console.log(core_framework_1.CoreConfigService.IS_DESKTOP());\r\n\t    }\r\n\t    LangSwitcherComponent.prototype.changeLang = function (e) {\r\n\t        var lang = this.supportedLanguages[0].code; // fallback to default 'en'\r\n\t        if (core_framework_1.CoreConfigService.IS_MOBILE_NATIVE()) {\r\n\t            if (e) {\r\n\t                lang = this.supportedLanguages[e.newIndex].code;\r\n\t            }\r\n\t        }\r\n\t        else if (e && e.target) {\r\n\t            lang = e.target.value;\r\n\t        }\r\n\t        this.log.debug(\"Language change: \" + lang);\r\n\t        this.multilang.changeLang(lang);\r\n\t    };\r\n\t    LangSwitcherComponent = __decorate([\r\n\t        core_framework_1.FormComponent({\r\n\t            selector: 'lang-switcher',\r\n\t            template: __webpack_require__(491)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_framework_1.LogService, store_1.Store, index_1.MultilingualService])\r\n\t    ], LangSwitcherComponent);\r\n\t    return LangSwitcherComponent;\r\n\t}());\r\n\texports.LangSwitcherComponent = LangSwitcherComponent;\r\n\n\n/***/ },\n\n/***/ 99:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t// angular\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar http_1 = __webpack_require__(81);\r\n\t// libs\r\n\tvar ng2_translate_1 = __webpack_require__(228);\r\n\t// app\r\n\tvar multilingual_service_1 = __webpack_require__(332);\r\n\texports.MULTILINGUAL_PROVIDERS = [\r\n\t    core_1.provide(ng2_translate_1.TranslateLoader, {\r\n\t        deps: [http_1.Http],\r\n\t        useFactory: function (http) { return new ng2_translate_1.TranslateStaticLoader(http, 'assets/i18n', '.json'); }\r\n\t    }),\r\n\t    ng2_translate_1.TranslateService,\r\n\t    multilingual_service_1.MultilingualService\r\n\t];\r\n\t// services\r\n\t__export(__webpack_require__(332));\r\n\t// components\r\n\t__export(__webpack_require__(485));\r\n\n\n/***/ },\n\n/***/ 332:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// angular\r\n\tvar core_1 = __webpack_require__(1);\r\n\t// libs\r\n\tvar _ = __webpack_require__(381);\r\n\tvar store_1 = __webpack_require__(48);\r\n\tvar ng2_translate_1 = __webpack_require__(228);\r\n\t// app\r\n\tvar analytics_framework_1 = __webpack_require__(131);\r\n\tvar core_framework_1 = __webpack_require__(31);\r\n\t// analytics\r\n\tvar CATEGORY = 'Multilingual';\r\n\tvar initialState = {\r\n\t    lang: 'en'\r\n\t};\r\n\texports.MULTILINGUAL_ACTIONS = {\r\n\t    LANG_CHANGE: \"[\" + CATEGORY + \"] LANG_CHANGE\"\r\n\t};\r\n\texports.multilingualReducer = function (state, action) {\r\n\t    if (state === void 0) { state = initialState; }\r\n\t    switch (action.type) {\r\n\t        case exports.MULTILINGUAL_ACTIONS.LANG_CHANGE:\r\n\t            return Object.assign({}, state, action.payload);\r\n\t        default:\r\n\t            return state;\r\n\t    }\r\n\t};\r\n\t/**\r\n\t * ngrx end --\r\n\t */\r\n\t// service\r\n\tvar MultilingualService = (function (_super) {\r\n\t    __extends(MultilingualService, _super);\r\n\t    function MultilingualService(analytics, translate, win, store) {\r\n\t        var _this = this;\r\n\t        _super.call(this, analytics);\r\n\t        this.analytics = analytics;\r\n\t        this.translate = translate;\r\n\t        this.win = win;\r\n\t        this.store = store;\r\n\t        this.category = CATEGORY;\r\n\t        // this language will be used as a fallback when a translation isn't found in the current language\r\n\t        translate.setDefaultLang('en');\r\n\t        // use browser/platform lang if available\r\n\t        var userLang = win.navigator.language.split('-')[0];\r\n\t        // subscribe to changes\r\n\t        store.select('i18n').subscribe(function (state) {\r\n\t            // update ng2-translate which will cause translations to occur wherever the TranslatePipe is used in the view\r\n\t            _this.translate.use(state.lang);\r\n\t        });\r\n\t        // init the lang\r\n\t        this.changeLang(userLang);\r\n\t    }\r\n\t    MultilingualService.prototype.changeLang = function (lang) {\r\n\t        if (_.includes(_.map(MultilingualService.SUPPORTED_LANGUAGES, 'code'), lang)) {\r\n\t            // only if lang supported\r\n\t            this.track(exports.MULTILINGUAL_ACTIONS.LANG_CHANGE, { label: lang });\r\n\t            this.store.dispatch({ type: exports.MULTILINGUAL_ACTIONS.LANG_CHANGE, payload: { lang: lang } });\r\n\t        }\r\n\t    };\r\n\t    // default supported languages\r\n\t    // see main.ts bootstrap for example of how to provide different value\r\n\t    MultilingualService.SUPPORTED_LANGUAGES = [\r\n\t        { code: 'en', title: 'English' }\r\n\t    ];\r\n\t    MultilingualService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [analytics_framework_1.AnalyticsService, ng2_translate_1.TranslateService, core_framework_1.WindowService, store_1.Store])\r\n\t    ], MultilingualService);\r\n\t    return MultilingualService;\r\n\t}(analytics_framework_1.Analytics));\r\n\texports.MultilingualService = MultilingualService;\r\n\n\n/***/ },\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// angular\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar platform_browser_dynamic_1 = __webpack_require__(298);\r\n\tvar common_1 = __webpack_require__(27);\r\n\tvar platform_browser_1 = __webpack_require__(98);\r\n\t// config\r\n\tvar core_framework_1 = __webpack_require__(31);\r\n\tcore_framework_1.CoreConfigService.PLATFORM_TARGET = core_framework_1.CoreConfigService.PLATFORMS.WEB;\r\n\tcore_framework_1.CoreConfigService.DEBUG.LEVEL_4 = true;\r\n\t// app\r\n\tvar core_framework_2 = __webpack_require__(31);\r\n\tvar analytics_framework_1 = __webpack_require__(131);\r\n\tvar i18n_framework_1 = __webpack_require__(99);\r\n\tvar app_framework_1 = __webpack_require__(202);\r\n\tvar app_component_1 = __webpack_require__(473);\r\n\t// custom i18n language support\r\n\ti18n_framework_1.MultilingualService.SUPPORTED_LANGUAGES = app_framework_1.AppConfigService.SUPPORTED_LANGUAGES;\r\n\tvar ENV_PROVIDERS = [];\r\n\tif (true) {\r\n\t    core_1.enableProdMode();\r\n\t}\r\n\telse {\r\n\t    ENV_PROVIDERS.push(platform_browser_1.ELEMENT_PROBE_PROVIDERS);\r\n\t}\r\n\tvar BOOTSTRAP_PROVIDERS = [\r\n\t    ENV_PROVIDERS,\r\n\t    core_1.provide(common_1.APP_BASE_HREF, { useValue: (\"/\") }),\r\n\t    core_1.provide(core_framework_2.WindowService, { useValue: window }),\r\n\t    core_1.provide(core_framework_2.ConsoleService, { useValue: console }),\r\n\t    core_framework_2.CORE_PROVIDERS,\r\n\t    analytics_framework_1.ANALYTICS_PROVIDERS,\r\n\t    app_framework_1.APP_PROVIDERS\r\n\t];\r\n\tif (true) {\r\n\t    core_framework_1.CoreConfigService.PLATFORM_TARGET = core_framework_1.CoreConfigService.PLATFORMS.DESKTOP;\r\n\t    // desktop (electron) must use hash\r\n\t    BOOTSTRAP_PROVIDERS.push(core_1.provide(common_1.LocationStrategy, { useClass: common_1.HashLocationStrategy }));\r\n\t}\r\n\t/*\r\n\t * Bootstrap our Angular app with a top level component `App` and inject\r\n\t * our Services and Providers into Angular's dependency injection\r\n\t */\r\n\tfunction main(initialHmrState) {\r\n\t    return platform_browser_dynamic_1.bootstrap(app_component_1.AppComponent, BOOTSTRAP_PROVIDERS)\r\n\t        .catch(function (err) { return console.error(err); });\r\n\t}\r\n\texports.main = main;\r\n\t// In order to start the Service Worker located at \"./worker.js\"\r\n\t// uncomment this line. More about Service Workers here\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\r\n\t//\r\n\t// if ('serviceWorker' in navigator) {\r\n\t//   (<any>navigator).serviceWorker.register('./worker.js').then((registration: any) =>\r\n\t//       console.log('ServiceWorker registration successful with scope: ', registration.scope))\r\n\t//     .catch((err: any) =>\r\n\t//       console.log('ServiceWorker registration failed: ', err));\r\n\t// }\r\n\t/*\r\n\t * Vendors\r\n\t * For vendors for example jQuery, Lodash, angular2-jwt just import them anywhere in your app\r\n\t * You can also import them in vendors to ensure that they are bundled in one file\r\n\t * Also see custom-typings.d.ts as you also need to do `typings install x` where `x` is your module\r\n\t */\r\n\t/*\r\n\t * Hot Module Reload\r\n\t * experimental version by @gdi2290\r\n\t */\r\n\tif (false) {\r\n\t    // activate hot module reload\r\n\t    var ngHmr = require('angular2-hmr');\r\n\t    ngHmr.hotModuleReplacement(main, module);\r\n\t}\r\n\telse {\r\n\t    // bootstrap when document is ready\r\n\t    document.addEventListener('DOMContentLoaded', function () { return main(); });\r\n\t}\r\n\n\n/***/ }\n\n};;\n\n\n/** WEBPACK FOOTER **\n ** main.006a48d44c906302dc18.bundle.js\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('rxjs/Subject');\nvar Dispatcher = (function (_super) {\n    __extends(Dispatcher, _super);\n    function Dispatcher() {\n        _super.apply(this, arguments);\n    }\n    Dispatcher.prototype.dispatch = function (action) {\n        this.next(action);\n    };\n    return Dispatcher;\n}(Subject_1.Subject));\nexports.Dispatcher = Dispatcher;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@ngrx/store/dispatcher.js\n ** module id = 346\n ** module chunks = 2\n **/","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./store'));\n__export(require('./utils'));\n__export(require('./dispatcher'));\n__export(require('./store-backend'));\n__export(require('./ng2'));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@ngrx/store/index.js\n ** module id = 48\n ** module chunks = 2\n **/","\"use strict\";\nvar core_1 = require('@angular/core');\nvar dispatcher_1 = require('./dispatcher');\nvar store_1 = require('./store');\nvar store_backend_1 = require('./store-backend');\nvar utils_1 = require('./utils');\nexports.PRE_MIDDLEWARE = new core_1.OpaqueToken('ngrx/store/pre-middleware');\nexports.POST_MIDDLEWARE = new core_1.OpaqueToken('ngrx/store/post-middleware');\nexports.RESOLVED_PRE_MIDDLEWARE = new core_1.OpaqueToken('ngrx/store/resolved-pre-middleware');\nexports.RESOLVED_POST_MIDDLEWARE = new core_1.OpaqueToken('ngrx/store/resolved-post-middleware');\nexports.REDUCER = new core_1.OpaqueToken('ngrx/store/reducer');\nexports.INITIAL_STATE = new core_1.OpaqueToken('ngrx/store/initial-state');\nvar dispatcherProvider = core_1.provide(dispatcher_1.Dispatcher, {\n    useFactory: function () {\n        return new dispatcher_1.Dispatcher();\n    }\n});\nvar storeProvider = core_1.provide(store_1.Store, {\n    deps: [dispatcher_1.Dispatcher, store_backend_1.StoreBackend, exports.INITIAL_STATE],\n    useFactory: function (dispatcher, backend, initialState) {\n        return new store_1.Store(dispatcher, backend, initialState);\n    }\n});\nvar storeBackendProvider = core_1.provide(store_backend_1.StoreBackend, {\n    deps: [dispatcher_1.Dispatcher, exports.REDUCER, exports.INITIAL_STATE, exports.RESOLVED_PRE_MIDDLEWARE, exports.RESOLVED_POST_MIDDLEWARE],\n    useFactory: function (dispatcher, reducer, initialState, preMiddleware, postMiddleware) {\n        return new store_backend_1.StoreBackend(dispatcher, reducer, initialState, preMiddleware, postMiddleware);\n    }\n});\nvar resolvedPreMiddlewareProvider = core_1.provide(exports.RESOLVED_PRE_MIDDLEWARE, {\n    deps: [exports.PRE_MIDDLEWARE],\n    useFactory: function (middleware) {\n        return utils_1.compose.apply(void 0, middleware);\n    }\n});\nvar resolvedPostMiddlewareProvider = core_1.provide(exports.RESOLVED_POST_MIDDLEWARE, {\n    deps: [exports.POST_MIDDLEWARE],\n    useFactory: function (middleware) {\n        return utils_1.compose.apply(void 0, middleware);\n    }\n});\nfunction provideStore(reducer, initialState) {\n    return [\n        core_1.provide(exports.REDUCER, {\n            useFactory: function () {\n                if (typeof reducer === 'function') {\n                    return reducer;\n                }\n                return utils_1.combineReducers(reducer);\n            }\n        }),\n        core_1.provide(exports.INITIAL_STATE, {\n            deps: [exports.REDUCER],\n            useFactory: function (reducer) {\n                if (initialState === undefined) {\n                    return reducer(undefined, { type: store_backend_1.ActionTypes.INIT });\n                }\n                return initialState;\n            }\n        }),\n        core_1.provide(exports.PRE_MIDDLEWARE, { multi: true, useValue: (function (T) { return T; }) }),\n        core_1.provide(exports.POST_MIDDLEWARE, { multi: true, useValue: (function (T) { return T; }) }),\n        dispatcherProvider,\n        storeProvider,\n        storeBackendProvider,\n        resolvedPreMiddlewareProvider,\n        resolvedPostMiddlewareProvider\n    ];\n}\nexports.provideStore = provideStore;\nfunction usePreMiddleware() {\n    var middleware = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        middleware[_i - 0] = arguments[_i];\n    }\n    return provideMiddlewareForToken(exports.PRE_MIDDLEWARE, middleware);\n}\nexports.usePreMiddleware = usePreMiddleware;\nfunction usePostMiddleware() {\n    var middleware = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        middleware[_i - 0] = arguments[_i];\n    }\n    return provideMiddlewareForToken(exports.POST_MIDDLEWARE, middleware);\n}\nexports.usePostMiddleware = usePostMiddleware;\nfunction createMiddleware(useFactory, deps) {\n    return core_1.provide(new core_1.OpaqueToken('@ngrx/store middleware'), {\n        deps: deps,\n        useFactory: useFactory\n    });\n}\nexports.createMiddleware = createMiddleware;\nfunction provideMiddlewareForToken(token, _middleware) {\n    function isProvider(t) {\n        return t instanceof core_1.Provider;\n    }\n    var provider = core_1.provide(token, {\n        multi: true,\n        deps: [core_1.Injector],\n        useFactory: function (injector) {\n            var middleware = _middleware.map(function (m) {\n                if (isProvider(m)) {\n                    return injector.get(m.token);\n                }\n                return m;\n            });\n            return utils_1.compose.apply(void 0, middleware);\n        }\n    });\n    return _middleware.filter(isProvider).concat([provider]);\n}\nexports.provideMiddlewareForToken = provideMiddlewareForToken;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@ngrx/store/ng2.js\n ** module id = 534\n ** module chunks = 2\n **/","\"use strict\";\nvar queue_1 = require('rxjs/scheduler/queue');\nrequire('rxjs/add/operator/let');\nrequire('rxjs/add/operator/scan');\nrequire('rxjs/add/operator/observeOn');\nexports.ActionTypes = {\n    INIT: '@@ngrx/INIT'\n};\nvar StoreBackend = (function () {\n    function StoreBackend(_dispatcher, _reducer, _initialState, _preMiddleware, _postMiddleware) {\n        if (_preMiddleware === void 0) { _preMiddleware = function (t) { return t; }; }\n        if (_postMiddleware === void 0) { _postMiddleware = function (t) { return t; }; }\n        this._dispatcher = _dispatcher;\n        this._reducer = _reducer;\n        this._initialState = _initialState;\n        this._preMiddleware = _preMiddleware;\n        this._postMiddleware = _postMiddleware;\n    }\n    StoreBackend.prototype._init = function () {\n        this._dispatcher.dispatch({ type: exports.ActionTypes.INIT });\n    };\n    StoreBackend.prototype.connect = function (nextCallbackFn) {\n        var _this = this;\n        this._dispatcher\n            .let(this._preMiddleware)\n            .observeOn(queue_1.queue)\n            .scan(function (state, action) { return _this._reducer(state, action); }, this._initialState)\n            .let(this._postMiddleware)\n            .subscribe(nextCallbackFn);\n        this._init();\n    };\n    StoreBackend.prototype.replaceReducer = function (reducer) {\n        this._reducer = reducer;\n        this._init();\n    };\n    return StoreBackend;\n}());\nexports.StoreBackend = StoreBackend;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@ngrx/store/store-backend.js\n ** module id = 347\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BehaviorSubject_1 = require('rxjs/BehaviorSubject');\nrequire('rxjs/add/operator/map');\nrequire('rxjs/add/operator/distinctUntilChanged');\nvar Store = (function (_super) {\n    __extends(Store, _super);\n    function Store(_dispatcher, _backend, initialState) {\n        var _this = this;\n        _super.call(this, initialState);\n        this._dispatcher = _dispatcher;\n        this._backend = _backend;\n        _backend.connect(function (state) { return _super.prototype.next.call(_this, state); });\n    }\n    Store.prototype.select = function (keyOrSelector) {\n        if (typeof keyOrSelector === 'string' ||\n            typeof keyOrSelector === 'number' ||\n            typeof keyOrSelector === 'symbol') {\n            return this.map(function (state) { return state[keyOrSelector]; }).distinctUntilChanged();\n        }\n        else if (typeof keyOrSelector === 'function') {\n            return this.map(keyOrSelector).distinctUntilChanged();\n        }\n        else {\n            throw new TypeError(\"Store@select Unknown Parameter Type: \"\n                + (\"Expected type of function or valid key type, got \" + typeof keyOrSelector));\n        }\n    };\n    Store.prototype.getState = function () {\n        return this.value;\n    };\n    Store.prototype.dispatch = function (action) {\n        this._dispatcher.dispatch(action);\n    };\n    Store.prototype.next = function (action) {\n        this._dispatcher.next(action);\n    };\n    Store.prototype.error = function (error) {\n        this._dispatcher.error(error);\n    };\n    Store.prototype.replaceReducer = function (reducer) {\n        this._backend.replaceReducer(reducer);\n    };\n    return Store;\n}(BehaviorSubject_1.BehaviorSubject));\nexports.Store = Store;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@ngrx/store/store.js\n ** module id = 348\n ** module chunks = 2\n **/","\"use strict\";\nfunction combineReducers(reducers) {\n    var reducerKeys = Object.keys(reducers);\n    var finalReducers = {};\n    for (var i = 0; i < reducerKeys.length; i++) {\n        var key = reducerKeys[i];\n        if (typeof reducers[key] === 'function') {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    var finalReducerKeys = Object.keys(finalReducers);\n    return function combination(state, action) {\n        if (state === void 0) { state = {}; }\n        var hasChanged = false;\n        var nextState = {};\n        for (var i = 0; i < finalReducerKeys.length; i++) {\n            var key = finalReducerKeys[i];\n            var reducer = finalReducers[key];\n            var previousStateForKey = state[key];\n            var nextStateForKey = reducer(previousStateForKey, action);\n            nextState[key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        return hasChanged ? nextState : state;\n    };\n}\nexports.combineReducers = combineReducers;\nexports.compose = function () {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i - 0] = arguments[_i];\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (funcs.length === 0) {\n            return args[0];\n        }\n        var last = funcs[funcs.length - 1];\n        var rest = funcs.slice(0, -1);\n        return rest.reduceRight(function (composed, f) { return f(composed); }, last.apply(void 0, args));\n    };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@ngrx/store/utils.js\n ** module id = 349\n ** module chunks = 2\n **/","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar angulartics2_1 = require('./src/core/angulartics2');\n__export(require('./src/core/angulartics2'));\n__export(require('./src/core/angulartics2On'));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    providers: [angulartics2_1.Angulartics2]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angulartics2/index.js\n ** module id = 350\n ** module chunks = 2\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar ReplaySubject_1 = require('rxjs/ReplaySubject');\nvar common_1 = require('@angular/common');\nvar Angulartics2 = (function () {\n    function Angulartics2(location) {\n        this.settings = {\n            pageTracking: {\n                autoTrackVirtualPages: true,\n                basePath: '',\n                excludedRoutes: []\n            },\n            eventTracking: {},\n            developerMode: false\n        };\n        this.pageTrack = new ReplaySubject_1.ReplaySubject();\n        this.eventTrack = new ReplaySubject_1.ReplaySubject();\n        this.exceptionTrack = new ReplaySubject_1.ReplaySubject();\n        this.setAlias = new ReplaySubject_1.ReplaySubject();\n        this.setUsername = new ReplaySubject_1.ReplaySubject();\n        this.setUserProperties = new ReplaySubject_1.ReplaySubject();\n        this.setUserPropertiesOnce = new ReplaySubject_1.ReplaySubject();\n        this.setSuperProperties = new ReplaySubject_1.ReplaySubject();\n        this.setSuperPropertiesOnce = new ReplaySubject_1.ReplaySubject();\n        this.userTimings = new ReplaySubject_1.ReplaySubject();\n        this.trackLocation(location);\n    }\n    Angulartics2.prototype.trackLocation = function (location) {\n        var _this = this;\n        location.subscribe(function (value) {\n            if (!_this.settings.developerMode) {\n                var url = value.url;\n                if (_this.settings.pageTracking.autoTrackVirtualPages && !_this.matchesExcludedRoute(url)) {\n                    _this.pageTrack.next({\n                        path: _this.settings.pageTracking.basePath.length ? _this.settings.pageTracking.basePath + url : location.prepareExternalUrl(url),\n                        location: location\n                    });\n                }\n            }\n        });\n    };\n    Angulartics2.prototype.virtualPageviews = function (value) {\n        this.settings.pageTracking.autoTrackVirtualPages = value;\n    };\n    Angulartics2.prototype.excludeRoutes = function (routes) {\n        this.settings.pageTracking.excludedRoutes = routes;\n    };\n    Angulartics2.prototype.firstPageview = function (value) {\n        this.settings.pageTracking.autoTrackFirstPage = value;\n    };\n    Angulartics2.prototype.withBase = function (value) {\n        this.settings.pageTracking.basePath = (value);\n    };\n    Angulartics2.prototype.developerMode = function (value) {\n        this.settings.developerMode = value;\n    };\n    Angulartics2.prototype.matchesExcludedRoute = function (url) {\n        for (var _i = 0, _a = this.settings.pageTracking.excludedRoutes; _i < _a.length; _i++) {\n            var excludedRoute = _a[_i];\n            if ((excludedRoute instanceof RegExp && excludedRoute.test(url)) || url.indexOf(excludedRoute) > -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Angulartics2 = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [common_1.Location])\n    ], Angulartics2);\n    return Angulartics2;\n}());\nexports.Angulartics2 = Angulartics2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angulartics2/src/core/angulartics2.js\n ** module id = 135\n ** module chunks = 2\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar dom_adapter_1 = require('@angular/platform-browser/src/dom/dom_adapter');\nvar angulartics2_1 = require('./angulartics2');\nvar Angulartics2On = (function () {\n    function Angulartics2On(elRef, angulartics2, eventManager) {\n        this.elRef = elRef;\n        this.angulartics2 = angulartics2;\n        this.eventManager = eventManager;\n        this.el = elRef.nativeElement;\n    }\n    Angulartics2On.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.eventManager.addEventListener(this.el, this.angulartics2On, function (event) { return _this.eventTrack(event); });\n    };\n    Angulartics2On.prototype.eventTrack = function (event) {\n        if (this.angularticsIf && !eval(this.angularticsIf)) {\n            return;\n        }\n        var action = this.angularticsEvent || this.inferEventName();\n        var properties = {\n            eventType: event.type\n        };\n        if (this.angularticsCategory) {\n            properties.category = this.angularticsCategory;\n        }\n        if (this.angularticsProperties) {\n            Object.assign(properties, eval(this.angularticsProperties));\n        }\n        this.angulartics2.eventTrack.next({\n            action: action,\n            properties: properties\n        });\n    };\n    Angulartics2On.prototype.isCommand = function () {\n        return ['a:', 'button:', 'button:button', 'button:submit', 'input:button', 'input:submit'].indexOf(dom_adapter_1.getDOM().tagName(this.el).toLowerCase() + ':' + (dom_adapter_1.getDOM().type(this.el) || '')) >= 0;\n    };\n    Angulartics2On.prototype.inferEventName = function () {\n        if (this.isCommand())\n            return dom_adapter_1.getDOM().getText(this.el) || dom_adapter_1.getDOM().getValue(this.el);\n        return dom_adapter_1.getDOM().getProperty(this.el, 'id') || dom_adapter_1.getDOM().getProperty(this.el, 'name') || dom_adapter_1.getDOM().tagName(this.el);\n    };\n    __decorate([\n        core_1.Input('angulartics2On'), \n        __metadata('design:type', String)\n    ], Angulartics2On.prototype, \"angulartics2On\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], Angulartics2On.prototype, \"angularticsEvent\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], Angulartics2On.prototype, \"angularticsCategory\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], Angulartics2On.prototype, \"angularticsIf\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object)\n    ], Angulartics2On.prototype, \"angularticsProperties\", void 0);\n    Angulartics2On = __decorate([\n        core_1.Injectable(),\n        core_1.Directive({\n            selector: '[angulartics2On]'\n        }), \n        __metadata('design:paramtypes', [core_1.ElementRef, angulartics2_1.Angulartics2, platform_browser_1.EventManager])\n    ], Angulartics2On);\n    return Angulartics2On;\n}());\nexports.Angulartics2On = Angulartics2On;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angulartics2/src/core/angulartics2On.js\n ** module id = 535\n ** module chunks = 2\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar angulartics2_1 = require('../core/angulartics2');\nvar Angulartics2Segment = (function () {\n    function Angulartics2Segment(angulartics2) {\n        var _this = this;\n        this.angulartics2 = angulartics2;\n        this.angulartics2.pageTrack.subscribe(function (x) { return _this.pageTrack(x.path, x.location); });\n        this.angulartics2.eventTrack.subscribe(function (x) { return _this.eventTrack(x.action, x.properties); });\n        this.angulartics2.setUserProperties.subscribe(function (x) { return _this.setUserProperties(x); });\n        this.angulartics2.setUserPropertiesOnce.subscribe(function (x) { return _this.setUserProperties(x); });\n        this.angulartics2.setAlias.subscribe(function (x) { return _this.setAlias(x); });\n    }\n    Angulartics2Segment.prototype.pageTrack = function (path, location) {\n        try {\n            analytics.page(path);\n        }\n        catch (e) {\n            if (!(e instanceof ReferenceError)) {\n                throw e;\n            }\n        }\n    };\n    Angulartics2Segment.prototype.eventTrack = function (action, properties) {\n        try {\n            analytics.track(action, properties);\n        }\n        catch (e) {\n            if (!(e instanceof ReferenceError)) {\n                throw e;\n            }\n        }\n    };\n    Angulartics2Segment.prototype.setUserProperties = function (properties) {\n        try {\n            if (properties.userId) {\n                analytics.identify(properties.userId, properties);\n            }\n            else {\n                analytics.identify(properties);\n            }\n        }\n        catch (e) {\n            if (!(e instanceof ReferenceError)) {\n                throw e;\n            }\n        }\n    };\n    Angulartics2Segment.prototype.setAlias = function (alias) {\n        try {\n            analytics.alias(alias);\n        }\n        catch (e) {\n            if (!(e instanceof ReferenceError)) {\n                throw e;\n            }\n        }\n    };\n    Angulartics2Segment = __decorate([\n        core_1.Injectable(), \n        __metadata('design:paramtypes', [angulartics2_1.Angulartics2])\n    ], Angulartics2Segment);\n    return Angulartics2Segment;\n}());\nexports.Angulartics2Segment = Angulartics2Segment;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angulartics2/src/providers/angulartics2-segment.js\n ** module id = 351\n ** module chunks = 2\n **/","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/index.js\n ** module id = 381\n ** module chunks = 2\n **/","import {provide} from '@angular/core';\nimport {Http} from '@angular/http';\nimport {TranslatePipe} from './src/translate.pipe';\nimport {TranslateService, TranslateLoader, TranslateStaticLoader} from './src/translate.service';\n\nexport * from './src/translate.pipe';\nexport * from './src/translate.service';\nexport * from './src/translate.parser';\n\nexport const TRANSLATE_PROVIDERS: any = [\n    provide(TranslateLoader, {\n        useFactory: (http: Http) => new TranslateStaticLoader(http),\n        deps: [Http]\n    }),\n    TranslateService\n];\n\n// for angular-cli\nexport default {\n    pipes: [TranslatePipe],\n    providers: [TranslateService]\n}\n\n\n/** WEBPACK FOOTER **\n ** ng2-translate.ts\n **/","export class Parser {\n    templateMatcher: RegExp = /{{\\s?([^{}\\s]*)\\s?}}/g;\n\n\n    /**\n     * Interpolates a string to replace parameters\n     * \"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }\n     * @param expr\n     * @param params\n     * @returns {string}\n     */\n    public interpolate(expr: string, params?: any): string {\n        if (typeof expr !== 'string' || !params) {\n            return expr;\n        }\n        \n        return expr.replace(this.templateMatcher, (substring: string, b: string) => {\n            var r = this.getValue(params, b);\n            return typeof r !== 'undefined' ? r : substring;\n        });\n    }\n\n    /**\n     * Gets a value from an object by composed key\n     * parser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'\n     * @param target\n     * @param key\n     * @returns {string}\n     */\n    public getValue(target: any, key: string): string {\n        let keys = key.split('.');\n        key = '';\n        do {\n            key += keys.shift();\n            if (target[key] !== undefined && (typeof target[key] === 'object' || !keys.length)) {\n                target = target[key];\n                key = '';\n            } else if (!keys.length) {\n                target = undefined;\n            } else {\n                key += '.';\n            }\n        } while (keys.length);\n        \n        return target;\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** translate.parser.ts\n **/","import {PipeTransform, Pipe, Injectable, EventEmitter, OnDestroy, ChangeDetectorRef} from '@angular/core';\nimport {TranslateService, LangChangeEvent} from './translate.service';\nimport {isPresent, isArray} from \"@angular/core/src/facade/lang\";\n\n@Injectable()\n@Pipe({\n    name: 'translate',\n    pure: false // required to update the value when the promise is resolved\n})\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n    value: string = '';\n    lastKey: string;\n    lastParams: any[];\n    onLangChange: EventEmitter<LangChangeEvent>;\n\n    constructor(private translate: TranslateService, private _ref: ChangeDetectorRef) {\n    }\n\n    /**\n     * @name equals\n     *\n     * @description\n     * Determines if two objects or two values are equivalent.\n     *\n     * Two objects or values are considered equivalent if at least one of the following is true:\n     *\n     * * Both objects or values pass `===` comparison.\n     * * Both objects or values are of the same type and all of their properties are equal by\n     *   comparing them with `equals`.\n     *\n     * @param {*} o1 Object or value to compare.\n     * @param {*} o2 Object or value to compare.\n     * @returns {boolean} True if arguments are equal.\n     */\n    private equals(o1: any, o2: any): boolean {\n        if(o1 === o2) return true;\n        if(o1 === null || o2 === null) return false;\n        if(o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n        var t1 = typeof o1, t2 = typeof o2, length: number, key: any, keySet: any;\n        if(t1 == t2 && t1 == 'object') {\n            if(isArray(o1)) {\n                if(!isArray(o2)) return false;\n                if((length = o1.length) == o2.length) {\n                    for (key = 0; key < length; key++) {\n                        if(!this.equals(o1[key], o2[key])) return false;\n                    }\n                    return true;\n                }\n            } else {\n                if(isArray(o2)) {\n                    return false;\n                }\n                keySet = Object.create(null);\n                for (key in o1) {\n                    if(!this.equals(o1[key], o2[key])) {\n                        return false;\n                    }\n                    keySet[key] = true;\n                }\n                for (key in o2) {\n                    if(!(key in keySet) && typeof o2[key] !== 'undefined') {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateValue(key: string, interpolateParams?: Object): void {\n        this.translate.get(key, interpolateParams).subscribe((res: string) => {\n            this.value = res ? res : key;\n            this._ref.markForCheck();\n        });\n    }\n\n    transform(query: string, ...args: any[]): any {\n        if(!query || query.length === 0) {\n            return query;\n        }\n        // if we ask another time for the same key, return the last value\n        if(this.equals(query, this.lastKey) && this.equals(args, this.lastParams)) {\n            return this.value;\n        }\n\n        var interpolateParams: Object;\n        if(args.length && args[0] !== null) {\n            if(typeof args[0] === 'string' && args[0].length) {\n                // we accept objects written in the template such as {n:1},\n                // which is why we might need to change it to real JSON objects such as {\"n\":1}\n                try {\n                    interpolateParams = JSON.parse(args[0].replace(/(['\"])?([a-zA-Z0-9_]+)(['\"])?:/g, '\"$2\": '));\n                } catch (e) {\n                    throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n                }\n            } else if(typeof args[0] === 'object' && !Array.isArray(args[0])) {\n                interpolateParams = args[0];\n            }\n        }\n\n        // store the query, in case it changes\n        this.lastKey = query;\n\n        // store the params, in case they change\n        this.lastParams = args;\n\n        // set the value\n        this.updateValue(query, interpolateParams);\n\n        // if there is a subscription to onLangChange, clean it\n        this._dispose();\n\n        // subscribe to onLangChange event, in case the language changes\n        this.onLangChange = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n            this.updateValue(query, interpolateParams);\n        });\n\n        return this.value;\n    }\n\n    /**\n     * Clean any existing subscription to onLangChange events\n     * @private\n     */\n    _dispose(): void {\n        if(isPresent(this.onLangChange)) {\n            this.onLangChange.unsubscribe();\n            this.onLangChange = undefined;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this._dispose();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** translate.pipe.ts\n **/","import {Injectable, EventEmitter, Optional} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport {Observable} from 'rxjs/Observable'\nimport {Observer} from \"rxjs/Observer\";\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/merge';\nimport 'rxjs/add/operator/toArray';\n\nimport {Parser} from './translate.parser';\n\nexport interface LangChangeEvent {\n    lang: string;\n    translations: any;\n}\n\nexport abstract class MissingTranslationHandler {\n    /**\n     * A function that handles missing translations.\n     * @param key the missing key\n     * @returns {any} a value or an observable\n     * If it returns a value, then this value is used.\n     * If it return an observable, the value returned by this observable will be used (except if the method was \"instant\").\n     * If it doesn't return then the key will be used as a value\n     */\n    abstract handle(key: string): any;\n}\n\nexport abstract class TranslateLoader {\n    abstract getTranslation(lang: string): Observable<any>;\n}\n\nexport class TranslateStaticLoader implements TranslateLoader {\n    constructor(private http: Http, private prefix: string = 'i18n', private suffix: string = '.json') {}\n\n    /**\n     * Gets the translations from the server\n     * @param lang\n     * @returns {any}\n     */\n    public getTranslation(lang: string): Observable<any> {\n        return this.http.get(`${this.prefix}/${lang}${this.suffix}`)\n            .map((res: Response) => res.json());\n    }\n}\n\n@Injectable()\nexport class TranslateService {\n    /**\n     * The lang currently used\n     */\n    public currentLang: string = this.defaultLang;\n\n    /**\n     * An EventEmitter to listen to lang changes events\n     * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n     * @type {ng.EventEmitter<LangChangeEvent>}\n     */\n    public onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\n\n    private pending: any;\n    private translations: any = {};\n    private defaultLang: string;\n    private langs: Array<string>;\n    private parser: Parser = new Parser();\n\n    /**\n     *\n     * @param http The Angular 2 http provider\n     * @param currentLoader An instance of the loader currently used\n     * @param missingTranslationHandler A handler for missing translations.\n     */\n    constructor(private http: Http, public currentLoader: TranslateLoader, @Optional() private missingTranslationHandler: MissingTranslationHandler) {}\n\n    /**\n     * Sets the default language to use as a fallback\n     * @param lang\n     */\n    public setDefaultLang(lang: string): void {\n        this.defaultLang = lang;\n    }\n\n    /**\n     * Changes the lang currently used\n     * @param lang\n     * @returns {Observable<*>}\n     */\n    public use(lang: string): Observable<any> {\n        var pending: Observable<any>;\n        // check if this language is available\n        if(typeof this.translations[lang] === 'undefined') {\n            // not available, ask for it\n            pending = this.getTranslation(lang);\n        }\n\n        if(typeof pending !== 'undefined') {\n            pending.subscribe((res: any) => {\n                this.changeLang(lang);\n            });\n\n            return pending;\n        } else { // we have this language, return an Observable\n            this.changeLang(lang);\n\n            return Observable.of(this.translations[lang]);\n        }\n    }\n\n    /**\n     * Gets an object of translations for a given language with the current loader\n     * @param lang\n     * @returns {Observable<*>}\n     */\n    public getTranslation(lang: string): Observable<any> {\n        this.pending = this.currentLoader.getTranslation(lang).share();\n        this.pending.subscribe((res: Object) => {\n            this.translations[lang] = res;\n            this.updateLangs();\n        }, (err: any) => {\n            throw err;\n        }, () => {\n            this.pending = undefined;\n        });\n\n        return this.pending;\n    }\n\n    /**\n     * Manually sets an object of translations for a given language\n     * @param lang\n     * @param translations\n     */\n    public setTranslation(lang: string, translations: Object): void {\n        this.translations[lang] = translations;\n        this.updateLangs();\n    }\n\n    /**\n     * Returns an array of currently available langs\n     * @returns {any}\n     */\n    public getLangs(): Array<string> {\n        return this.langs;\n    }\n\n    /**\n     * Update the list of available langs\n     */\n    private updateLangs(): void {\n        this.langs = Object.keys(this.translations);\n    }\n\n    /**\n     * Returns the parsed result of the translations\n     * @param translations\n     * @param key\n     * @param interpolateParams\n     * @returns {any}\n     */\n    private getParsedResult(translations: any, key: any, interpolateParams?: Object): any {\n        var res: string|Observable<string>;\n\n        if(key instanceof Array) {\n            let result: any = {},\n                observables: boolean = false;\n            for (let k of key) {\n                result[k] = this.getParsedResult(translations, k, interpolateParams);\n                if(typeof result[k].subscribe === 'function') {\n                    observables = true;\n                }\n            }\n            if(observables) {\n                var mergedObs: any;\n                for (let k of key) {\n                    let obs = typeof result[k].subscribe === 'function' ? result[k] : Observable.of(result[k]);\n                    if(typeof mergedObs === 'undefined') {\n                        mergedObs = obs;\n                    } else {\n                        mergedObs = mergedObs.merge(obs);\n                    }\n                }\n                return mergedObs.toArray().map((arr: Array<string>) => {\n                    var obj: any = {};\n                    arr.forEach((value: string, index: number) => {\n                        obj[key[index]] = value;\n                    });\n                    return obj;\n                });\n            }\n            return result;\n        }\n\n        if(translations) {\n            res = this.parser.interpolate(this.parser.getValue(translations, key), interpolateParams);\n        }\n\n        if(typeof res === 'undefined' && this.defaultLang && this.defaultLang !== this.currentLang) {\n            res = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], key), interpolateParams);\n        }\n\n        if(!res && this.missingTranslationHandler) {\n            res = this.missingTranslationHandler.handle(key);\n        }\n\n        return res || key;\n    }\n\n    /**\n     * Gets the translated value of a key (or an array of keys)\n     * @param key\n     * @param interpolateParams\n     * @returns {any} the translated key, or an object of translated keys\n     */\n    public get(key: string|Array<string>, interpolateParams?: Object): Observable<string|any> {\n        if(!key) {\n            throw new Error('Parameter \"key\" required');\n        }\n        // check if we are loading a new translation to use\n        if(this.pending) {\n            return Observable.create((observer: Observer<string>) => {\n                var onComplete = (res: string) => {\n                    observer.next(res);\n                    observer.complete();\n                };\n                this.pending.subscribe((res: any) => {\n                    var res = this.getParsedResult(res, key, interpolateParams);\n                    if(typeof res.subscribe === 'function') {\n                        res.subscribe(onComplete);\n                    } else {\n                        onComplete(res);\n                    }\n                });\n            });\n        } else {\n            var res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n            if(typeof res.subscribe === 'function') {\n                return res;\n            } else {\n                return Observable.of(res);\n            }\n        }\n    }\n\n    /**\n     * Returns a translation instantly from the internal state of loaded translation.\n     * All rules regarding the current language, the preferred language of even fallback languages will be used except any promise handling.\n     * @param key\n     * @param interpolateParams\n     * @returns {string}\n     */\n    public instant(key: string|Array<string>, interpolateParams?: Object): string|any {\n        if(!key) {\n            throw new Error('Parameter \"key\" required');\n        }\n\n        var res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n        if(typeof res.subscribe !== 'undefined') {\n            if(key instanceof Array) {\n                var obj: any = {};\n                key.forEach((value: string, index: number) => {\n                    obj[key[index]] = key[index];\n                });\n                return obj;\n            }\n            return key;\n        } else {\n            return res;\n        }\n    }\n\n    /**\n     * Sets the translated value of a key\n     * @param key\n     * @param value\n     * @param lang\n     */\n    public set(key: string, value: string, lang: string = this.currentLang): void {\n        this.translations[lang][key] = value;\n        this.updateLangs();\n    }\n\n    /**\n     * Changes the current lang\n     * @param lang\n     */\n    private changeLang(lang: string): void {\n        this.currentLang = lang;\n        this.onLangChange.emit({lang: lang, translations: this.translations[lang]});\n    }\n\n    /**\n     * Allows to reload the lang file from the file\n     * @param lang\n     * @returns {Observable<any>}\n     */\n    public reloadLang(lang: string): Observable<any> {\n        this.resetLang(lang);\n        return this.getTranslation(lang);\n    }\n\n    /**\n     * Deletes inner translation\n     * @param lang\n     */\n    public resetLang(lang: string): void {\n        this.translations[lang] = undefined;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** translate.service.ts\n **/","\"use strict\";\nvar store_1 = require('@ngrx/store');\nvar subscriber_1 = require('./subscriber');\nvar middleware_1 = require('./middleware');\nvar routerMiddleware = [\n    store_1.usePostMiddleware(middleware_1.default),\n    subscriber_1.default\n];\nexports.routerMiddleware = routerMiddleware;\nvar subscriber_2 = require('./subscriber');\nexports.RouterSubscriber = subscriber_2.RouterSubscriber;\nvar reducer_1 = require('./reducer');\nexports.routerReducer = reducer_1.routerReducer;\nexports.RouterActions = reducer_1.RouterActions;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ngrx-store-router/index.js\n ** module id = 689\n ** module chunks = 2\n **/","\"use strict\";\nrequire('rxjs/add/operator/do');\nvar store_1 = require('@ngrx/store');\nvar subscriber_1 = require('./subscriber');\nvar router_deprecated_1 = require('@angular/router-deprecated');\nvar common_1 = require('@angular/common');\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = store_1.createMiddleware(function (router, location, rs) {\n    return function (state$) { return state$.do(function (s) {\n        if (s.router.init && (s.router.navigating || s.router.url !== location.path())) {\n            router.navigateByUrl(s.router.url);\n        }\n    }); };\n}, [router_deprecated_1.Router, common_1.Location, subscriber_1.RouterSubscriber]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ngrx-store-router/middleware.js\n ** module id = 690\n ** module chunks = 2\n **/","\"use strict\";\nvar initialState = {\n    init: false,\n    url: \"\",\n    navigating: false\n};\nexports.RouterActions = {\n    init: '[ROUTER] INITIALIZED',\n    navigated: '[ROUTER] NAVIGATED',\n    navigating: '[ROUTER] NAVIGATING'\n};\nexports.routerReducer = function (state, action) {\n    if (state === void 0) { state = initialState; }\n    switch (action.type) {\n        case exports.RouterActions.init:\n            return Object.assign({}, state, { url: action.payload.url, init: true });\n        case exports.RouterActions.navigating:\n            return Object.assign({}, state, { url: action.payload.url, navigating: true });\n        case exports.RouterActions.navigated:\n            return Object.assign({}, state, { url: action.payload.url, navigating: false });\n        default:\n            return state;\n    }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ngrx-store-router/reducer.js\n ** module id = 384\n ** module chunks = 2\n **/","\"use strict\";\nrequire('rxjs/add/operator/distinctUntilChanged');\nrequire('rxjs/add/operator/map');\nrequire('rxjs/add/operator/filter');\nvar core_1 = require('@angular/core');\nvar router_deprecated_1 = require('@angular/router-deprecated');\nvar common_1 = require('@angular/common');\nvar store_1 = require('@ngrx/store');\nvar reducer_1 = require('./reducer');\nexports.RouterSubscriber = new core_1.OpaqueToken('RouterSubscriber');\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = core_1.provide(exports.RouterSubscriber, {\n    deps: [core_1.Injector, router_deprecated_1.Router, common_1.Location],\n    useFactory: function (injector, router, location) {\n        var getStore = function () { return injector.get(store_1.Store); };\n        router['_subject']\n            .distinctUntilChanged()\n            .map(function () { return location.path(); })\n            .filter(function (url) {\n            var store = getStore();\n            var init = store.getState().router.init;\n            if (!init) {\n                store.dispatch({\n                    type: reducer_1.RouterActions.init,\n                    payload: { url: url }\n                });\n            }\n            return init;\n        })\n            .filter(function (url) {\n            var router = getStore().getState().router;\n            return router.navigating || url !== router.url;\n        })\n            .map(function (url) {\n            return {\n                type: reducer_1.RouterActions.navigated,\n                payload: { url: url }\n            };\n        })\n            .subscribe(function (action) {\n            getStore().dispatch(action);\n        });\n    }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ngrx-store-router/subscriber.js\n ** module id = 230\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar throwError_1 = require('./util/throwError');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasErrored) {\n            throwError_1.throwError(this.errorValue);\n        }\n        else if (this.isUnsubscribed) {\n            throwError_1.throwError(new ObjectUnsubscribedError_1.ObjectUnsubscribedError());\n        }\n        else {\n            return this._value;\n        }\n    };\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.isUnsubscribed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype._next = function (value) {\n        _super.prototype._next.call(this, this._value = value);\n    };\n    BehaviorSubject.prototype._error = function (err) {\n        this.hasErrored = true;\n        _super.prototype._error.call(this, this.errorValue = err);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/BehaviorSubject.js\n ** module id = 492\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, exception) {\n        this.kind = kind;\n        this.value = value;\n        this.exception = exception;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.exception);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.exception);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.exception);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return this.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` exception.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return this.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Notification.js\n ** module id = 494\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar queue_1 = require('./scheduler/queue');\nvar observeOn_1 = require('./operator/observeOn');\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.events = [];\n        this.scheduler = scheduler;\n        this.bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype._next = function (value) {\n        var now = this._getNow();\n        this.events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents(now);\n        _super.prototype._next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var events = this._trimBufferThenGetEvents(this._getNow());\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var index = -1;\n        var len = events.length;\n        while (++index < len && !subscriber.isUnsubscribed) {\n            subscriber.next(events[index].value);\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function (now) {\n        var bufferSize = this.bufferSize;\n        var _windowTime = this._windowTime;\n        var events = this.events;\n        var eventsCount = events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount += 1;\n        }\n        if (eventsCount > bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - bufferSize);\n        }\n        if (spliceCount > 0) {\n            events.splice(0, spliceCount);\n        }\n        return events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/ReplaySubject.js\n ** module id = 496\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEvent_1 = require('../../observable/fromEvent');\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/fromEvent.js\n ** module id = 498\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/of.js\n ** module id = 499\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinctUntilChanged_1 = require('../../operator/distinctUntilChanged');\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/distinctUntilChanged.js\n ** module id = 334\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar do_1 = require('../../operator/do');\nObservable_1.Observable.prototype.do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/do.js\n ** module id = 500\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/filter.js\n ** module id = 501\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar let_1 = require('../../operator/let');\nObservable_1.Observable.prototype.let = let_1.letProto;\nObservable_1.Observable.prototype.letBind = let_1.letProto;\n//# sourceMappingURL=let.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/let.js\n ** module id = 502\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../operator/merge');\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/merge.js\n ** module id = 503\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar observeOn_1 = require('../../operator/observeOn');\nObservable_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n//# sourceMappingURL=observeOn.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/observeOn.js\n ** module id = 505\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar scan_1 = require('../../operator/scan');\nObservable_1.Observable.prototype.scan = scan_1.scan;\n//# sourceMappingURL=scan.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/scan.js\n ** module id = 506\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar share_1 = require('../../operator/share');\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/share.js\n ** module id = 507\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar toArray_1 = require('../../operator/toArray');\nObservable_1.Observable.prototype.toArray = toArray_1.toArray;\n//# sourceMappingURL=toArray.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/toArray.js\n ** module id = 508\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` Scheduler, which means the `next`\n     * notifications are sent synchronously, although with a different Scheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.isUnsubscribed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.isUnsubscribed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/ArrayObservable.js\n ** module id = 335\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this.subject;\n        if (subject && !subject.isUnsubscribed) {\n            return subject;\n        }\n        return (this.subject = this.subjectFactory());\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var source = this.source;\n        var subscription = this.subscription;\n        if (subscription && !subscription.isUnsubscribed) {\n            return subscription;\n        }\n        subscription = source.subscribe(this.getSubject());\n        subscription.add(new ConnectableSubscription(this));\n        return (this.subscription = subscription);\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return new RefCountObservable(this);\n    };\n    /**\n     * This method is opened for `ConnectableSubscription`.\n     * Not to call from others.\n     */\n    ConnectableObservable.prototype._closeSubscription = function () {\n        this.subject = null;\n        this.subscription = null;\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ConnectableSubscription = (function (_super) {\n    __extends(ConnectableSubscription, _super);\n    function ConnectableSubscription(connectable) {\n        _super.call(this);\n        this.connectable = connectable;\n    }\n    ConnectableSubscription.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        connectable._closeSubscription();\n        this.connectable = null;\n    };\n    return ConnectableSubscription;\n}(Subscription_1.Subscription));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RefCountObservable = (function (_super) {\n    __extends(RefCountObservable, _super);\n    function RefCountObservable(connectable, refCount) {\n        if (refCount === void 0) { refCount = 0; }\n        _super.call(this);\n        this.connectable = connectable;\n        this.refCount = refCount;\n    }\n    RefCountObservable.prototype._subscribe = function (subscriber) {\n        var connectable = this.connectable;\n        var refCountSubscriber = new RefCountSubscriber(subscriber, this);\n        var subscription = connectable.subscribe(refCountSubscriber);\n        if (!subscription.isUnsubscribed && ++this.refCount === 1) {\n            refCountSubscriber.connection = this.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountObservable;\n}(Observable_1.Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, refCountObservable) {\n        _super.call(this, null);\n        this.destination = destination;\n        this.refCountObservable = refCountObservable;\n        this.connection = refCountObservable.connection;\n        destination.add(this);\n    }\n    RefCountSubscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    RefCountSubscriber.prototype._error = function (err) {\n        this._resetConnectable();\n        this.destination.error(err);\n    };\n    RefCountSubscriber.prototype._complete = function () {\n        this._resetConnectable();\n        this.destination.complete();\n    };\n    RefCountSubscriber.prototype._resetConnectable = function () {\n        var observable = this.refCountObservable;\n        var obsConnection = observable.connection;\n        var subConnection = this.connection;\n        if (subConnection && subConnection === obsConnection) {\n            observable.refCount = 0;\n            obsConnection.unsubscribe();\n            observable.connection = null;\n            this.unsubscribe();\n        }\n    };\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var observable = this.refCountObservable;\n        if (observable.refCount === 0) {\n            return;\n        }\n        if (--observable.refCount === 0) {\n            var obsConnection = observable.connection;\n            var subConnection = this.connection;\n            if (subConnection && subConnection === obsConnection) {\n                obsConnection.unsubscribe();\n                observable.connection = null;\n            }\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/ConnectableObservable.js\n ** module id = 509\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/EmptyObservable.js\n ** module id = 510\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar Subscription_1 = require('../Subscription');\nfunction isNodeStyleEventEmmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && sourceObj.toString() === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && sourceObj.toString() === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n    }\n    /**\n     * @param sourceObj\n     * @param eventName\n     * @param selector\n     * @return {FromEventObservable}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (sourceObj, eventName, selector) {\n        return new FromEventObservable(sourceObj, eventName, selector);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            sourceObj.addEventListener(eventName, handler);\n            unsubscribe = function () { return sourceObj.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return sourceObj.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmmitter(sourceObj)) {\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return sourceObj.removeListener(eventName, handler); };\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/FromEventObservable.js\n ** module id = 511\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.isUnsubscribed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.isUnsubscribed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/ScalarObservable.js\n ** module id = 512\n ** module chunks = 2\n **/","\"use strict\";\nvar FromEventObservable_1 = require('./FromEventObservable');\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/fromEvent.js\n ** module id = 513\n ** module chunks = 2\n **/","\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/of.js\n ** module id = 514\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/distinctUntilChanged.js\n ** module id = 515\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/do.js\n ** module id = 516\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctKey}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n        this.predicate = predicate;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/filter.js\n ** module id = 517\n ** module chunks = 2\n **/","\"use strict\";\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n//# sourceMappingURL=let.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/let.js\n ** module id = 518\n ** module chunks = 2\n **/","\"use strict\";\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    observables.unshift(this);\n    return mergeStatic.apply(this, observables);\n}\nexports.merge = merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} input1 An input Observable to merge with others.\n * @param {Observable} input2 An input Observable to merge with others.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n}\nexports.mergeStatic = mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/merge.js\n ** module id = 520\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return this.lift(new MergeAllOperator(concurrent));\n}\nexports.mergeAll = mergeAll;\nvar MergeAllOperator = (function () {\n    function MergeAllOperator(concurrent) {\n        this.concurrent = concurrent;\n    }\n    MergeAllOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeAllSubscriber(observer, this.concurrent));\n    };\n    return MergeAllOperator;\n}());\nexports.MergeAllOperator = MergeAllOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeAllSubscriber = (function (_super) {\n    __extends(MergeAllSubscriber, _super);\n    function MergeAllSubscriber(destination, concurrent) {\n        _super.call(this, destination);\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n    }\n    MergeAllSubscriber.prototype._next = function (observable) {\n        if (this.active < this.concurrent) {\n            this.active++;\n            this.add(subscribeToResult_1.subscribeToResult(this, observable));\n        }\n        else {\n            this.buffer.push(observable);\n        }\n    };\n    MergeAllSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeAllSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeAllSubscriber = MergeAllSubscriber;\n//# sourceMappingURL=mergeAll.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/mergeAll.js\n ** module id = 521\n ** module chunks = 2\n **/","\"use strict\";\nvar ConnectableObservable_1 = require('../observable/ConnectableObservable');\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function} selector - a function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory) {\n    var subjectFactory;\n    if (typeof subjectOrSubjectFactory === 'function') {\n        subjectFactory = subjectOrSubjectFactory;\n    }\n    else {\n        subjectFactory = function subjectFactory() {\n            return subjectOrSubjectFactory;\n        };\n    }\n    return new ConnectableObservable_1.ConnectableObservable(this, subjectFactory);\n}\nexports.multicast = multicast;\n//# sourceMappingURL=multicast.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/multicast.js\n ** module id = 523\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * @see {@link Notification}\n *\n * @param scheduler\n * @param delay\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return this.lift(new ObserveOnOperator(scheduler, delay));\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/observeOn.js\n ** module id = 336\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies an accumulation function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T): R} accumulator The accumulator function\n * called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    return this.lift(new ScanOperator(accumulator, seed));\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, seed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.accumulatorSet = false;\n        this.seed = seed;\n        this.accumulator = accumulator;\n        this.accumulatorSet = typeof seed !== 'undefined';\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.accumulatorSet = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.accumulatorSet) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var result;\n        try {\n            result = this.accumulator(this.seed, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/scan.js\n ** module id = 524\n ** module chunks = 2\n **/","\"use strict\";\nvar multicast_1 = require('./multicast');\nvar Subject_1 = require('../Subject');\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/share.js\n ** module id = 525\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return this.lift(new ToArrayOperator());\n}\nexports.toArray = toArray;\nvar ToArrayOperator = (function () {\n    function ToArrayOperator() {\n    }\n    ToArrayOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ToArraySubscriber(subscriber));\n    };\n    return ToArrayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ToArraySubscriber = (function (_super) {\n    __extends(ToArraySubscriber, _super);\n    function ToArraySubscriber(destination) {\n        _super.call(this, destination);\n        this.array = [];\n    }\n    ToArraySubscriber.prototype._next = function (x) {\n        this.array.push(x);\n    };\n    ToArraySubscriber.prototype._complete = function () {\n        this.destination.next(this.array);\n        this.destination.complete();\n    };\n    return ToArraySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=toArray.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/toArray.js\n ** module id = 526\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Subscription_1 = require('../Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FutureAction = (function (_super) {\n    __extends(FutureAction, _super);\n    function FutureAction(scheduler, work) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    FutureAction.prototype.execute = function () {\n        if (this.isUnsubscribed) {\n            this.error = new Error('executing a cancelled action');\n        }\n        else {\n            try {\n                this.work(this.state);\n            }\n            catch (e) {\n                this.unsubscribe();\n                this.error = e;\n            }\n        }\n    };\n    FutureAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.isUnsubscribed) {\n            return this;\n        }\n        return this._schedule(state, delay);\n    };\n    FutureAction.prototype._schedule = function (state, delay) {\n        var _this = this;\n        if (delay === void 0) { delay = 0; }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        // If this action has an intervalID and the specified delay matches the\n        // delay we used to create the intervalID, don't call `setInterval` again.\n        if (id != null && this.delay === delay) {\n            return this;\n        }\n        this.delay = delay;\n        // If this action has an intervalID, but was rescheduled with a different\n        // `delay` time, cancel the current intervalID and call `setInterval` with\n        // the new `delay` time.\n        if (id != null) {\n            this.id = null;\n            root_1.root.clearInterval(id);\n        }\n        //\n        // Important implementation note:\n        //\n        // By default, FutureAction only executes once. However, Actions have the\n        // ability to be rescheduled from within the scheduled callback (mimicking\n        // recursion for asynchronous methods). This allows us to implement single\n        // and repeated actions with the same code path without adding API surface\n        // area, and implement tail-call optimization over asynchronous boundaries.\n        //\n        // However, JS runtimes make a distinction between intervals scheduled by\n        // repeatedly calling `setTimeout` vs. a single `setInterval` call, with\n        // the latter providing a better guarantee of precision.\n        //\n        // In order to accommodate both single and repeatedly rescheduled actions,\n        // use `setInterval` here for both cases. By default, the interval will be\n        // canceled after its first execution, or if the action schedules itself to\n        // run again with a different `delay` time.\n        //\n        // If the action recursively schedules itself to run again with the same\n        // `delay` time, the interval is not canceled, but allowed to loop again.\n        // The check of whether the interval should be canceled or not is run every\n        // time the interval is executed. The first time an action fails to\n        // reschedule itself, the interval is canceled.\n        //\n        this.id = root_1.root.setInterval(function () {\n            _this.pending = false;\n            var _a = _this, id = _a.id, scheduler = _a.scheduler;\n            scheduler.actions.push(_this);\n            scheduler.flush();\n            //\n            // Terminate this interval if the action didn't reschedule itself.\n            // Don't call `this.unsubscribe()` here, because the action could be\n            // rescheduled later. For example:\n            //\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling this action again */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            if (_this.pending === false && id != null) {\n                _this.id = null;\n                root_1.root.clearInterval(id);\n            }\n        }, delay);\n        return this;\n    };\n    FutureAction.prototype._unsubscribe = function () {\n        this.pending = false;\n        var _a = this, id = _a.id, scheduler = _a.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        if (id != null) {\n            this.id = null;\n            root_1.root.clearInterval(id);\n        }\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        this.work = null;\n        this.state = null;\n        this.scheduler = null;\n    };\n    return FutureAction;\n}(Subscription_1.Subscription));\nexports.FutureAction = FutureAction;\n//# sourceMappingURL=FutureAction.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/scheduler/FutureAction.js\n ** module id = 337\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar FutureAction_1 = require('./FutureAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction() {\n        _super.apply(this, arguments);\n    }\n    QueueAction.prototype._schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype._schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        var scheduler = this.scheduler;\n        scheduler.actions.push(this);\n        scheduler.flush();\n        return this;\n    };\n    return QueueAction;\n}(FutureAction_1.FutureAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/scheduler/QueueAction.js\n ** module id = 527\n ** module chunks = 2\n **/","\"use strict\";\nvar QueueAction_1 = require('./QueueAction');\nvar FutureAction_1 = require('./FutureAction');\nvar QueueScheduler = (function () {\n    function QueueScheduler() {\n        this.active = false;\n        this.actions = []; // XXX: use `any` to remove type param `T` from `VirtualTimeScheduler`.\n        this.scheduledId = null;\n    }\n    QueueScheduler.prototype.now = function () {\n        return Date.now();\n    };\n    QueueScheduler.prototype.flush = function () {\n        if (this.active || this.scheduledId) {\n            return;\n        }\n        this.active = true;\n        var actions = this.actions;\n        // XXX: use `any` to remove type param `T` from `VirtualTimeScheduler`.\n        for (var action = null; action = actions.shift();) {\n            action.execute();\n            if (action.error) {\n                this.active = false;\n                throw action.error;\n            }\n        }\n        this.active = false;\n    };\n    QueueScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return (delay <= 0) ?\n            this.scheduleNow(work, state) :\n            this.scheduleLater(work, delay, state);\n    };\n    QueueScheduler.prototype.scheduleNow = function (work, state) {\n        return new QueueAction_1.QueueAction(this, work).schedule(state);\n    };\n    QueueScheduler.prototype.scheduleLater = function (work, delay, state) {\n        return new FutureAction_1.FutureAction(this, work).schedule(state, delay);\n    };\n    return QueueScheduler;\n}());\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/scheduler/QueueScheduler.js\n ** module id = 528\n ** module chunks = 2\n **/","\"use strict\";\nvar QueueScheduler_1 = require('./QueueScheduler');\nexports.queue = new QueueScheduler_1.QueueScheduler();\n//# sourceMappingURL=queue.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/scheduler/queue.js\n ** module id = 338\n ** module chunks = 2\n **/","\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/isScheduler.js\n ** module id = 343\n ** module chunks = 2\n **/","module.exports = \"<p>\\n  Angular 2 Seed Advanced is a starter project that implements best practices in\\n  coding, building and testing Angular 2 apps. Additionally it adds various enhancements \\n  and integrations for large global projects.\\n<p>\\n\\n<h2>Features</h2>\\n<ul>\\n  <li>Ready to go, statically typed build system using Gulp for working with TypeScript.</li>\\n  <li>Production and development builds.</li>\\n  <li>Sample unit tests with Jasmine and Karma including code coverage via Istanbul.</li>\\n  <li>End-to-end tests with Protractor.</li>\\n  <li>Development server with live reload.</li>\\n  <li>TypeScript definition management using Typings.</li>\\n  <li>Basic Service Worker, which implements \\\"Cache then network strategy\\\".</li>\\n  <li>Integration with <a href=\\\"https://lodash.com/\\\" target=\\\"blank\\\">lodash</a>.</li>\\n  <li>RxJS powered state management (Redux) via <a href=\\\"https://github.com/ngrx/store\\\" target=\\\"blank\\\">ngrx/store</a>.</li>\\n  <li>i18n with <a href=\\\"https://github.com/ocombe/ng2-translate\\\" target=\\\"blank\\\">ng2-translate</a>.</li>\\n  <li>Native cross platform app development with <a href=\\\"https://www.nativescript.org/\\\" target=\\\"blank\\\">NativeScript</a>.</li>\\n</ul>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/about/about.component.html\n ** module id = 486\n ** module chunks = 2\n **/","module.exports = \":host{display:block;padding:0 16px}h2{font-size:20px;font-weight:500;letter-spacing:.005em;margin-bottom:0;margin-top:.83em}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/about/about.component.scss\n ** module id = 693\n ** module chunks = 2\n **/","import {BaseComponent} from 'frameworks/core.framework';\n\n@BaseComponent({\n  selector: 'sd-about',\n  template: require('./about.component.html'),\n\tstyles: [require('./about.component.scss')]\n})\nexport class AboutComponent  {\n  \n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/about/about.component.ts\n **/","export * from './about.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/about/index.ts\n **/","module.exports = \"<div platform>\\n  <sd-toolbar></sd-toolbar>\\n  <sd-navbar></sd-navbar>\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/app.component.html\n ** module id = 487\n ** module chunks = 2\n **/","module.exports = \"body,div,html{border:0;margin:0;padding:0}*{box-sizing:border-box}body{font-family:Roboto,Helvetica Neue,sans-serif;font-size:16px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host p{font-weight:400;letter-spacing:.01em;line-height:20px;margin-bottom:1em;margin-top:1em}:host ul{margin:10px 0 0;padding:0 0 0 20px}:host li{font-weight:400;margin-top:4px}:host input{border:1px solid #106cc8;outline:none;padding:8px}:host button,:host input{font-size:14px;height:40px}:host button{background-color:#106cc8;border-style:none;color:hsla(0,0%,100%,.87);cursor:pointer;display:inline-block;padding:8px 18px;text-decoration:none}:host button:hover{background-color:#28739e}:host .desktop lang-switcher{display:none}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/app.component.scss\n ** module id = 694\n ** module chunks = 2\n **/","// angular\nimport {ChangeDetectionStrategy} from '@angular/core';\nimport {RouteConfig} from '@angular/router-deprecated';\n\n// app\nimport {NameListService} from 'frameworks/app.framework';\nimport {AnalyticsService} from 'frameworks/analytics.framework';\nimport {RouteComponent, PlatformDirective} from 'frameworks/core.framework';\nimport {LangSwitcherComponent} from 'frameworks/i18n.framework';\nimport {NavbarComponent} from './navbar.component';\nimport {ToolbarComponent} from './toolbar.component';\nimport {HomeComponent} from './home';\nimport {AboutComponent} from './about';\n\n@RouteComponent({\n  selector: 'app',\n  viewProviders: [NameListService],\n  template: require('./app.component.html'),\n  styles: [require('./app.component.scss')],\n  directives: [LangSwitcherComponent, NavbarComponent, ToolbarComponent, PlatformDirective],\n  changeDetection: ChangeDetectionStrategy.Default // Everything else uses OnPush\n})\n@RouteConfig([\n  {\n    path: '/',\n    component: HomeComponent,\n    name: 'Home',\n    useAsDefault: true\n  },\n  {\n    path: '/about',\n    component: AboutComponent,\n    //loader: () => require('es6-promise!./about')('About'),\n    name: 'About'\n  }\n])\nexport class AppComponent {\n  constructor(public analytics: AnalyticsService) {\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/app.component.ts\n **/","module.exports = \"<h2>\\n  {{ 'LOVE_TECH' | translate }} <smile></smile>\\n</h2>\\n\\n<p>\\n  {{'ABOUT_REWARD' | translate}}\\n</p>\\n<p>\\n  {{'ABOUT_ADD' | translate}}\\n</p>\\n\\n<form (submit)=\\\"addName()\\\">\\n  <input [(ngModel)]=\\\"newName\\\" [placeholder]=\\\"'INPUT_HINT' | translate\\\">\\n  <button type=\\\"submit\\\">{{'ADD_BTN_TEXT' | translate}}</button>\\n</form>\\n\\n<ul>\\n  <li *ngFor=\\\"let name of nameListService.names | async\\\">{{name}}</li>\\n</ul>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/home/home.component.html\n ** module id = 488\n ** module chunks = 2\n **/","module.exports = \":host{display:block;padding:0 16px}input{width:250px}ul{list-style-type:none;padding:0 0 0 8px}smile{background:url(\\\"/assets/svg/smile.svg\\\");height:48px;width:48px;display:inline-block;-webkit-transform:scale(.6);transform:scale(.6);margin-top:-25px;position:relative;top:16px}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/home/home.component.scss\n ** module id = 695\n ** module chunks = 2\n **/","// libs\nimport {Store} from '@ngrx/store';\n\n// app\nimport {FormComponent} from 'frameworks/core.framework';\nimport {NameListService} from 'frameworks/app.framework';\n\n@FormComponent({\n  selector: 'sd-home',\n  template: require('./home.component.html'),\n  styles: [require('./home.component.scss')]\n})\nexport class HomeComponent {\n  public newName: string = '';\n  constructor(private store: Store<any>, public nameListService: NameListService) { \n\n  }\n  \n  /*\n   * @param newname  any text as input.\n   * @returns return false to prevent default form submit behavior to refresh the page.\n   */\n  addName(): boolean {\n    this.nameListService.add(this.newName);\n    this.newName = '';\n    return false;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/home/home.component.ts\n **/","export * from './home.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/home/index.ts\n **/","module.exports = \"<nav>\\n  <a [routerLink]=\\\"['/Home']\\\">{{'HOME' | translate}}</a>\\n  <a [routerLink]=\\\"['/About']\\\">{{'ABOUT' | translate}}</a>\\n</nav>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/navbar.component.html\n ** module id = 489\n ** module chunks = 2\n **/","module.exports = \":host{border-color:#e1e1e1;border-style:solid;border-width:0 0 1px;display:block;height:48px;padding:0 16px}nav a{color:#8f8f8f;font-size:14px;font-weight:500;line-height:48px;margin-right:20px;text-decoration:none;vertical-align:middle}nav a.router-link-active{color:#106cc8}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/navbar.component.scss\n ** module id = 696\n ** module chunks = 2\n **/","// libs\nimport {Store} from '@ngrx/store';\nimport {RouterState} from 'ngrx-store-router';\n\n// app\nimport {AppStoreI} from 'frameworks/app.framework';\nimport {RouteComponent} from 'frameworks/core.framework';\n\n@RouteComponent({\n  selector: 'sd-navbar',\n  template: require('./navbar.component.html'),\n  styles: [require('./navbar.component.scss')]\n})\nexport class NavbarComponent {\n  // TODO: remove when {N} router supports active states\n  public activeLink: any = {\n    home: true,\n    about: false\n  };\n  \n  constructor(public store: Store<AppStoreI>) {  \n    store.select('router').subscribe((router: RouterState) => {\n      if (!router.navigating) {\n        switch (router.url) {\n          case '':\n            this.activeLink.home = true;\n            this.activeLink.about = false;\n            break;\n          case '/about':\n            this.activeLink.home = false;\n            this.activeLink.about = true;\n            break;\n        }\n      }\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/navbar.component.ts\n **/","module.exports = \"<h1>Angular2 Webpack Advance Starter</h1>\\n<lang-switcher></lang-switcher>\\n<more></more>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/toolbar.component.html\n ** module id = 490\n ** module chunks = 2\n **/","module.exports = \":host{background-color:#106cc8;color:hsla(0,0%,100%,.87);display:block;height:48px;padding:0 16px;position:relative}h1{display:inline;font-size:20px;font-weight:400;letter-spacing:.1px;line-height:48px}:host lang-switcher,:host more{position:absolute}:host lang-switcher{top:13px;right:52px}:host more{background:url(\\\"/assets/svg/more.svg\\\");top:12px;right:10px;height:24px;width:24px;cursor:pointer;opacity:.7}:host more:hover{opacity:1}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/toolbar.component.scss\n ** module id = 697\n ** module chunks = 2\n **/","// app\nimport {BaseComponent, LogService} from 'frameworks/core.framework';\nimport {LangSwitcherComponent} from 'frameworks/i18n.framework';\nimport {NavbarComponent} from './navbar.component';\n\n@BaseComponent({\n  selector: 'sd-toolbar',\n  template: require('./toolbar.component.html'),\n  styles: [require('./toolbar.component.scss')],\n  directives: [LangSwitcherComponent, NavbarComponent]\n})\nexport class ToolbarComponent {\n  \n  constructor(private log: LogService) {}\n  \n  public openLanguages(e: any): void {\n    this.log.debug('openLanguages');\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/toolbar.component.ts\n **/","// libs\nimport {Angulartics2} from 'angulartics2';\nimport {Angulartics2Segment} from 'angulartics2/src/providers/angulartics2-segment';\n\n// app\nimport {AnalyticsService} from './services/analytics.service';\n\nexport const ANALYTICS_PROVIDERS: any[] = [\n  Angulartics2,\n  Angulartics2Segment,\n  AnalyticsService\n];\n\n// services\nexport * from './services/analytics.service';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/analytics.framework/index.ts\n **/","// angular\nimport {Injectable, Inject} from '@angular/core';\n\n// libs\nimport {extend} from 'lodash';\nimport {Angulartics2} from 'angulartics2';\nimport {Angulartics2Segment} from 'angulartics2/src/providers/angulartics2-segment';\n\nexport interface IAnalyticsProperties {\n  category?: string;\n  label?: string;\n  value?: number;\n}\n\nexport interface IAnalytics {\n  track(action: string, properties: IAnalyticsProperties): void;\n}\n\n/**\n * Wrapper for Angulartics2\n */\n@Injectable()\nexport class AnalyticsService implements IAnalytics {\n\n  constructor(private angulartics2: Angulartics2, private segment: Angulartics2Segment) {\n    // options\n    // https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#L90-L104\n    // angulartics2.virtualPageviews(value: boolean);\n    // angulartics2.excludeRoutes(routes: Array<string>);\n    // angulartics2.firstPageview(value: boolean);\n    // angulartics2.withBase(value: string);\n \n    this.devMode(false);\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  public track(action: string, properties: IAnalyticsProperties): void {\n    if (!this.devMode()) {\n      this.segment.eventTrack(action, properties);\n    } \n  }\n\n  /**\n   * Called automatically by default with Angular 2 Routing\n   * However, that can be turned off and this could be used manually\n   **/\n  public pageTrack(path: string, location: any) {\n    if (!this.devMode()) {\n      this.segment.pageTrack(path, location);\n    }\n  }\n\n  /**\n   * Identify authenticated users\n   **/\n  public identify(properties: any) {\n    if (!this.devMode()) {\n      this.segment.setUserProperties(properties);\n    }\n  }\n\n  /**\n   * Control whether analytics are tracked\n   * true: dev mode on, therefore do not track anything\n   * false: dev mode off, track everything\n   **/\n  public devMode(enable?: boolean): boolean {\n    if (typeof enable !== 'undefined') {\n      this.angulartics2.developerMode(enable);\n    } \n    return this.angulartics2.settings.developerMode;\n  }   \n}\n\n/**\n * Base class\n * Standardizes tracking actions and categorization\n */\nexport class Analytics implements IAnalytics {\n  // sub-classes should define their category\n  public category: string;\n\n  constructor(@Inject(AnalyticsService) public analytics: AnalyticsService) {\n\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  track(action: string, properties: IAnalyticsProperties): void {\n    this.analytics.track(action, extend(properties, { category: this.category }));\n  }     \n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/analytics.framework/services/analytics.service.ts\n **/","// libs\nimport {provideStore} from '@ngrx/store';\nimport {routerReducer, routerMiddleware, RouterState} from 'ngrx-store-router';\n\n// app\nimport {nameListReducer} from './services/name-list.service';\nimport {MULTILINGUAL_PROVIDERS, MultilingualStateI, multilingualReducer} from '../i18n.framework';\n\n// state definition\nexport interface AppStoreI {\n  router: RouterState;\n  i18n: MultilingualStateI;\n  names: Array<string>;\n};\n\nexport const APP_PROVIDERS: any[] = [\n  MULTILINGUAL_PROVIDERS,\n  provideStore({ \n    router: routerReducer, \n    i18n: multilingualReducer,\n    names: nameListReducer\n  }),\n  routerMiddleware\n];\n\n// services\nexport * from './services/app-config.service';\nexport * from './services/name-list.service';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/app.framework/index.ts\n **/","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\n// libs\nimport {Store, Reducer, Action} from '@ngrx/store';\n\n// app\nimport {Analytics, AnalyticsService} from 'frameworks/analytics.framework/index';\nimport {HttpService} from 'frameworks/core.framework/index';\n\n// analytics\nconst CATEGORY: string = 'NameList';\n\n/**\n * ngrx setup start --\n */\nexport const NAME_LIST_ACTIONS: any = {\n  INIT: `[${CATEGORY}] INIT`,\n  NAME_ADDED: `[${CATEGORY}] NAME_ADDED`\n};\n\nexport const nameListReducer: Reducer<any> = (state: any = [], action: Action) => {\n  switch (action.type) {\n    case NAME_LIST_ACTIONS.INIT:\n      return [...action.payload];\n    case NAME_LIST_ACTIONS.NAME_ADDED:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n/**\n * ngrx end --\n */\n\n@Injectable()\nexport class NameListService extends Analytics {\n  public names: Observable<any>;\n\n  constructor(public analytics: AnalyticsService, private store: Store<any>, private http: HttpService) {\n    super(analytics);\n    this.category = CATEGORY;\n\n    this.names = store.select('names');\n\n    this.init();\n  }  \n\n  init() {\n    this.http.get(`assets/data.json`)\n      .subscribe((results: string[]) => {\n        this.store.dispatch({ type: NAME_LIST_ACTIONS.INIT, payload: results });\n      });\n  }\n\n  add(name: string): void {\n    this.track(NAME_LIST_ACTIONS.NAME_ADDED, { label: name });\n    this.store.dispatch({ type: NAME_LIST_ACTIONS.NAME_ADDED, payload: name });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/app.framework/services/name-list.service.ts\n **/","import {DecoratorUtils} from './utils';\n\nexport function BaseComponent(metadata: any={}) {\n  return function(cls: any) {\n    return DecoratorUtils.annotateComponent(cls, metadata);\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/decorators/base.component.ts\n **/","import {DecoratorUtils} from './utils';\n\nimport {FORM_DIRECTIVES} from '@angular/common';\n\nexport function FormComponent(metadata: any={}) {\n  return function(cls: any) {\n    return DecoratorUtils.annotateComponent(cls, metadata, {\n      directives: FORM_DIRECTIVES\n    });\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/decorators/form.component.ts\n **/","import {CoreConfigService} from '../services/core-config.service';\nimport {DecoratorUtils} from './utils';\n\nexport function RouteComponent(metadata: any={}) {\n  return function(cls: any) {\n    return DecoratorUtils.annotateComponent(cls, metadata, {\n      directives: CoreConfigService.ROUTER_DIRECTIVES\n    });\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/decorators/route.component.ts\n **/","// angular\nimport {Component, ChangeDetectionStrategy} from '@angular/core';\n\n// libs\nimport {TranslatePipe} from 'ng2-translate/ng2-translate';\n\n// app\nimport {CoreConfigService, ViewBrokerService} from '../index';\n\ndeclare var Reflect: any;\nconst _reflect: any = Reflect;\n\nexport class DecoratorUtils {\n  public static getMetadata(metadata: any = {}, customDecoratorMetadata?: any) {\n\n    /**\n     * The following allows default component metadata to be configured\n     * For instance, here we make `TranslatePipe` available for all our components\n     */\n    // default directives\n    let DIRECTIVES: any[] = [];\n    // default pipes\n    let PIPES: any[] = [TranslatePipe];\n\n    // custom decorator options\n    if (customDecoratorMetadata) {\n      if (customDecoratorMetadata.directives) {\n        DIRECTIVES.push(...customDecoratorMetadata.directives);\n      }\n      if (customDecoratorMetadata.pipes) {\n        PIPES.push(...customDecoratorMetadata.pipes); \n      }\n    }\n\n    if (metadata.templateUrl) {\n      // correct view for platform target\n      metadata.templateUrl = ViewBrokerService.TEMPLATE_URL(metadata.templateUrl);\n    }\n\n    if (metadata.styleUrls && CoreConfigService.IS_MOBILE_NATIVE()) {\n      // {N} doesn't support all css properties, therefore remove styleUrls to be safe\n      delete metadata.styleUrls;\n    }\n\n    if (metadata.styles && CoreConfigService.IS_MOBILE_NATIVE()) {\n      // {N} doesn't support all css properties, therefore remove style to be safe\n      delete metadata.styles;\n    }\n\n    metadata.directives = metadata.directives ? metadata.directives.concat(DIRECTIVES) : DIRECTIVES;\n    metadata.pipes = metadata.pipes ? metadata.pipes.concat(PIPES) : PIPES;\n\n    if (metadata.changeDetection) {\n      metadata.changeDetection = metadata.changeDetection;\n    } else {\n      // default OnPush\n      metadata.changeDetection = ChangeDetectionStrategy.OnPush;\n    }\n\n    if (metadata.encapsulation) {\n      metadata.encapsulation = metadata.encapsulation;\n    }\n\n    // initialize anything \n    if (metadata.init) {\n      metadata.init();\n    }   \n    \n    return metadata;\n  }\n  \n  public static annotateComponent(cls: any, metadata: any = {}, customDecoratorMetadata?: any) {\n    let annotations = _reflect.getMetadata('annotations', cls) || [];\n    annotations.push(new Component(DecoratorUtils.getMetadata(metadata, customDecoratorMetadata)));\n    _reflect.defineMetadata('annotations', annotations, cls);\n    return cls;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/decorators/utils.ts\n **/","// angular\nimport {Directive, ElementRef, Renderer} from '@angular/core';\n\n// app\nimport {WindowService} from '../services/window.service';\n\n@Directive({\n  selector: '[platform]'\n})\nexport class PlatformDirective {\n\n  constructor(private el: ElementRef, private renderer: Renderer, private win: WindowService) {\n    let platformClass = 'web';\n    let agent = win.navigator.userAgent.toLowerCase();\n    if (agent.indexOf('electron') > -1) {\n      platformClass = 'desktop';\n    } else if (agent.indexOf('nativescript') > -1) {\n      platformClass = 'nativescript';\n    } \n    renderer.setElementClass(el.nativeElement, platformClass, true);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/directives/platform.directive.ts\n **/","// angular\nimport {HTTP_PROVIDERS} from '@angular/http';\nimport {ROUTER_PROVIDERS} from '@angular/router-deprecated';\n\n// app\nimport {LogService} from './services/log.service';\nimport {HttpService} from './services/http.service';\n\nexport const CORE_PROVIDERS: any[] = [\n  HTTP_PROVIDERS,\n  ROUTER_PROVIDERS,\n  LogService, \n  HttpService\n];\n\n// decorators\nexport * from './decorators/base.component';\nexport * from './decorators/form.component';\nexport * from './decorators/route.component';\n\n// interfaces\nexport * from './interfaces/iconsole';\nexport * from './interfaces/iwindow';\nexport * from './interfaces/ilang';\n\n// services\nexport * from './services/core-config.service';\nexport * from './services/console.service';\nexport * from './services/log.service';\nexport * from './services/http.service';\nexport * from './services/view-broker.service';\nexport * from './services/window.service';\n\n// directives\nexport * from './directives/platform.directive';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/index.ts\n **/","import {Injectable} from '@angular/core';\n\nimport {IConsole} from '../interfaces/iconsole';\n\n@Injectable()\nexport class ConsoleService implements IConsole {\n  \n  public log(m: any): void { return; }\n  public debug(m: any): void { return; }\n  public error(m: any): void { return; }\n  public warn(m: any): void { return; }\n  public info(m: any): void { return; }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/services/console.service.ts\n **/","// angular\nimport {ROUTER_DIRECTIVES} from '@angular/router-deprecated';\n\ninterface IPlatforms {\n  WEB: string;\n  MOBILE_NATIVE: string;\n  MOBILE_HYBRID: string;\n  DESKTOP: string;\n}\n\nexport class CoreConfigService {\n  \n  public static DEBUG: any = {\n    LEVEL_1: false, // .info only\n    LEVEL_2: false, // .warn only\n    LEVEL_3: false, // .error only\n    LEVEL_4: false  // .log + all the above\n  };\n  \n  // allows runtime config of platform specific router directives\n  public static ROUTER_DIRECTIVES: Array<any> = ROUTER_DIRECTIVES;\n  \n  // supported platforms\n  public static PLATFORMS: IPlatforms = {\n    WEB: 'web',\n    MOBILE_NATIVE: 'mobile_native',\n    MOBILE_HYBRID: 'mobile_hybrid',\n    DESKTOP: 'desktop'\n  };\n  \n  // current target (defaults to web)\n  public static PLATFORM_TARGET: string = CoreConfigService.PLATFORMS.WEB; \n  \n  // convenient platform checks\n  public static IS_WEB(): boolean {\n    return CoreConfigService.PLATFORM_TARGET === CoreConfigService.PLATFORMS.WEB;\n  }\n  \n  public static IS_MOBILE_NATIVE(): boolean {\n    return CoreConfigService.PLATFORM_TARGET === CoreConfigService.PLATFORMS.MOBILE_NATIVE;\n  }\n  \n  public static IS_MOBILE_HYBRID(): boolean {\n    return CoreConfigService.PLATFORM_TARGET === CoreConfigService.PLATFORMS.MOBILE_HYBRID;\n  }\n  \n  public static IS_DESKTOP(): boolean {\n    return CoreConfigService.PLATFORM_TARGET === CoreConfigService.PLATFORMS.DESKTOP;\n  }\n  \n  public static IS_DEBUG_MODE(): boolean {\n    for (let key in CoreConfigService.DEBUG) {\n      if (CoreConfigService.DEBUG[key]) {\n        // if any level is on, debug mode is on\n        return true;\n      }\n    }\n    return false;\n  }    \n  \n  // reset debug defaults\n  public static RESET() {\n    for (let key in CoreConfigService.DEBUG) {\n      CoreConfigService.DEBUG[key] = false; \n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/services/core-config.service.ts\n **/","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n/*\n* Allows for providing hooks for cross platform dev.\n* ie., {N} needs to use file-system api to get local files\n*/\n@Injectable()\nexport class HttpService {\n  constructor(private http:Http) {\n    \n  }\n  \n  public get(url: string): Observable<any> {\n    return this.http.get(url)\n      .map((response: Response) => response.json());\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/services/http.service.ts\n **/","import {Injectable, Inject, forwardRef} from '@angular/core';\n\nimport {CoreConfigService, ConsoleService} from '../';\n\n@Injectable()\nexport class LogService {\n\n  constructor(@Inject(forwardRef(() => ConsoleService)) public logger: ConsoleService) {}\n  \n  // debug (standard output)\n  public debug(msg: string) { \n    if (CoreConfigService.DEBUG.LEVEL_4) {\n      this.logger.debug(msg);  \n    }\n  }\n  \n  // error\n  public error(err: any) {\n    if (CoreConfigService.DEBUG.LEVEL_4 || CoreConfigService.DEBUG.LEVEL_3) {\n      this.logger.error(err);  \n    }\n  }\n  \n  // warn\n  public warn(err: any) {\n    if (CoreConfigService.DEBUG.LEVEL_4 || CoreConfigService.DEBUG.LEVEL_2) {\n      this.logger.warn(err);  \n    }\n  }\n  \n  // info\n  public info(err: any) {\n    if (CoreConfigService.DEBUG.LEVEL_4 || CoreConfigService.DEBUG.LEVEL_1) {\n      this.logger.info(err);  \n    }\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/services/log.service.ts\n **/","import {CoreConfigService} from './core-config.service';\n\nexport class ViewBrokerService {\n  \n  public static TEMPLATE_URL(path: string): string {  \n    if (CoreConfigService.IS_MOBILE_NATIVE()) {\n      let paths = path.split('.');\n      paths.splice(-1);\n      return `${paths.join('.')}.tns.html`;\n    } else {\n      return path;\n    } \n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/services/view-broker.service.ts\n **/","import {Injectable} from '@angular/core';\n\nimport {IWindow} from '../interfaces/iwindow';\n\n@Injectable()\nexport class WindowService implements IWindow {\n  \n  public navigator: any = {};\n  public location: any = {};\n  public alert(msg: string): void { return; }\n  public confirm(msg: string): void { return; }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/core.framework/services/window.service.ts\n **/","// services\nexport * from './services/event.service';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/electron.framework/index.ts\n **/","import {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\n\ndeclare var window: any;\n\nexport class ElectronEventService {\n\n  public static on(name: string): Observable<any> {\n    return Observable.fromEvent(window, name);\n  }\n\n  // TODO: add more helpers for menu setup and more...  \n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/electron.framework/services/event.service.ts\n **/","module.exports = \"<form [ngFormModel]=\\\"langForm\\\">\\n  Change Language: <select ngControl=\\\"lang\\\" (change)=\\\"changeLang($event)\\\">\\n    <option *ngFor=\\\"let l of supportedLanguages\\\" [value]=\\\"l.code\\\">{{l.title}}</option>\\n  </select>\\n</form>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/frameworks/i18n.framework/components/lang-switcher.component.html\n ** module id = 491\n ** module chunks = 2\n **/","// angular\nimport {ControlGroup, Control} from '@angular/common';\n\n// libs\nimport {Store} from '@ngrx/store';\n// app\nimport {FormComponent, CoreConfigService, LogService, ILang} from 'frameworks/core.framework';\nimport {ElectronEventService} from 'frameworks/electron.framework';\nimport {MultilingualService} from '../index';\n\n@FormComponent({\n  selector: 'lang-switcher',\n  template: require('frameworks/i18n.framework/components/lang-switcher.component.html')\n})\nexport class LangSwitcherComponent {\n  public langForm: ControlGroup;\n  public supportedLanguages: Array<ILang> = MultilingualService.SUPPORTED_LANGUAGES;\n  \n  constructor(private log: LogService, private store: Store<any>, private multilang: MultilingualService) {\n    this.langForm = new ControlGroup({\n      lang: new Control(store.getState().i18n.lang)\n    });\n\n    if (CoreConfigService.IS_DESKTOP()) {\n      // allow electron menu to talk to component\n      ElectronEventService.on('changeLang').subscribe((e: any) => {\n        this.changeLang({ target: { value: e.detail.value } });\n      });\n    }\n    console.log(CoreConfigService.IS_DESKTOP());\n  }\n  changeLang(e: any) {\n    let lang = this.supportedLanguages[0].code; // fallback to default 'en'\n    \n    if (CoreConfigService.IS_MOBILE_NATIVE()) {\n      if (e) {\n        lang = this.supportedLanguages[e.newIndex].code;\n      }\n    } else if (e && e.target) {\n      lang = e.target.value;\n    }\n    this.log.debug(`Language change: ${lang}`);\n    this.multilang.changeLang(lang);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/i18n.framework/components/lang-switcher.component.ts\n **/","// angular\nimport {provide} from '@angular/core';\nimport {Http} from '@angular/http';\n\n// libs\nimport {TranslateLoader, TranslateStaticLoader, TranslateService} from 'ng2-translate/ng2-translate';\n\n// app\nimport {MultilingualService} from './services/multilingual.service';\n\nexport const MULTILINGUAL_PROVIDERS: any[] = [\n  provide(TranslateLoader, {\n    deps: [Http],\n    useFactory: (http: Http) => new TranslateStaticLoader(http, 'assets/i18n', '.json')\n  }),\n  TranslateService,\n  MultilingualService\n];\n\n// services\nexport * from './services/multilingual.service';\n\n// components\nexport * from './components/lang-switcher.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/i18n.framework/index.ts\n **/","// angular\nimport {Injectable} from '@angular/core';\n\n// libs\nimport * as _ from 'lodash';\nimport {Store, Reducer, Action} from '@ngrx/store';\nimport {TranslateService} from 'ng2-translate/ng2-translate';\n\n// app\nimport {Analytics, AnalyticsService} from 'frameworks/analytics.framework';\nimport {WindowService, ILang} from 'frameworks/core.framework';\n\n// analytics\nconst CATEGORY: string = 'Multilingual';\n\n/**\n * ngrx start --\n */\nexport interface MultilingualStateI {\n  lang: string;\n}\n\nconst initialState: MultilingualStateI = {\n  lang: 'en'\n};\n\nexport const MULTILINGUAL_ACTIONS: any = {\n  LANG_CHANGE: `[${CATEGORY}] LANG_CHANGE`\n};\n\nexport const multilingualReducer: Reducer<MultilingualStateI> = (state: MultilingualStateI = initialState, action: Action) => {\n  switch (action.type) {\n    case MULTILINGUAL_ACTIONS.LANG_CHANGE:\n      return Object.assign({}, state, action.payload);\n    default:\n      return state;\n  }\n};\n/**\n * ngrx end --\n */\n\n// service\n@Injectable()\nexport class MultilingualService extends Analytics {\n  \n  // default supported languages\n  // see main.ts bootstrap for example of how to provide different value\n  public static SUPPORTED_LANGUAGES: Array<ILang> = [\n    { code: 'en', title: 'English' }\n  ];\n  \n  constructor(public analytics: AnalyticsService, private translate: TranslateService, private win: WindowService, private store: Store<any>) {\n    super(analytics);\n    this.category = CATEGORY;\n\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // use browser/platform lang if available\n    let userLang = win.navigator.language.split('-')[0];\n\n\n    // subscribe to changes\n    store.select('i18n').subscribe((state: MultilingualStateI) => {\n      // update ng2-translate which will cause translations to occur wherever the TranslatePipe is used in the view\n      this.translate.use(state.lang);\n    });\n    \n    // init the lang\n    this.changeLang(userLang);\n  }\n  \n  public changeLang(lang: string) {\n    if (_.includes(_.map(MultilingualService.SUPPORTED_LANGUAGES, 'code'), lang)) {\n      // only if lang supported\n      this.track(MULTILINGUAL_ACTIONS.LANG_CHANGE, { label: lang });\n      this.store.dispatch({ type: MULTILINGUAL_ACTIONS.LANG_CHANGE, payload: { lang } });\n    }\n  } \n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/frameworks/i18n.framework/services/multilingual.service.ts\n **/","// angular\nimport {provide, enableProdMode} from '@angular/core';\nimport {bootstrap} from '@angular/platform-browser-dynamic';\nimport {APP_BASE_HREF, LocationStrategy, HashLocationStrategy} from '@angular/common';\nimport {ELEMENT_PROBE_PROVIDERS} from '@angular/platform-browser';\n\n// config\nimport {CoreConfigService} from 'frameworks/core.framework';\nCoreConfigService.PLATFORM_TARGET = CoreConfigService.PLATFORMS.WEB;\nCoreConfigService.DEBUG.LEVEL_4 = true;\n\n// app\nimport {WindowService, ConsoleService, CORE_PROVIDERS} from 'frameworks/core.framework';\nimport {ANALYTICS_PROVIDERS} from 'frameworks/analytics.framework';\nimport {MultilingualService} from 'frameworks/i18n.framework';\nimport {APP_PROVIDERS, AppConfigService} from 'frameworks/app.framework';\nimport {AppComponent} from 'components/app.component';\n// custom i18n language support\nMultilingualService.SUPPORTED_LANGUAGES = AppConfigService.SUPPORTED_LANGUAGES;\n\nconst ENV_PROVIDERS: Array<any> = [];\nif (ENV === 'production' || (typeof TARGET_DESKTOP_BUILD !== 'undefined' && TARGET_DESKTOP_BUILD === true)) {\n  enableProdMode();\n} else {\n  ENV_PROVIDERS.push(ELEMENT_PROBE_PROVIDERS);\n}\n\nlet BOOTSTRAP_PROVIDERS: any[] = [\n  ENV_PROVIDERS,\n  provide(APP_BASE_HREF, { useValue: BASE_URL }),\n  provide(WindowService, { useValue: window }),\n  provide(ConsoleService, { useValue: console }),\n  CORE_PROVIDERS,\n  ANALYTICS_PROVIDERS,\n  APP_PROVIDERS\n];\n\nif (typeof TARGET_DESKTOP !== 'undefined' && TARGET_DESKTOP === true) {\n  CoreConfigService.PLATFORM_TARGET = CoreConfigService.PLATFORMS.DESKTOP;\n  // desktop (electron) must use hash\n  BOOTSTRAP_PROVIDERS.push(provide(LocationStrategy, { useClass: HashLocationStrategy }));\n}\n\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\nexport function main(initialHmrState?: any): Promise<any> {\n  return bootstrap(AppComponent, BOOTSTRAP_PROVIDERS)\n    .catch((err: any) => console.error(err));\n}\n\n// In order to start the Service Worker located at \"./worker.js\"\n// uncomment this line. More about Service Workers here\n// https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\n//\n// if ('serviceWorker' in navigator) {\n//   (<any>navigator).serviceWorker.register('./worker.js').then((registration: any) =>\n//       console.log('ServiceWorker registration successful with scope: ', registration.scope))\n//     .catch((err: any) =>\n//       console.log('ServiceWorker registration failed: ', err));\n// }\n\n/*\n * Vendors\n * For vendors for example jQuery, Lodash, angular2-jwt just import them anywhere in your app\n * You can also import them in vendors to ensure that they are bundled in one file\n * Also see custom-typings.d.ts as you also need to do `typings install x` where `x` is your module\n */\n\n\n/*\n * Hot Module Reload\n * experimental version by @gdi2290\n */\nif ('development' === ENV && HMR === true) {\n  // activate hot module reload\n  let ngHmr = require('angular2-hmr');\n  ngHmr.hotModuleReplacement(main, module);\n} else {\n  // bootstrap when document is ready\n  document.addEventListener('DOMContentLoaded', () => main());\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.browser.ts\n **/"],"sourceRoot":""}