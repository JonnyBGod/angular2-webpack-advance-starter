{"version":3,"sources":["webpack:///main.desktop.99d0a926e20efb51636e.bundle.js","webpack:///./src/main.desktop.ts","webpack:///external \"electron\""],"names":["exports","ids","modules","0","module","__webpack_require__","console","log","template","menu","electron","app","Menu","shell","crashReporter","BrowserWindow","mainWindow","undefined","app_config_service_1","start","productName","companyName","submitURL","autoSubmit","on","process","platform","quit","width","height","loadURL","__dirname","webContents","e","url","appTitle","langMenu","label","submenu","_loop_1","code","lang","langOption","title","click","executeJavaScript","push","_i","_a","AppConfigService","SUPPORTED_LANGUAGES","length","helpMenu","openExternal","selector","type","accelerator","setFullScreen","isFullScreen","buildFromTemplate","setApplicationMenu","close","setMenu","698","require"],"mappings":"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","file":"main.desktop.99d0a926e20efb51636e.bundle.js","sourcesContent":["exports.ids = [3];\nexports.modules = {\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t(\"production\") = (\"production\") || 'production';\r\n\tconsole.log(\"Electron launching with NODE_ENV: \" + (\"production\"));\r\n\t// electron\r\n\tvar electron = __webpack_require__(698);\r\n\tvar app = electron.app;\r\n\tvar Menu = electron.Menu;\r\n\tvar shell = electron.shell;\r\n\tvar crashReporter = electron.crashReporter;\r\n\tvar BrowserWindow = electron.BrowserWindow;\r\n\tvar mainWindow = undefined;\r\n\tvar template;\r\n\tvar menu;\r\n\t// app\r\n\tvar app_config_service_1 = __webpack_require__(327);\r\n\tcrashReporter.start({\r\n\t    productName: 'Angular2WebpackAdvanceStarter',\r\n\t    companyName: 'JonnyBGod',\r\n\t    submitURL: 'https://github.com/JonnyBGod/angular2-webpack-advance-starter',\r\n\t    autoSubmit: true\r\n\t});\r\n\tif (false) {\r\n\t    require('electron-debug')();\r\n\t}\r\n\tapp.on('window-all-closed', function () {\r\n\t    if (process.platform !== 'darwin') {\r\n\t        app.quit();\r\n\t    }\r\n\t});\r\n\tapp.on('ready', function () {\r\n\t    // Tell Electron where to load the entry point from\r\n\t    if (false) {\r\n\t        // Initialize the window to our specified dimensions\r\n\t        mainWindow = new BrowserWindow({ width: 900, height: 620,\r\n\t            webPreferences: {\r\n\t                preload: __dirname + '/assets/preloadDesktop.js'\r\n\t            }\r\n\t        });\r\n\t        mainWindow.loadURL('http://localhost:3000/');\r\n\t    }\r\n\t    else {\r\n\t        // Initialize the window to our specified dimensions\r\n\t        mainWindow = new BrowserWindow({ width: 900, height: 620 });\r\n\t        mainWindow.loadURL('file://' + __dirname + '/index.html');\r\n\t    }\r\n\t    // Clear out the main window when the app is closed\r\n\t    mainWindow.on('closed', function () {\r\n\t        mainWindow = undefined;\r\n\t    });\r\n\t    mainWindow.webContents.on('did-navigate-in-page', function (e, url) {\r\n\t        console.log(\"Page navigated: \" + url);\r\n\t    });\r\n\t    var appTitle = \"Angular 2 Seed Advanced\";\r\n\t    var langMenu = {\r\n\t        label: 'Language',\r\n\t        submenu: []\r\n\t    };\r\n\t    var _loop_1 = function() {\r\n\t        var code = lang.code;\r\n\t        var langOption = {\r\n\t            label: lang.title,\r\n\t            click: function () {\r\n\t                console.log(\"Change lang: \" + code);\r\n\t                mainWindow.webContents.executeJavaScript(\"window.dispatchEvent(new CustomEvent('changeLang', {detail: { value: '\" + code + \"'} }));\");\r\n\t            }\r\n\t        };\r\n\t        langMenu.submenu.push(langOption);\r\n\t    };\r\n\t    for (var _i = 0, _a = app_config_service_1.AppConfigService.SUPPORTED_LANGUAGES; _i < _a.length; _i++) {\r\n\t        var lang = _a[_i];\r\n\t        _loop_1();\r\n\t    }\r\n\t    var helpMenu = {\r\n\t        label: 'Help',\r\n\t        submenu: [{\r\n\t                label: 'Learn More',\r\n\t                click: function () {\r\n\t                    shell.openExternal('https://github.com/NathanWalker/angular2-seed-advanced');\r\n\t                }\r\n\t            }, {\r\n\t                label: 'Issues',\r\n\t                click: function () {\r\n\t                    shell.openExternal('https://github.com/NathanWalker/angular2-seed-advanced/issues');\r\n\t                }\r\n\t            }, {\r\n\t                label: \"My Amazing Parent: Minko Gechev's Angular 2 Seed\",\r\n\t                click: function () {\r\n\t                    shell.openExternal('https://github.com/mgechev/angular2-seed');\r\n\t                }\r\n\t            }, {\r\n\t                label: 'Angular 2',\r\n\t                click: function () {\r\n\t                    shell.openExternal('https://angular.io/');\r\n\t                }\r\n\t            }, {\r\n\t                label: 'Electron',\r\n\t                click: function () {\r\n\t                    shell.openExternal('http://electron.atom.io/');\r\n\t                }\r\n\t            }, {\r\n\t                label: 'Electron Docs',\r\n\t                click: function () {\r\n\t                    shell.openExternal('https://github.com/atom/electron/tree/master/docs');\r\n\t                }\r\n\t            }, {\r\n\t                label: 'Codeology Visualization',\r\n\t                click: function () {\r\n\t                    shell.openExternal('http://codeology.braintreepayments.com/nathanwalker/angular2-seed-advanced');\r\n\t                }\r\n\t            }]\r\n\t    };\r\n\t    if (process.platform === 'darwin') {\r\n\t        template = [{\r\n\t                label: appTitle,\r\n\t                submenu: [{\r\n\t                        label: \"About \" + appTitle,\r\n\t                        selector: 'orderFrontStandardAboutPanel:'\r\n\t                    }, {\r\n\t                        type: 'separator'\r\n\t                    }, {\r\n\t                        label: 'Services',\r\n\t                        submenu: []\r\n\t                    }, {\r\n\t                        type: 'separator'\r\n\t                    }, {\r\n\t                        label: 'Hide Angular 2 Seed Advanced',\r\n\t                        accelerator: 'Command+H',\r\n\t                        selector: 'hide:'\r\n\t                    }, {\r\n\t                        label: 'Hide Others',\r\n\t                        accelerator: 'Command+Shift+H',\r\n\t                        selector: 'hideOtherApplications:'\r\n\t                    }, {\r\n\t                        label: 'Show All',\r\n\t                        selector: 'unhideAllApplications:'\r\n\t                    }, {\r\n\t                        type: 'separator'\r\n\t                    }, {\r\n\t                        label: 'Quit',\r\n\t                        accelerator: 'Command+Q',\r\n\t                        click: function () {\r\n\t                            app.quit();\r\n\t                        }\r\n\t                    }]\r\n\t            }, {\r\n\t                label: 'Edit',\r\n\t                submenu: [{\r\n\t                        label: 'Undo',\r\n\t                        accelerator: 'Command+Z',\r\n\t                        selector: 'undo:'\r\n\t                    }, {\r\n\t                        label: 'Redo',\r\n\t                        accelerator: 'Shift+Command+Z',\r\n\t                        selector: 'redo:'\r\n\t                    }, {\r\n\t                        type: 'separator'\r\n\t                    }, {\r\n\t                        label: 'Cut',\r\n\t                        accelerator: 'Command+X',\r\n\t                        selector: 'cut:'\r\n\t                    }, {\r\n\t                        label: 'Copy',\r\n\t                        accelerator: 'Command+C',\r\n\t                        selector: 'copy:'\r\n\t                    }, {\r\n\t                        label: 'Paste',\r\n\t                        accelerator: 'Command+V',\r\n\t                        selector: 'paste:'\r\n\t                    }, {\r\n\t                        label: 'Select All',\r\n\t                        accelerator: 'Command+A',\r\n\t                        selector: 'selectAll:'\r\n\t                    }]\r\n\t            }, {\r\n\t                label: 'View',\r\n\t                submenu: ( false) ? [{\r\n\t                        label: 'Reload',\r\n\t                        accelerator: 'Command+R',\r\n\t                        click: function () {\r\n\t                            mainWindow.restart();\r\n\t                        }\r\n\t                    }, {\r\n\t                        label: 'Toggle Full Screen',\r\n\t                        accelerator: 'Ctrl+Command+F',\r\n\t                        click: function () {\r\n\t                            mainWindow.setFullScreen(!mainWindow.isFullScreen());\r\n\t                        }\r\n\t                    }, {\r\n\t                        label: 'Toggle Developer Tools',\r\n\t                        accelerator: 'Alt+Command+I',\r\n\t                        click: function () {\r\n\t                            mainWindow.toggleDevTools();\r\n\t                        }\r\n\t                    }] : [{\r\n\t                        label: 'Toggle Full Screen',\r\n\t                        accelerator: 'Ctrl+Command+F',\r\n\t                        click: function () {\r\n\t                            mainWindow.setFullScreen(!mainWindow.isFullScreen());\r\n\t                        }\r\n\t                    }]\r\n\t            }, {\r\n\t                label: 'Window',\r\n\t                submenu: [{\r\n\t                        label: 'Minimize',\r\n\t                        accelerator: 'Command+M',\r\n\t                        selector: 'performMiniaturize:'\r\n\t                    }, {\r\n\t                        label: 'Close',\r\n\t                        accelerator: 'Command+W',\r\n\t                        selector: 'performClose:'\r\n\t                    }, {\r\n\t                        type: 'separator'\r\n\t                    }, {\r\n\t                        label: 'Bring All to Front',\r\n\t                        selector: 'arrangeInFront:'\r\n\t                    }]\r\n\t            },\r\n\t            langMenu,\r\n\t            helpMenu];\r\n\t        menu = Menu.buildFromTemplate(template);\r\n\t        Menu.setApplicationMenu(menu);\r\n\t    }\r\n\t    else {\r\n\t        template = [{\r\n\t                label: '&File',\r\n\t                submenu: [{\r\n\t                        label: '&Open',\r\n\t                        accelerator: 'Ctrl+O'\r\n\t                    }, {\r\n\t                        label: '&Close',\r\n\t                        accelerator: 'Ctrl+W',\r\n\t                        click: function () {\r\n\t                            mainWindow.close();\r\n\t                        }\r\n\t                    }]\r\n\t            }, {\r\n\t                label: '&View',\r\n\t                submenu: ( false) ? [{\r\n\t                        label: '&Reload',\r\n\t                        accelerator: 'Ctrl+R',\r\n\t                        click: function () {\r\n\t                            mainWindow.restart();\r\n\t                        }\r\n\t                    }, {\r\n\t                        label: 'Toggle &Full Screen',\r\n\t                        accelerator: 'F11',\r\n\t                        click: function () {\r\n\t                            mainWindow.setFullScreen(!mainWindow.isFullScreen());\r\n\t                        }\r\n\t                    }, {\r\n\t                        label: 'Toggle &Developer Tools',\r\n\t                        accelerator: 'Alt+Ctrl+I',\r\n\t                        click: function () {\r\n\t                            mainWindow.toggleDevTools();\r\n\t                        }\r\n\t                    }] : [{\r\n\t                        label: 'Toggle &Full Screen',\r\n\t                        accelerator: 'F11',\r\n\t                        click: function () {\r\n\t                            mainWindow.setFullScreen(!mainWindow.isFullScreen());\r\n\t                        }\r\n\t                    }]\r\n\t            },\r\n\t            langMenu,\r\n\t            helpMenu];\r\n\t        menu = Menu.buildFromTemplate(template);\r\n\t        mainWindow.setMenu(menu);\r\n\t    }\r\n\t});\r\n\n\n/***/ },\n\n/***/ 698:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"electron\");\n\n/***/ }\n\n};;\n\n\n/** WEBPACK FOOTER **\n ** main.desktop.99d0a926e20efb51636e.bundle.js\n **/","process.env.NODE_ENV = process.env.NODE_ENV || 'production';\nconsole.log(`Electron launching with NODE_ENV: ${process.env.NODE_ENV}`);\n\n// electron\nconst electron: any = require('electron');\nconst app: any = electron.app;\nconst Menu: any = electron.Menu;\nconst shell: any = electron.shell;\nconst crashReporter: any = electron.crashReporter;\nconst BrowserWindow: any = electron.BrowserWindow;\nlet mainWindow: any = undefined;\nlet template: any;\nlet menu: any;\n\n// app\nimport {AppConfigService} from 'frameworks/app.framework/services/app-config.service';\n\ncrashReporter.start({\n  productName: 'Angular2WebpackAdvanceStarter',\n  companyName: 'JonnyBGod',\n  submitURL: 'https://github.com/JonnyBGod/angular2-webpack-advance-starter',\n  autoSubmit: true\n});\n\nif (process.env.NODE_ENV === 'development') {\n  require('electron-debug')();\n}\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('ready', () => {\n\n  // Tell Electron where to load the entry point from\n  if (process.env.NODE_ENV === 'development') {\n    // Initialize the window to our specified dimensions\n    mainWindow = new BrowserWindow({ width: 900, height: 620,\n      webPreferences: {\n        preload: __dirname + '/assets/preloadDesktop.js'\n      }\n    });\n\n    mainWindow.loadURL('http://localhost:3000/');\n  } else {\n    // Initialize the window to our specified dimensions\n    mainWindow = new BrowserWindow({ width: 900, height: 620 });\n\n    mainWindow.loadURL('file://' + __dirname + '/index.html');\n  }\n\n  // Clear out the main window when the app is closed\n  mainWindow.on('closed', () => {\n    mainWindow = undefined;\n  });\n\n  mainWindow.webContents.on('did-navigate-in-page', (e: any, url: string) => {\n    console.log(`Page navigated: ${url}`);\n  });\n\n  let appTitle: string = `Angular 2 Seed Advanced`;\n\n  let langMenu: any = {\n    label: 'Language',\n    submenu: []\n  };\n  for (var lang of AppConfigService.SUPPORTED_LANGUAGES) {\n    let code = lang.code;\n    let langOption = {\n      label: lang.title,\n      click:() => {\n        console.log(`Change lang: ${code}`);\n        mainWindow.webContents.executeJavaScript(`window.dispatchEvent(new CustomEvent('changeLang', {detail: { value: '${code}'} }));`);\n      }\n    };\n    langMenu.submenu.push(langOption);\n  }\n\n  let helpMenu: any = {\n    label: 'Help',\n    submenu: [{\n      label: 'Learn More',\n      click:() => {\n        shell.openExternal('https://github.com/NathanWalker/angular2-seed-advanced');\n      }\n    }, {\n        label: 'Issues',\n        click:() => {\n          shell.openExternal('https://github.com/NathanWalker/angular2-seed-advanced/issues');\n        }\n      }, {\n        label: `My Amazing Parent: Minko Gechev's Angular 2 Seed`,\n        click:() => {\n          shell.openExternal('https://github.com/mgechev/angular2-seed');\n        }\n      }, {\n        label: 'Angular 2',\n        click:() => {\n          shell.openExternal('https://angular.io/');\n        }\n      }, {\n        label: 'Electron',\n        click:() => {\n          shell.openExternal('http://electron.atom.io/');\n        }\n      }, {\n        label: 'Electron Docs',\n        click: () => {\n          shell.openExternal('https://github.com/atom/electron/tree/master/docs');\n        }\n      }, {\n        label: 'Codeology Visualization',\n        click:() => {\n          shell.openExternal('http://codeology.braintreepayments.com/nathanwalker/angular2-seed-advanced');\n        }\n      }]\n  };\n\n  if (process.platform === 'darwin') {\n    template = [{\n      label: appTitle,\n      submenu: [{\n        label: `About ${appTitle}`,\n        selector: 'orderFrontStandardAboutPanel:'\n      }, {\n          type: 'separator'\n        }, {\n          label: 'Services',\n          submenu: []\n        }, {\n          type: 'separator'\n        }, {\n          label: 'Hide Angular 2 Seed Advanced',\n          accelerator: 'Command+H',\n          selector: 'hide:'\n        }, {\n          label: 'Hide Others',\n          accelerator: 'Command+Shift+H',\n          selector: 'hideOtherApplications:'\n        }, {\n          label: 'Show All',\n          selector: 'unhideAllApplications:'\n        }, {\n          type: 'separator'\n        }, {\n          label: 'Quit',\n          accelerator: 'Command+Q',\n          click:() => {\n            app.quit();\n          }\n        }]\n    }, {\n        label: 'Edit',\n        submenu: [{\n          label: 'Undo',\n          accelerator: 'Command+Z',\n          selector: 'undo:'\n        }, {\n            label: 'Redo',\n            accelerator: 'Shift+Command+Z',\n            selector: 'redo:'\n          }, {\n            type: 'separator'\n          }, {\n            label: 'Cut',\n            accelerator: 'Command+X',\n            selector: 'cut:'\n          }, {\n            label: 'Copy',\n            accelerator: 'Command+C',\n            selector: 'copy:'\n          }, {\n            label: 'Paste',\n            accelerator: 'Command+V',\n            selector: 'paste:'\n          }, {\n            label: 'Select All',\n            accelerator: 'Command+A',\n            selector: 'selectAll:'\n          }]\n      }, {\n        label: 'View',\n        submenu: (process.env.NODE_ENV === 'development') ? [{\n          label: 'Reload',\n          accelerator: 'Command+R',\n          click:() => {\n            mainWindow.restart();\n          }\n        }, {\n            label: 'Toggle Full Screen',\n            accelerator: 'Ctrl+Command+F',\n            click:() => {\n              mainWindow.setFullScreen(!mainWindow.isFullScreen());\n            }\n          }, {\n            label: 'Toggle Developer Tools',\n            accelerator: 'Alt+Command+I',\n            click:() => {\n              mainWindow.toggleDevTools();\n            }\n          }] : [{\n            label: 'Toggle Full Screen',\n            accelerator: 'Ctrl+Command+F',\n            click:() => {\n              mainWindow.setFullScreen(!mainWindow.isFullScreen());\n            }\n          }]\n      }, {\n        label: 'Window',\n        submenu: [{\n          label: 'Minimize',\n          accelerator: 'Command+M',\n          selector: 'performMiniaturize:'\n        }, {\n            label: 'Close',\n            accelerator: 'Command+W',\n            selector: 'performClose:'\n          }, {\n            type: 'separator'\n          }, {\n            label: 'Bring All to Front',\n            selector: 'arrangeInFront:'\n          }]\n      },\n      langMenu,\n      helpMenu];\n\n    menu = Menu.buildFromTemplate(template);\n    Menu.setApplicationMenu(menu);\n  } else {\n    template = [{\n      label: '&File',\n      submenu: [{\n        label: '&Open',\n        accelerator: 'Ctrl+O'\n      }, {\n          label: '&Close',\n          accelerator: 'Ctrl+W',\n          click:() => {\n            mainWindow.close();\n          }\n        }]\n    }, {\n        label: '&View',\n        submenu: (process.env.NODE_ENV === 'development') ? [{\n          label: '&Reload',\n          accelerator: 'Ctrl+R',\n          click:() => {\n            mainWindow.restart();\n          }\n        }, {\n            label: 'Toggle &Full Screen',\n            accelerator: 'F11',\n            click:() => {\n              mainWindow.setFullScreen(!mainWindow.isFullScreen());\n            }\n          }, {\n            label: 'Toggle &Developer Tools',\n            accelerator: 'Alt+Ctrl+I',\n            click:() => {\n              mainWindow.toggleDevTools();\n            }\n          }] : [{\n            label: 'Toggle &Full Screen',\n            accelerator: 'F11',\n            click:() => {\n              mainWindow.setFullScreen(!mainWindow.isFullScreen());\n            }\n          }]\n      },\n      langMenu,\n      helpMenu];\n    menu = Menu.buildFromTemplate(template);\n    mainWindow.setMenu(menu);\n  }\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.desktop.ts\n **/","module.exports = require(\"electron\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"electron\"\n ** module id = 698\n ** module chunks = 3\n **/"],"sourceRoot":""}